/**
 * @description Onsight Engine
 * @about       Easy to use 2D / 3D JavaScript game engine.
 * @author      Stephens Nunnally <@stevinz>
 * @version     v0.0.6
 * @license     MIT - Copyright (c) 2021-2023 Stephens Nunnally
 * @source      https://github.com/onsightengine
 */
import*as e from"three";import{mergeGeometries as t}from"three/addons/utils/BufferGeometryUtils.js";import s from"rapier";import{SVGLoader as i}from"three/addons/loaders/SVGLoader.js";import{Line2 as n}from"three/addons/lines/Line2.js";import{LineGeometry as a}from"three/addons/lines/LineGeometry.js";import{LineMaterial as r}from"three/addons/lines/LineMaterial.js";import{LineSegmentsGeometry as o}from"three/addons/lines/LineSegmentsGeometry.js";import{Wireframe as c}from"three/addons/lines/Wireframe.js";import{WireframeGeometry2 as l}from"three/addons/lines/WireframeGeometry2.js";import{Pass as d}from"three/addons/postprocessing/Pass.js";import{LoopSubdivision as h}from"three-subdivide";import{RoundedBoxGeometry as p}from"three/addons/geometries/RoundedBoxGeometry.js";const u="0.0.6",m={Entity2D:"Entity2D",Entity3D:"Entity3D"},y={Scene2D:"Scene2D",Scene3D:"Scene3D",SceneUI:"SceneUI"},f={World2D:"World2D",World3D:"World3D"},g={PLAYING:"playing",PAUSED:"paused",STOPPED:"stopped"},b={init:"init",update:"update",destroy:"destroy",keydown:"keydown",keyup:"keyup",pointerdown:"pointerdown",pointerup:"pointerup",pointermove:"pointermove"},w={JAVASCRIPT:"js",PYTHON:"python"},x=["geometry","material","shape","texture"],v=.01,S=5,M=0,k=new e.Raycaster;class C{static createOrthographic(t,s,i="none",n=0){const a=new e.OrthographicCamera(0,1,1,0,-1e3,1e3);return a.desiredSize=n,a.fitType=i,a.position.set(0,0,5),a.lookAt(0,0,0),C.updateOrthographic(a,t,s),a}static createPerspective(t,s,i=!0,n=58.1){const a=new e.PerspectiveCamera(n,1,.01,1e3);return a.tanFOV=Math.tan(Math.PI/180*a.fov/2),a.windowHeight=i?1e3:0,a.fixedSize=i,a.position.set(0,0,5),a.lookAt(0,0,0),C.updatePerspective(a,t,s),a}static updateCamera(e,t,s){e.isPerspectiveCamera&&C.updatePerspective(e,t,s),e.isOrthographicCamera&&C.updateOrthographic(e,t,s)}static updatePerspective(e,t,s){e.fixedSize&&(e.fov=360/Math.PI*Math.atan(e.tanFOV*(s/e.windowHeight))),e.aspect=t/s,e.updateProjectionMatrix()}static updateOrthographic(e,t,s){let i=e.fitType,n=0;e.desiredSize?n=e.desiredSize:i="none";let a=1,r=1,o=n,c=n;"none"===i?(o=.01*t*.5,c=.01*s*.5):"width"===i?r=s/t:"height"===i&&(a=t/s),e.left=-o/a/2,e.right=o/a/2,e.top=c*r/2,e.bottom=-c*r/2,e.updateProjectionMatrix()}static screenPoint(t,s){return s&&s.isCamera?new e.Vector3.copy(t).project(s):(console.warn("CameraUtils.screenPoint: No camera provided!"),new e.Vector3)}static worldPoint(t,s,i=new e.Vector3,n="xy"){if(!s||!s.isCamera)return console.warn("CameraUtils.worldPoint: No camera provided!"),new e.Vector3;const a=new e.PlaneGeometry(1e8,1e8,2,2);switch(n.toLowerCase()){case"yz":a.rotateY(Math.PI/2);break;case"xz":a.rotateX(Math.PI/2)}a.translate(i.x,i.y,i.z);const r=new e.MeshBasicMaterial({side:e.DoubleSide}),o=new e.Mesh(a,r);k.setFromCamera(t,s),s.isOrthographicCamera&&k.ray.origin.set(t.x,t.y,-s.far).unproject(s);const c=k.intersectObject(o,!0);return a.dispose(),r.dispose(),c.length>0&&c[0].point.clone()}static distanceToFitObject(e,t,s=1.25){}static fitCameraToObject(t,s,i=null,n=1.25,a=!1){const r=new e.Box3;r.setFromObject(s);const o=r.getCenter(new e.Vector3),c=r.getSize(new e.Vector3),l=c.z/(2*Math.atan(Math.PI*t.fov/360)),d=Math.max(l,c.y/(2*Math.atan(Math.PI*t.fov/360))),h=c.x/(2.5*Math.atan(Math.PI*t.fov/360))/t.aspect,p=n*Math.max(d,h);t.near=p/100,t.far=100*p,t.updateProjectionMatrix(),t.position.copy(o),a&&(t.position.x+=p/6,t.position.y+=p/6),t.position.z+=p,t.lookAt(o),i&&(i.maxDistance=10*p,i.target.copy(o),i.update())}}const P=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];class z{static radiansToDegrees(e){return e*(180/Math.PI)}static degreesToRadians(e){return Math.PI/180*e}static clamp(e,t,s){return(e=Number(e))<t&&(e=t),e>s&&(e=s),e}static damp(e,t,s,i){return z.lerp(e,t,1-Math.exp(-s*i))}static lerp(e,t,s){return(1-s)*e+s*t}static roundTo(e,t=0){const s=Math.pow(10,t);return Math.round(e*s)/s}static fuzzyFloat(e,t,s=.001){return e<t+s&&e>t-s}static fuzzyVector(e,t,s=.001){return!1!==z.fuzzyFloat(e.x,t.x,s)&&(!1!==z.fuzzyFloat(e.y,t.y,s)&&!1!==z.fuzzyFloat(e.z,t.z,s))}static fuzzyQuaternion(e,t,s=.001){return!1!==z.fuzzyVector(e,t,s)&&!1!==z.fuzzyFloat(e.w,t.w,s)}static isPowerOfTwo(e){return 0==(e&e-1)&&0!==e}static addCommas(e){return e.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1,")}static countDecimals(e){return Math.floor(e.valueOf())===e.valueOf()?0:e.toString().split(".")[1].length||0}static isNumber(e){return null!=e&&"number"==typeof e&&!Number.isNaN(e)&&Number.isFinite(e)}static lineCollision(e,t,s,i,n,a,r,o){let c=(o-a)*(s-e)-(r-n)*(i-t);if(z.fuzzyFloat(c,0,1e-7))return!1;let l=((r-n)*(t-a)-(o-a)*(e-n))/c,d=((s-e)*(t-a)-(i-t)*(e-n))/c;return l>=0&&l<=1&&d>=0&&d<=1}static lineRectCollision(e,t,s,i,n,a,r,o){const c=z.lineCollision(e,t,s,i,n,a,n,o),l=z.lineCollision(e,t,s,i,r,a,r,o),d=z.lineCollision(e,t,s,i,n,a,r,a),h=z.lineCollision(e,t,s,i,n,o,r,o);return c||l||d||h}static randomFloat(e,t){return e+Math.random()*(t-e)}static randomInt(e=0,t=1){return e+Math.floor(Math.random()*(t-e))}static uuid(){if(window.crypto&&window.crypto.randomUUID)return crypto.randomUUID();const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,s=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(P[255&e]+P[e>>8&255]+P[e>>16&255]+P[e>>24&255]+"-"+P[255&t]+P[t>>8&255]+"-"+P[t>>16&15|64]+P[t>>24&255]+"-"+P[63&s|128]+P[s>>8&255]+"-"+P[s>>16&255]+P[s>>24&255]+P[255&i]+P[i>>8&255]+P[i>>16&255]+P[i>>24&255]).toLowerCase()}}class A extends e.WebGLRenderer{constructor(e={}){super(e);const t=this.render.bind(this);this.render=function(e,s){window.activeCamera=s,t(e,s)}}}let O;class D{static offscreenRenderer(t,s){return void 0===O&&(O=new A({alpha:!0}),O.setClearColor(16777215,0),O.setSize(512,512,!1),O.outputColorSpace=e.LinearSRGBColorSpace),z.isNumber(t)&&z.isNumber(s)&&O.setSize(t,s,!1),O}static renderGeometryToCanvas(t,s,i,n=16777215){const a=i??new e.MeshStandardMaterial({color:n}),r=s??new e.SphereGeometry,o=new e.Mesh(r,a);D.renderMeshToCanvas(t,o),o&&"function"==typeof o.dispose&&o.dispose(),i||a.dispose(),s||r.dispose()}static renderMeshToCanvas(t,s){const i=new e.Scene;i.add(new e.HemisphereLight(16777215,2105376,1.5));const n=new e.PerspectiveCamera(50,t.width/t.height);n.position.set(0,0,1),C.fitCameraToObject(n,s);const a=s.parent;i.add(s);const r=D.offscreenRenderer(t.width,t.height);r.render(i,n),i.remove(s),a&&a.add(s);const o=t.getContext("2d");o&&(o.clearRect(0,0,t.width,t.height),o.drawImage(r.domElement,0,0,t.width,t.height))}static renderTextureToCanvas(t,s){const i=new e.Scene,n=new e.OrthographicCamera(-1,1,1,-1,0,1),a=new e.MeshBasicMaterial({map:s,alphaTest:!0}),r=new e.PlaneGeometry(2,2),o=new e.Mesh(r,a);i.add(o);const c=s.image,l=D.offscreenRenderer(c.width,c.height);l.render(i,n),r.dispose(),a.dispose();const d=t.getContext("2d");if(d){let e,s,i,n,a;c.width/c.height<t.width/t.height?(n=c.height>t.height?t.height:c.height,a=Math.min(1,t.height/c.height),i=c.width*a):(i=c.width>t.width?t.width:c.width,a=Math.min(1,t.width/c.width),n=c.height*a),e=(t.width-i)/2,s=(t.height-n)/2,d.clearRect(0,0,t.width,t.height),d.drawImage(l.domElement,0,0,c.width,c.height,e,s,i,n)}}}class E{constructor(e=w.JAVASCRIPT){this.isScript=!0,this.type="Script",this.name="New Script",this.uuid=z.uuid(),this.format=e,this.category=null,this.line=0,this.char=0,this.errors=!1,e===w.JAVASCRIPT&&(this.source='//\n// Globals:            entity ("this" in events), app, renderer, scene, camera\n// Lifecycle Events:   init, update, destroy\n// Input Events:       keydown, keyup, pointerdown, pointerup, pointermove\n//\n\n// ... Code outside of events is executed when entity is loaded ... \n\n// "init()" is executed when the entity is loaded\nfunction init() {\n\n}\n\n// "update()" is executed before each frame is rendered\n//     event.time: total elapsed time (in ms)\n//     event.delta: time since last frame (in ms)\nfunction update(event) {\n\n}\n\n// "destroy()" is executed right before the entity is removed\nfunction destroy() {\n\n}\n\n// Example Input Event\nfunction keydown(event) {\n\n}\n')}fromJSON(e){const t=e.object;return void 0!==t.name&&(this.name=t.name),void 0!==t.uuid&&(this.uuid=t.uuid),void 0!==t.format&&(this.format=t.format),void 0!==t.category&&(this.category=t.category),void 0!==t.line&&(this.line=t.line),void 0!==t.char&&(this.char=t.char),void 0!==t.errors&&(this.errors=t.errors),void 0!==t.source&&(this.source=t.source),this}toJSON(){const e={object:{type:this.type,name:this.name,uuid:this.uuid,format:this.format,category:this.category}};return e.object.line=this.line,e.object.char=this.char,e.object.errors=structuredClone(this.errors),e.object.source=this.source,e}}class j{static addSpaces(e){return String(e).replace(/([A-Z])/g," $1").trim()}static capitalize(e){const t=String(e).split(" ");for(let e=0;e<t.length;e++)t[e]=t[e][0].toUpperCase()+t[e].substring(1);return t.join(" ")}static countDigits(e){return parseFloat(e).toString().length}static escapeHTML(e){return null==e?e:e.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/'/g,"&#39;").replace(/</g,"&lt;").replace(/>/g,"&gt;")}static nameFromUrl(e,t=!0){let s=new String(e.replace(/^.*[\\\/]/,""));return s=s.replace(/\.[^/.]+$/,""),t&&(s=j.capitalize(s)),s}}const B={},T={},F=new e.TextureLoader;class I{static clear(){for(let e in B){B[e].isEntity||I.removeAsset(B[e],!0)}}static checkType(e){if(e)return e.isBufferGeometry?"geometry":"Shape"===e.type?"shape":e.isMaterial?"material":e.isScript?"script":e.isTexture?"texture":e.isEntity||e.isPrefab?"prefab":"asset"}static addAsset(e){if(!e)return;const s=Array.isArray(e)?e:[e];for(let e=0;e<s.length;e++){let i=s[e];if(i.name&&""!==i.name||(i.name=i.constructor.name),i.isBufferGeometry&&"BufferGeometry"!==i.constructor.name){const e=t([i]);e.name=i.name,e.uuid=i.uuid,"function"==typeof i.dispose&&i.dispose(),i=e}B[i.uuid]=i}}static getAsset(e){return e&&e.uuid&&(e=e.uuid),B[e]}static getLibrary(e,t){const s=[];for(const[i,n]of Object.entries(B))I.checkType(n)===e&&(t?n.category&&n.category===t&&s.push(n):s.push(n));return s}static removeAsset(e,t=!0){if(!e)return;const s=Array.isArray(e)?e:[e];for(let e=0;e<s.length;e++){const i=s[e];if(B[i.uuid]){if(i.isTexture)for(let e in T)T[e].uuid===i.uuid&&delete T[e];t&&"function"==typeof i.dispose&&i.dispose(),delete B[i.uuid]}}}static loadTexture(t,s){if(!t||""===t)return null;const i=e.DefaultLoadingManager.resolveURL(t);if(T[i])return console.log("AssetManager.loadTexture: Duplicate image!"),T[i];const n=F.load(t,(function(t){t.name=j.nameFromUrl(t.image.src),t.premultiplyAlpha=!0,t.wrapS=e.RepeatWrapping,t.wrapT=e.RepeatWrapping,s&&"function"==typeof s&&s(t)}),(function(){T[i]&&T[i].isTexture&&T[i].dispose();delete T[i]}));return T[i]=n,n}static fromJSON(t){function s(e){for(const[t,s]of Object.entries(e))I.addAsset(s)}I.clear();const i={};if(t.scripts){for(let e=0;e<t.scripts.length;e++){const s=(new E).fromJSON(t.scripts[e]);i[s.uuid]=s}s(i)}const n=new e.ObjectLoader,a=n.parseAnimations(t.animations),r=n.parseShapes(t.shapes),o=n.parseGeometries(t.geometries,{}),c=n.parseImages(t.images),l=n.parseTextures(t.textures,c),d=n.parseMaterials(t.materials,l);s(a),s(r),s(o),s(c),s(l),s(d)}static toJSON(e){const t={};e||(e={}),e.scripts||(e.scripts={}),e.shapes||(e.shapes={}),e.geometries||(e.geometries={}),e.images||(e.images={}),e.textures||(e.textures={}),e.materials||(e.materials={}),e.animations||(e.animations={}),e.skeletons||(e.skeletons={});const s={images:{},textures:{},materials:{}},i=I.getLibrary("script");for(let t=0;t<i.length;t++){const s=i[t];s.uuid&&(e.scripts[s.uuid]||(e.scripts[s.uuid]=s.toJSON()))}const n=I.getLibrary("geometry");for(let t=0;t<n.length;t++){const s=n[t];s.uuid&&(e.geometries[s.uuid]||(e.geometries[s.uuid]=s.toJSON(e)))}const a=I.getLibrary("material");for(let t=0;t<a.length;t++){const i=a[t];i.uuid&&(e.materials[i.uuid]||(e.materials[i.uuid]=i.toJSON(s)))}const r=I.getLibrary("shape");for(let t=0;t<r.length;t++){const i=r[t];i.uuid&&(e.shapes[i.uuid]||(e.shapes[i.uuid]=i.toJSON(s)))}const o=I.getLibrary("texture");for(let t=0;t<o.length;t++){const s=o[t];s.uuid&&(e.textures[s.uuid]||(e.textures[s.uuid]=s.toJSON(e)))}for(const s in e){const i=[];for(const t in e[s]){const n=e[s][t];delete n.metadata,i.push(n)}t[s]=i}return t}}const V=null==performance||"undefined"==typeof performance?Date:performance;class L{#e=!1;#t=0;#s=0;#i=0;#n=0;#a=0;#r=0;#o=0;constructor(e=!0,t=0){e&&this.start(),this.#t-=t,this.#i-=t}start(){this.#t=V.now(),this.#i=this.#t,this.#e=!0}stop(){this.getDeltaTime(),this.#e=!1}reset(){this.#t=V.now(),this.#i=this.#t,this.#s=0,this.#n=0}getElapsedTime(){return this.#s}getDeltaTime(){if(!this.#e)return this.#o=0,0;const e=V.now(),t=(e-this.#i)/1e3;return this.#i=e,this.#s+=t,this.#n++,this.#a+=t,this.#r++,this.#a>1&&(this.#o=this.#r,this.#a=0,this.#r=0),t}isRunning(){return this.#e}count(){return this.#n}averageDelta(){const e=1/this.#o;return Math.min(1,e)}fps(){return this.#o}}class U{static arrayFromArguments(){return 1===arguments.length&&Array.isArray(arguments[0])?arguments[0]:Array.from(arguments)}static isIterable(e){return null!=e&&"function"==typeof e[Symbol.iterator]}static isObject(e){return"object"==typeof e&&!Array.isArray(e)&&null!==e}static save(e,t){try{const s=document.createElement("a");document.body.appendChild(s),s.href=e,s.download=t||"data.json",s.click(),setTimeout((function(){document.body.removeChild(s),window.URL.revokeObjectURL(e)}),0)}catch(e){return void console.warn(e)}}static saveBuffer(e,t,s={type:"application/octet-stream"}){let i=URL.createObjectURL(new Blob([e],{type:s}));U.save(i,t)}static saveImage(e,t){U.save(e,t)}static saveString(e,t){let s=URL.createObjectURL(new Blob([e],{type:"text/plain"}));U.save(s,t)}static detectOS(){let e={Android:["android"],iOS:["iphone","ipad","ipod","ios"],Linux:["linux","x11","wayland"],Mac:["mac","darwin","osx","os x"],Win:["win"]},t=window.navigator.userAgent,s=window.navigator.userAgentData,i=s?s.platform:t;i=i.toLowerCase();for(let t in e)for(let s of e[t])if(-1!==i.indexOf(s))return t;return"Unknown OS"}static fullscreen(e){if(document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement){let e=document;(e.cancelFullScreen||e.exitFullscreen||e.webkitCancelFullScreen||e.webkitExitFullscreen||e.mozCancelFullScreen).call(e)}else{let t=e??document.body;(t.requestFullScreen||t.webkitRequestFullScreen||t.mozRequestFullScreen||t.msRequestFullScreen).call(t)}}static metaKeyOS(){return"Mac"===U.detectOS()?"⌘":"⌃"}static sleep(e){const t=Date.now();let s=t;for(;s-t<e;)s=Date.now()}static waitForObject(e,t,s,i=1e3,n=!1,a=5e3){let r=Date.now(),o=Date.now();!function c(){a&&Date.now()-o>a&&(console.info(`Still waiting on operation: ${e}`),o=Date.now()),void 0===t()||null===t()?setTimeout((function(){n&&Date.now()-r>n||c()}),i):s()}()}}const N=new e.Box3,W=new e.Matrix4,G=new e.Vector3,R=new e.Quaternion,J=new e.Quaternion,_=new e.Quaternion,$=new e.Vector3,Q=new e.Quaternion,q=(new e.Euler,new e.Vector3);class H{static allowSelection(e){let t=!e.isLocked;return e.userData&&e.userData.flagIgnore&&(t=!1),t}static checkTransforms(e){if(e.length<=1)return!0;e[0].getWorldQuaternion(R);for(let t=1;t<e.length;t++)if(e[t].getWorldQuaternion(_),!1===z.fuzzyQuaternion(R,_))return!1;return!0}static clearObject(e,t=!0){if(e&&e.isObject3D){for(e.geometry&&e.geometry.dispose(),e.material&&H.clearMaterial(e.material),e.dispose&&e.dispose();e.children.length>0;)H.clearObject(e.children[0],!0);H.resetTransform(e),t&&e.removeFromParent(),e=null}}static clearMaterial(e){!0!==U.isIterable(e)&&(e=[e]);for(let t=0,s=e.length;t<s;t++){const s=e[t];Object.keys(s).forEach((e=>{s[e]&&"function"==typeof s[e].dispose&&s[e].dispose()})),s.dispose&&s.dispose()}}static computeBounds(t,s,i=!1){void 0!==s&&!0===s.isBox3||(s=new e.Box3);const n=U.isIterable(t)?t:[t];if(s.makeEmpty(),i&&1===H.countGeometry(t)){let e;if(n.forEach((t=>{t.traverse((t=>{t.geometry&&(e=t)}))})),e&&e.geometry)return e.geometry.computeBoundingBox(),s.copy(e.geometry.boundingBox),e.matrixWorld.decompose($,Q,q),Q.identity(),W.compose($,Q,q),s.applyMatrix4(W),s}return n.forEach((e=>s.expandByObject(e))),s}static computeCenter(e,t){const s=U.isIterable(e)?e:[e];if(H.computeBounds(s,N),N.isEmpty())for(let e of s)e.getWorldPosition(G),N.expandByPoint(G);return N.getCenter(t),t}static containsObject(e,t){if(t&&t.uuid&&U.isIterable(e))for(let s=0;s<e.length;s++)if(e[s].uuid===t.uuid)return!0;return!1}static copyWorldTransform(e,t,s=!0){e.updateWorldMatrix(!0,!1),e.matrixWorld.decompose(t.position,J,t.scale),t.rotation.setFromQuaternion(J,void 0,!1),t.quaternion.setFromEuler(t.rotation,!1),s&&(t.updateMatrix(),t.updateMatrixWorld(!0))}static countGeometry(e){const t=U.isIterable(e)?e:[e];let s=0;return t.forEach((e=>{e.traverse((e=>{e.geometry&&s++}))})),s}static flattenGroup(e){if(e&&e.parent){for(;e.children;)e.parent.attach(e.children[0]);H.clearObject(e,!0)}}static resetTransform(e){e.position.set(0,0,0),e.rotation.set(0,0,0),e.scale.set(1,1,1)}}const X={};class Y{static registered(e=""){const t=X[e];return t||console.warn(`ComponentManager.registered: Component '${e}' not registered'`),t}static registeredTypes(){return Object.keys(X)}static register(e="",t){if(e=e.toLowerCase(),X[e])return console.warn(`ComponentManager.register: Component '${e}' already registered`);U.isObject(t.config)||(t.config={}),U.isObject(t.config.schema)||(t.config.schema={});const s=t.config.schema;for(const e in s){const t=Array.isArray(s[e])?s[e]:[s[e]];for(let e=0,s=t.length;e<s;e++){const s=t[e];if(void 0===s.type)console.warn("ComponentManager.register(): All schema properties require a 'type' value");else if("layout"===s.type)continue;if(void 0===s.default)switch(s.type){case"select":case"asset":s.default=null;break;case"number":case"int":case"angle":case"slider":s.default=0;break;case"variable":s.default=[0,0];break;case"vector":s.default=[0];break;case"boolean":s.default=!1;break;case"color":s.default=16777215;break;case"string":s.default="";break;case"object":s.default={};break;case"layout":s.default=void 0;break;default:console.warn(`ComponentManager.register(): Unknown property type: '${s.type}'`),s.default=null}void 0!==s.proMode&&(s.promode=s.proMode)}}X[e]=class extends t{constructor(){super(),this.isComponent=!0,this.type=e,this.attached=!0,this.expanded=!0,this.tag="",this.entity=null,this.data={}}init(e){this.dispose(),"function"==typeof super.init&&super.init(e)}dispose(){"function"==typeof super.dispose&&super.dispose(),this.backend&&"function"==typeof this.backend.dispose&&this.backend.dispose(),this.backend=void 0}attach(){this.attached=!0,"function"==typeof super.attach&&super.attach()}detach(){this.attached=!1,"function"==typeof super.detach&&super.detach()}update(e){const t=this.data??{};Object.assign(t,e),Y.sanitizeData(this.type,t),this.detach(),this.init(t),this.attach()}three(){if("function"==typeof super.three)return super.three()}defaultData(){const e={};for(let t=0,s=arguments.length;t<s;t+=2)e[arguments[t]]=arguments[t+1];return Y.sanitizeData(this.type,e),e.base={isComponent:!0,attached:this.attached,expanded:this.expanded,tag:this.tag,type:this.type},e}toJSON(){let e;e=this.data&&this.data.style?this.defaultData("style",this.data.style):this.defaultData();for(let t in e)void 0!==this.data[t]&&(this.data[t]&&this.data[t].isTexture?e[t]=this.data[t].uuid:e[t]=this.data[t]);return e}}}static includeData(e,t,s){for(let i in e.if){let n=e.if[i];!0!==U.isIterable(n)&&(n=[n]);let a=!1,r=!1;for(let e=0;e<n.length;e++)a=a||t[i]===n[e],r=!(!r&&void 0!==s)||s[i]===n[e];if(!a||!r)return!1}for(let i in e.not){let n=e.not[i];!0!==U.isIterable(n)&&(n=[n]);let a=!1,r=!1;for(let e=0;e<n.length;e++)a=a||t[i]===n[e],r=!r&&void 0!==s&&s[i]===n[e];if(a||r)return!1}return!0}static sanitizeData(e,t){t&&"object"==typeof t||(t={});const s=Y.registered(e);if(!s||!s.config||!s.config.schema)return;const i=s.config.schema;if(U.isObject(i))for(let e in i){let s,n=i[e];!0!==U.isIterable(n)&&(n=[i[e]]);for(let e=0;e<n.length;e++){let i=n[e];if("layout"!==i.type&&Y.includeData(i,t)){s=i;break}}if(void 0!==s){if(void 0===t[e]&&(t[e]=s.default),z.isNumber(t[e])){const i=s.min??-1/0,n=s.max??1/0;t[e]<i&&(t[e]=i),t[e]>n&&(t[e]=n)}}else delete t[e]}}static stripData(e,t,s){const i=Y.registered(e);if(!i||!i.config||!i.config.schema)return;const n=i.config.schema;if(U.isObject(n))for(let e in n){let i=!1,a=n[e];!0!==U.isIterable(a)&&(a=[n[e]]);for(let e=0;e<a.length;e++){let n=a[e];if("layout"!==n.type&&Y.includeData(n,t,s)){i=!0;break}}!0!==i&&delete s[e]}}}class Z{static combineEntityArrays(e,t){for(let s=0;s<t.length;s++){let i=t[s];!1===Z.containsEntity(e,i)&&e.push(i)}}static commonEntity(e,t){for(let s=0;s<e.length;s++)if(!0===Z.containsEntity(t,e[s]))return!0;for(let s=0;s<t.length;s++)if(!0===Z.containsEntity(e,t[s]))return!0;return!1}static compareArrayOfEntities(e,t){for(let s=0;s<e.length;s++)if(!1===Z.containsEntity(t,e[s]))return!1;for(let s=0;s<t.length;s++)if(!1===Z.containsEntity(e,t[s]))return!1;return!0}static containsEntity(e,t){if(t&&t.uuid&&Array.isArray(e))for(let s=0;s<e.length;s++)if(e[s].uuid===t.uuid)return!0;return!1}static containsMesh(e,t=!0){if(!e.isEntity)return console.warn("EntityUtils.containsMesh: Object was not an Entity!"),!1;let s=!1;return e.traverseEntities((e=>{let t=!1,i=!1;e.traverseComponents((e=>{t=t||"geometry"===e.type&&e.backend&&e.backend.isBufferGeometry,i=i||"material"===e.type&&e.backend&&e.backend.isMaterial,s=s||"mesh"===e.type&&e.backend&&e.backend.isMesh})),s=s||t&&i}),t),s}static findCameraComponent(e){if(!e||!e.isEntity)return;let t;return e.traverseEntities((e=>{if(e.traverseComponents((e=>{if("camera"===e.type)return t=e,t})),t)return t})),t}static isImportant(e){let t=!1;return t=t||null==e.parent,t=t||e.isScene,t=t||e.isLocked,t}static parentEntity(e,t=!1){for(;e&&e.parent&&!e.parent.isScene;)if(e=e.parent,t&&e.isEntity&&(!e.userData||!e.userData.flagIgnore))return e;return e}static parentScene(e){for(;e&&e.parent;)if((e=e.parent).isScene)return e}static removeEntityFromArray(e,t){let s=e.length;for(let i=0;i<s;i++)e[i].uuid===t.uuid&&(e.splice(i,1),s=e.length)}static uuidArray(e){let t=[];for(let s=0;s<e.length;s++)t.push(e[s].uuid);return t}}new e.Matrix4;const K=new e.Vector3,ee=new e.Quaternion,te=new e.Vector3,se=(new e.Quaternion,new e.Vector3,new e.Vector3),ie=new e.Vector3,ne=(new e.Quaternion,new e.Quaternion),ae=new e.Quaternion,re=(new e.Euler,new e.Quaternion),oe=(new e.Quaternion,new e.Vector3),ce=new e.Quaternion,le=new e.Vector3,de=new e.Euler;class he extends e.Object3D{constructor(e=""){super(),this.isEntity=!0,this.isEntity3D=!0,this.type="Entity3D",this.name=e,this.isLocked=!1,this.lookAtCamera=!1,this.components=[],this.castShadow=!0,this.receiveShadow=!0}getReducedType(){return this.isScene?"Scene":1===this.components.length?j.capitalize(this.components[0].type.toLowerCase()):"Entity3D"}updateMatrix(){const e=this.rotation._onChangeCallback,t=this.rotation._onChangeCallback;this.rotation._onChange((()=>{})),this.quaternion._onChange((()=>{}));const s=window.activeCamera;let i=Boolean(this.lookAtCamera&&s&&!this.isScene);i&&this.parent&&this.parent.isObject3D&&this.traverseAncestors((e=>{e.lookAtCamera&&(i=!1)})),i?(this.parent&&this.parent.isObject3D?(this.parent.getWorldQuaternion(ne,!1),ae.copy(ne).invert(),this.quaternion.copy(ae)):this.quaternion.identity(),s.matrixWorld.decompose(K,ee,te),re.setFromEuler(this.rotation,!1),this.quaternion.multiply(ee),this.quaternion.multiply(re)):this.quaternion.setFromEuler(this.rotation,!1),this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0,this.rotation._onChange(e),this.quaternion._onChange(t)}getWorldQuaternion(e,t=!0){let s=this.lookAtCamera;return t&&s&&(this.lookAtCamera=!1),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(se,e,ie),t&&s&&(this.lookAtCamera=!0,this.updateWorldMatrix(!0,!1)),e}safeAttach(e){e&&e.isObject3D&&(e.getWorldQuaternion(ce),e.getWorldScale(le),e.getWorldPosition(oe),e.removeFromParent(),e.rotation.copy(de.setFromQuaternion(ce,void 0,!1)),e.scale.copy(le),e.position.copy(oe),this.attach(e))}addComponent(e,t={},s=!0){const i=Y.registered(e);if(void 0===i)return;const n=i.config;let a=this.getComponent(e);if(a&&!i.config.multiple||(a=new i,this.components.push(a)),n.dependencies&&s){const e=n.dependencies;for(let t=0,s=e.length;t<s;t++)void 0===this.getComponent(e[t])&&this.addComponent(e[t],{},!1)}return Y.sanitizeData(e,t),a.detach(),a.entity=this,a.init(t),a.attach(),a}attachComponent(e){this.components.push(e),e.detach(),e.entity=this,e.init(e.toJSON()),e.attach()}updateComponent(e,t={},s=0){const i=this.getComponentsWithProperties("type",e)[s];i&&i.isComponent&&i.update(t)}replaceComponent(e,t={},s=0){const i=this.getComponentsWithProperties("type",e)[s];i&&i.isComponent&&(Y.sanitizeData(e,t),i.detach(),i.init(t),i.attach())}getComponent(e,t){if(void 0===t)return this.getComponentByProperty("type",e);let s=this.getComponentsWithProperties("type",e,"tag",t);return s.length>0?s[0]:void 0}getComponentByTag(e){return this.getComponentByProperty("tag",e)}getComponentByType(e){return this.getComponentByProperty("type",e)}getComponentByProperty(e,t){for(let s=0,i=this.components.length;s<i;s++){const i=this.components[s];if(i[e]===t)return i}}getComponentsWithProperties(){let e=[];for(let t=0;t<this.components.length;t++){const s=this.components[t];let i=!0;for(let e=0;e<arguments.length;e+=2)if(s[arguments[e]]!==arguments[e+1]){i=!1;break}i&&e.push(s)}return e}removeComponent(e){let t=this.components.indexOf(e);return-1!==t?(this.components.splice(t,1),e.detach()):console.warn(`Entity3D.removeComponent: Component ${e.uuid}, type '${e.type}' not found`),e}rebuildComponents(){for(let e=0;e<this.components.length;e++){const t=this.components[e];t.detach(),t.init(t.toJSON()),t.attach()}}traverseComponents(e){for(let t=0;t<this.components.length;t++)e(this.components[t])}changeParent(e,t=-1){if(e||(e=this.parent),!e||!e.isObject3D)return;const s=this.parent;-1===t&&s&&(t=s.children.indexOf(this)),e.safeAttach(this),-1!==t&&(e.children.splice(t,0,this),e.children.pop())}addEntity(e,t=-1,s=!1){return e&&e.isObject3D?(null==t&&(t=-1),-1!==this.children.indexOf(e)||(s&&e.parent?this.attach(e):this.add(e),-1!==t&&(this.children.splice(t,0,e),this.children.pop())),this):this}getEntities(){const e=[],t=this.children;for(let s=0;s<t.length;s++){const i=t[s];i.isEntity3D&&i.userData&&!0!==i.userData.flagIgnore&&e.push(i)}return e}getEntityById(e){return this.getEntityByProperty("id",parseInt(e))}getEntityByName(e){return this.getEntityByProperty("name",e)}getEntityByUUID(e){return this.getEntityByProperty("uuid",e)}getEntityByProperty(e,t){if(this[e]===t)return this;const s=this.getEntities();for(let i=0;i<s.length;i++){const n=s[i].getEntityByProperty(e,t);if(n)return n}}removeEntity(e,t=!1){e&&(!t&&Z.isImportant(e)||this.remove(e))}traverseEntities(e,t=!0){if("function"==typeof e&&e(this),t)for(let t=0;t<this.children.length;t++){const s=this.children[t];s.isEntity3D&&s.traverseEntities(e)}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(super.copy(e,!1),this.position.copy(e.position),this.rotation.copy(e.rotation),this.scale.copy(e.scale),this.isLocked=e.isLocked,this.lookAtCamera=e.lookAtCamera,this.updateMatrix(),t)for(let t=0;t<e.children.length;t++){const s=e.children[t].clone();this.add(s)}return this}cloneEntity(e=!0){return(new this.constructor).copyEntity(this,e)}copyEntity(e,t=!0){this.dispose(),this.copy(e,!1),this.name=e.name;const s=e.components;for(let e=0;e<s.length;e++){const t=s[e];this.addComponent(t.type,t.toJSON(),!1).tag=t.tag}if(!0===t){const s=e.getEntities();for(let e=0;e<s.length;e++){const i=s[e];this.add(i.cloneEntity(t))}}return this}dispose(){const e=this.children;for(let t=0;t<e.length;t++){const s=e[t];this.removeEntity(s,!0),s.dispose&&s.dispose()}for(;this.components.length>0;){const e=this.components[0];this.removeComponent(e),e.dispose()}}fromJSON(e){const t=e.object;void 0!==t.name&&(this.name=t.name),void 0!==t.isLocked&&(this.isLocked=t.isLocked),void 0!==t.lookAtCamera&&(this.lookAtCamera=t.lookAtCamera),void 0!==t.uuid&&(this.uuid=t.uuid),void 0!==t.position&&this.position.fromArray(t.position),void 0!==t.rotation&&this.rotation.fromArray(t.rotation),void 0!==t.scale&&this.scale.fromArray(t.scale),void 0!==t.castShadow&&(this.castShadow=t.castShadow),void 0!==t.receiveShadow&&(this.receiveShadow=t.receiveShadow),void 0!==t.matrixAutoUpdate&&(this.matrixAutoUpdate=t.matrixAutoUpdate),void 0!==t.layers&&(this.layers.mask=t.layers),void 0!==t.visible&&(this.visible=t.visible),void 0!==t.frustumCulled&&(this.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(this.renderOrder=t.renderOrder),void 0!==t.userData&&(this.userData=t.userData);for(let t=0;t<e.object.components.length;t++){const s=e.object.components[t];if(s&&s.base&&s.base.type){this.addComponent(s.base.type,s,!1).tag=s.base.tag}}return this.loadChildren(e),this.updateMatrix(),this}loadChildren(e){if(e&&e.object&&e.object.entities)for(let t=0;t<e.object.entities.length;t++){const s=e.object.entities[t],i=(new he).fromJSON(s);this.add(i)}}toJSON(){const e={object:{type:this.type,name:this.name,uuid:this.uuid,components:[]}};for(let t=0;t<this.components.length;t++)e.object.components.push(this.components[t].toJSON());e.object.isLocked=this.isLocked,e.object.lookAtCamera=this.lookAtCamera,e.object.position=this.position.toArray(),e.object.rotation=this.rotation.toArray(),e.object.scale=this.scale.toArray(),e.object.castShadow=this.castShadow,e.object.receiveShadow=this.receiveShadow,e.object.matrixAutoUpdate=this.matrixAutoUpdate,e.object.layers=this.layers.mask,!1===this.visible&&(e.object.visible=!1),!1===this.frustumCulled&&(e.object.frustumCulled=!1),0!==this.renderOrder&&(e.object.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(e.object.userData="function"==typeof structuredClone?structuredClone(this.userData):JSON.parse(JSON.stringify(this.userData)));const t=this.getEntities();if(t.length>0){e.object.entities=[];for(let s=0;s<t.length;s++)e.object.entities.push(t[s].toJSON())}return e}}class pe extends he{constructor(t="Start Scene"){super(t),this.isScene=!0,this.isScene3D=!0,this.type="Scene3D",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.start=0,this.end=-1,this.shadowPlane=new e.Mesh(new e.PlaneGeometry(1e5,1e5),new e.ShadowMaterial({color:0,transparent:!0,opacity:.2,depthWrite:!1})),this.shadowPlane.name="ShadowPlane",this.shadowPlane.userData.flagIgnore=!0,this.shadowPlane.rotation.x=-Math.PI/2,this.shadowPlane.castShadow=!1,this.shadowPlane.receiveShadow=!0,this.shadowPlane.visible=!1,this.add(this.shadowPlane)}copyEntity(e,t=!0){return super.copyEntity(e,t),this.start=e.start,this.end=e.end,this}fromJSON(t){const s=t.object;if(void 0!==s.start&&(this.start=s.start),void 0!==s.end&&(this.end=s.end),void 0!==s.background)if(Number.isInteger(s.background))this.background=new e.Color(s.background);else{const e=I.getAsset(s.background);e&&e.isTexture&&(this.background=e)}if(void 0!==s.environment){const e=I.getAsset(s.background);e&&e.isTexture&&(this.environment=e)}return void 0!==s.fog&&("Fog"===s.fog.type?this.fog=new e.Fog(s.fog.color,s.fog.near,s.fog.far):"FogExp2"===s.fog.type&&(this.fog=new e.FogExp2(s.fog.color,s.fog.density))),super.fromJSON(t),this}toJSON(){const e=super.toJSON();return this.fog&&(e.object.fog=this.fog.toJSON()),e.object.start=this.start,e.object.end=this.end,e}}class ue extends he{constructor(e="World 1"){super(e),this.isWorld=!0,this.isWorld3D=!0,this.type="World3D",this.xPos=0,this.yPos=0,this.activeSceneUUID=void 0}activeScene(){return this.getSceneByUUID(this.activeSceneUUID)}setActiveScene(e){e&&e.uuid&&(this.activeSceneUUID=e.uuid)}addEntity(e,t=-1){return this.addScene(e,t)}addScene(e,t=-1){return e&&e.isScene3D?(null==t&&(t=-1),-1!==this.children.indexOf(e)||(0===this.getScenes().length&&this.setActiveScene(e),this.add(e),-1!==t&&(this.children.splice(t,0,e),this.children.pop())),this):this}getFirstScene(){if(this.children.length>0)return this.children[0]}getScenes(){const e=[],t=this.children;for(let s=0;s<t.length;s++)t[s].isScene&&e.push(t[s]);return e}getSceneById(e){const t=this.getEntityByProperty("id",e);if(t&&t.isScene)return t}getSceneByName(e){const t=this.getEntityByProperty("name",e);if(t&&t.isScene)return t}getSceneByUUID(e){const t=this.getEntityByProperty("uuid",e);if(t&&t.isScene)return t}getSceneByProperty(e,t){const s=this.getScenes();for(let i=0,n=s.length;i<n;i++){const n=s[i];if(n[e]===t)return n}}removeEntity(e){return this.removeScene(e)}removeScene(e){e&&e.isScene&&this.remove(e)}traverseScenes(e,t=!0){if("function"==typeof e&&e(this),t){const s=this.getScenes();for(let i=0;i<s.length;i++){s[i].traverseEntities(e,t)}}}copyEntity(e,t=!0){return super.copyEntity(e,t),this.xPos=e.xPos,this.yPos=e.yPos,this}fromJSON(e){const t=e.object;return void 0!==t.xPos&&(this.xPos=t.xPos),void 0!==t.yPos&&(this.yPos=t.yPos),void 0!==t.activeSceneUUID&&(this.activeSceneUUID=t.activeSceneUUID),super.fromJSON(e),this}loadChildren(e){if(e&&e.object&&e.object.entities)for(let t=0;t<e.object.entities.length;t++){const s=e.object.entities[t];let i;"Scene3D"===s.object.type?i=(new pe).fromJSON(s):"Entity3D"===s.object.type&&(i=(new he).fromJSON(s)),i&&this.add(i)}}toJSON(){const e=super.toJSON();return e.object.xPos=this.xPos,e.object.yPos=this.yPos,e.object.activeSceneUUID=this.activeSceneUUID,e}}class me{constructor(e="My Project"){this.isProject=!0,this.type="Project",this.name=e,this.uuid=z.uuid(),this.worlds={}}addWorld(e){return e&&f[e.type]?(this.worlds[e.uuid]=e,null==this.activeWorldUUID&&(this.activeWorldUUID=e.uuid)):console.error(`Project.addWorld: World type (${e.type}) not a valid world type`,e),this}getFirstWorld(){const e=Object.keys(this.worlds);return e.length>0?this.worlds[e[0]]:null}getWorldByName(e){return this.getWorldByProperty("name",e)}getWorldByUUID(e){return this.worlds[e]}getWorldByProperty(e,t){for(const s in this.worlds){const i=this.worlds[s];if(i[e]===t)return i}}removeWorld(e){e.isWorld&&delete this.worlds[e.uuid]}traverseWorlds(e,t=!0){for(let s in this.worlds){const i=this.worlds[s];"function"==typeof e&&e(i),t&&i.traverseScenes(e,t)}}worldCount(){return Object.keys(this.worlds).length}findEntityByUUID(e,t=!1){const s=editor&&editor.viewport?editor.viewport.scene:null,i=[];if(t){for(let e in this.worlds){const t=this.worlds[e];i.concat(Array.from(t.getScenes()))}if(s){const e=i.indexOf(s);-1!==e&&(i.splice(e,1),i.splice(0,0,s))}}else s&&i.push(s);for(let t=0;t<i.length;t++){const s=i[t].getEntityByProperty("uuid",e);if(s)return s}}clear(){const e=Object.keys(this.worlds);for(let t=0;t<e.length;t++){const s=this.worlds[e[t]];this.removeWorld(s)}this.name="My Project",this.uuid=z.uuid()}fromJSON(e,t=!0){const s=e.metadata?e.metadata.type:"Undefined";if("Onsight"!==s)return void console.error(`Project.fromJSON: Unknown project type ('${s}'), expected 'Onsight'`);const i=e.metadata.version;if("0.0.6"!==i&&console.warn(`Project.fromJSON: Project saved in 'v${i}', attempting to load with 'v0.0.6'`),e.object&&e.object.type===this.type){this.clear(),t&&I.fromJSON(e),this.name=e.object.name,this.uuid=e.object.uuid;for(let t=0;t<e.worlds.length;t++)if("World3D"===e.worlds[t].object.type){const s=(new ue).fromJSON(e.worlds[t]);this.addWorld(s)}return this}console.error("Project.fromJSON: Save file corrupt, no 'Project' object found!")}toJSON(){const e=I.toJSON({});e.metadata={type:"Onsight",version:"0.0.6",generator:"Onsight.Project.toJSON"},e.object={type:this.type,name:this.name,uuid:this.uuid},e.worlds=[];for(const t in this.worlds){const s=this.worlds[t];e.worlds.push(s.toJSON())}return e}}const ye=new e.Matrix4,fe=new e.Quaternion,ge=new e.Vector3(1,1,1),be=new e.Vector3,we=new e.Vector3;async function xe(t=0,i=-9.81,n=0){await s.init();const a=new e.Vector3(t,i,n),r=new s.World(a),o=[],c=new WeakMap;function l(e,t,i,n){const a=i>0?s.RigidBodyDesc.dynamic():s.RigidBodyDesc.fixed();a.setTranslation(...e),t&&a.setRotation(t);const o=r.createRigidBody(a);return r.createCollider(n,o),o}return{addMesh:function(e,t=0,i=0){const n=function(e){const t=e.parameters;if("BoxGeometry"===e.type){const e=void 0!==t.width?t.width/2:.5,i=void 0!==t.height?t.height/2:.5,n=void 0!==t.depth?t.depth/2:.5;return s.ColliderDesc.cuboid(e,i,n)}if("SphereGeometry"===e.type||"IcosahedronGeometry"===e.type){const e=void 0!==t.radius?t.radius:1;return s.ColliderDesc.ball(e)}return null}(e.geometry);if(!n)return;n.setMass(t),n.setRestitution(i);const a=e.isInstancedMesh?function(e,t,s){const i=e.instanceMatrix.array,n=[];for(let a=0;a<e.count;a++){const e=be.fromArray(i,16*a+12);n.push(l(e,null,t,s))}return n}(e,t,n):l(e.position,e.quaternion,t,n);t>0&&(o.push(e),c.set(e,a))},setMeshPosition:function(e,t,s=0){let i=c.get(e);e.isInstancedMesh&&(i=i[s]),i.setAngvel(we),i.setLinvel(we),i.setTranslation(t)},setMeshVelocity:function(e,t,s=0){let i=c.get(e);e.isInstancedMesh&&(i=i[s]),i.setLinvel(t)},step:function(e){r.timestep=e,r.step();for(let e=0,t=o.length;e<t;e++){const t=o[e];if(t.isInstancedMesh){const e=t.instanceMatrix.array,s=c.get(t);for(let t=0;t<s.length;t++){const i=s[t],n=i.translation();fe.copy(i.rotation()),ye.compose(n,fe,ge).toArray(e,16*t)}t.instanceMatrix.needsUpdate=!0,t.computeBoundingSphere()}else{const e=c.get(t);t.position.copy(e.translation()),t.quaternion.copy(e.rotation())}}},world:r}}let ve="",Se={};for(let e in b)ve+=e+",",Se[e]=e;ve=ve.replace(/.$/,"");const Me="entity,app,renderer,scene,camera,"+ve,ke=JSON.stringify(Se).replace(/\"/g,"");new e.Vector3;class Ce{static app=void 0;static camera=void 0;static project=void 0;static renderer=void 0;static scene=void 0;static cameraFromScene(e){e=e??Ce.scene;let t=Z.findCameraComponent(e);if(t){const e=t.three();if(e){const t=e.clone();return H.copyWorldTransform(e,t,!0),t}}const s=C.createPerspective(1024,1024,!0);return s.position.x=0,s.position.y=0,s.position.z=6,s}static copyChildren(e,t){const s=t.getEntities();for(let t=0;t<s.length;t++){const i=s[t],n=i.cloneEntity(!1);Ce.loadScriptsFromComponents(n,i),Ce.copyChildren(n,i),e.add(n)}}static loadScriptsFromComponents(e,t){if(t.components)for(let s=0;s<t.components.length;s++){const i=t.components[s];if("script"!==i.type||!i.data)continue;const n=i.data.script,a=I.getAsset(n);if(!a||!a.isScript)continue;if(a.errors){console.warn(`Entity '${t.name}' has errors in script '${a.name}'. Script will not be loaded!`);continue}let r=`${a.source}\n`;for(let e in i.data.variables)r+=`if (typeof ${e} !== 'undefined') ${e} = ${i.data.variables[e]};\n`;r+=`return ${ke};`;const o=new Function(Me,r).bind(e)(e,Ce.app,Ce.renderer,Ce.scene,Ce.camera);for(let t in o){if(void 0===b[t]){console.warn(`App: Event type not supported ('${t}')`);continue}if("function"!=typeof o[t])continue;const s=o[t].bind(e);Ce.app.events[t].push(s)}}}static removeEntity(){}static loadScene(e,t){Ce.copyChildren(e,t)}}let Pe=null;const ze=new L(!1);let Ae;const Oe=new e.Vector3;let De,Ee;class je{constructor(){this.project=new me,this.renderer=new A({antialias:!0}),this.renderer.setPixelRatio(1),this.renderer.useLegacyLights=!0,this.renderer.shadowMap.enabled=!0,this.renderer.outputColorSpace=e.LinearSRGBColorSpace,this.dom=document.createElement("div"),this.dom.appendChild(this.renderer.domElement),this.events={};for(let e in b){const t=b[e];this.events[t]=[]}this.state=g.STOPPED,this.wantsScreenshot=!1}dispatch(e,t){for(let s=0;s<e.length;s++){const i=e[s];"function"==typeof i&&i(t)}}dispose(){H.clearObject(Ce.camera),H.clearObject(Ce.scene);for(let e in Ce.app.events)Ce.app.events[e].length=0;Ae&&Ae.world.free()}load(e,t=!0){this.project.fromJSON(e,t);const s=this.project.getFirstWorld().activeScene();Ce.app=this,Ce.camera=Ce.cameraFromScene(s),Ce.project=this.project,Ce.renderer=this.renderer,Ce.scene=new pe,Ce.loadScene(Ce.scene,s),Ce.app.dispatch(Ce.app.events.init)}animate(){if(Ce.app.state===g.PLAYING){const e=ze.getDeltaTime(),t=ze.getElapsedTime();if(Ce.app.state===g.PLAYING)try{Ce.app.dispatch(Ce.app.events.update,{time:t,delta:e})}catch(e){console.error(e.message||e,e.stack||"")}let s=Math.floor(Math.random()*De.count),i=Math.floor(Math.random()*Ee.count);Ae.setMeshPosition(De,Oe.set(0,Math.random()+1,0),s),Ae.setMeshPosition(Ee,Oe.set(0,Math.random()+1,0),i),e>.01&&Ae.step(e)}if(Ce.renderer.render(Ce.scene,Ce.camera),Ce.app.wantsScreenshot){const e=Ce.project.name+" "+(new Date).toLocaleString()+".png",t="image/png",s=Ce.renderer.domElement.toDataURL(t);U.saveImage(s,e),Ce.app.wantsScreenshot=!1}Ce.app.state!==g.STOPPED&&(Pe=requestAnimationFrame(Ce.app.animate))}async init(){Ae=await xe();const t=Ce.scene,s=new e.MeshLambertMaterial,i=new e.Matrix4,n=new e.Color,a=new e.Mesh(new e.BoxGeometry(10,5,10),new e.ShadowMaterial({color:4473924}));a.position.y=-2.5,a.receiveShadow=!0,t.add(a),Ae.addMesh(a);const r=new e.BoxGeometry(.075,.075,.075);De=new e.InstancedMesh(r,s,400),De.instanceMatrix.setUsage(e.DynamicDrawUsage),De.castShadow=!0,De.receiveShadow=!0,t.add(De);for(let e=0;e<De.count;e++)i.setPosition(Math.random()-.5,2*Math.random(),Math.random()-.5),De.setMatrixAt(e,i),De.setColorAt(e,n.setHex(16777215*Math.random()));Ae.addMesh(De,1);const o=new e.IcosahedronGeometry(.05,4);Ee=new e.InstancedMesh(o,s,400),Ee.instanceMatrix.setUsage(e.DynamicDrawUsage),Ee.castShadow=!0,Ee.receiveShadow=!0,t.add(Ee);for(let e=0;e<Ee.count;e++)i.setPosition(Math.random()-.5,2*Math.random(),Math.random()-.5),Ee.setMatrixAt(e,i),Ee.setColorAt(e,n.setHex(16777215*Math.random()));Ae.addMesh(Ee,1)}async play(){this.state===g.STOPPED&&(await this.init(),ze.reset()),this.state=g.PAUSED,document.addEventListener("keydown",Be),document.addEventListener("keyup",Te),document.addEventListener("pointerdown",Fe),document.addEventListener("pointerup",Ie),document.addEventListener("pointermove",Ve),this.pause()}pause(){switch(this.state){case g.PAUSED:this.state=g.PLAYING,ze.start(),null==Pe&&(Pe=requestAnimationFrame(Ce.app.animate));break;case g.PLAYING:this.state=g.PAUSED;case g.STOPPED:ze.stop()}}stop(){this.state!==g.STOPPED&&(this.state=g.STOPPED,document.removeEventListener("keydown",Be),document.removeEventListener("keyup",Te),document.removeEventListener("pointerdown",Fe),document.removeEventListener("pointerup",Ie),document.removeEventListener("pointermove",Ve),Pe&&(cancelAnimationFrame(Pe),Pe=null),Ce.renderer&&Ce.renderer.clear(),ze.stop())}setSize(e,t){Ce.camera&&C.updateCamera(Ce.camera,e,t),this.renderer&&this.renderer.setSize(e,t)}gameCoordinates(t){const s=this.dom.getBoundingClientRect(),i=t.clientX-s.left,n=t.clientY-s.top,a=i/s.width*(2*s.width)-s.width,r=-n/s.height*(2*s.height)+s.height,o=new e.Vector3(a,r,0);return o.unproject(Ce.camera),o}}function Be(e){Ce.app.dispatch(Ce.app.events.keydown,e)}function Te(e){Ce.app.dispatch(Ce.app.events.keyup,e)}function Fe(e){Ce.app.dispatch(Ce.app.events.pointerdown,e)}function Ie(e){Ce.app.dispatch(Ce.app.events.pointerup,e)}function Ve(e){Ce.app.dispatch(Ce.app.events.pointermove,e)}class Le{constructor(){this.entities=[],this.expand()}getEntities(e){return e>this.entities.length&&this.expand(e-this.entities.length),this.entities.splice(0,e)}getEntity(){return this.entities.length||this.expand(),this.entities.pop()}recycle(e){e.dispose(),this.entities.push(e)}expand(e=10){for(let t=0;t<e;t++)this.entities.push(new he)}}class Ue extends E{constructor(){super(),this.name="Camera Follow",this.source="\nfunction update(event) {\n\n\tcamera.position.x = this.position.x;\n    camera.position.y = this.position.y;\n    camera.position.z = this.position.z + 6;\n\n}\n"}}class Ne extends E{constructor(){super(),this.name="Color Change",this.source="\nlet color = '0xff0000';\n\nfunction init() {\n\n\tthis.updateComponent('material', { color: Number(color) });\n\n}\n\nfunction pointerdown() {\n\n\tconst clr = new THREE.Color(Math.random(), Math.random(), Math.random());\n    this.replaceComponent('material', { color: clr });\n\n}\n"}}class We extends E{constructor(){super(),this.name="Key Controls",this.source="\nlet speed = 0.1;\n\nfunction keydown(event) {\n\n\tif (event.key === 'ArrowLeft') this.position.x -= speed;\n\tif (event.key === 'ArrowRight') this.position.x += speed;\n\n    if (event.key === 'ArrowUp') this.position.y += speed;\n\tif (event.key === 'ArrowDown') this.position.y -= speed;\n\n}\n"}}class Ge extends E{constructor(){super(),this.name="Rotate Entity",this.source="\nlet rotateX = 0;\nlet rotateY = 0;\nlet rotateZ = -1;\n\nfunction update(event) {\n\n\tthis.rotation.x += (rotateX * (Math.PI / 180));\n    this.rotation.y += (rotateY * (Math.PI / 180));\n    this.rotation.z += (rotateZ * (Math.PI / 180));\n\n}\n"}}class Re{static absolute(e){e.x=Math.abs(e.x),e.y=Math.abs(e.y),e.z=Math.abs(e.z)}static noZero(e,t=.001){z.fuzzyFloat(e.x,0,t)&&(e.x=e.x<0?-1*t:t),z.fuzzyFloat(e.y,0,t)&&(e.y=e.y<0?-1*t:t),z.fuzzyFloat(e.z,0,t)&&(e.z=e.z<0?-1*t:t)}static printOut(e,t=""){""!==t&&(t+=" - "),console.info(`${t}X: ${e.x}, Y: ${e.y}, Z: ${e.z}`)}static round(e,t=0){const s=Math.pow(10,t);e.x=Math.round(e.x*s)/s,e.y=Math.round(e.y*s)/s,e.z=Math.round(e.z*s)/s}static sanity(e){isNaN(e.x)&&(e.x=0),isNaN(e.y)&&(e.y=0),isNaN(e.z)&&(e.z=0)}}const Je=[new e.Vector2,new e.Vector2,new e.Vector2],_e=[new e.Vector3,new e.Vector3,new e.Vector3],$e=new e.Vector3;class Qe{static addAttribute(t,s="color",i=3,n=0){if(!t.getAttribute(s)){let a=new Float32Array(t.attributes.position.count*i).fill(n);const r=new e.BufferAttribute(a,i,!0).setUsage(e.DynamicDrawUsage);t.setAttribute(s,r)}return t}static coloredMesh(e){if(!e.geometry)return e;if(!e.material)return e;let t=e.material;!0!==Array.isArray(t)&&(t=[e.material]);for(let e=0;e<t.length;e++)!0!==t[e].vertexColors&&(t[e].vertexColors=!0,t[e].needsUpdate=!0);return Qe.addAttribute(e.geometry,"color",3,1),e}static modelSize(t,s="max"){let i=new e.Vector3;return t.computeBoundingBox(),t.boundingBox.getSize(i),"max"===s?Math.max(i.x,i.y,i.z):Math.min(i.x,i.y,i.z)}static repeatTexture(e,t,s){if(e&&e.attributes&&e.attributes.uv&&e.attributes.uv.array){for(let i=0;i<e.attributes.uv.array.length;i+=2)e.attributes.uv.array[i+0]*=t,e.attributes.uv.array[i+1]*=s;e.attributes.uv.needsUpdate=!0}}static uvFlip(e,t=!0,s=!0){if(e&&e.isBufferGeometry&&void 0!==e.attributes.uv)for(let i=0;i<e.attributes.uv.array.length;i+=2){let n=e.attributes.uv.array[i+0],a=e.attributes.uv.array[i+1];t&&(n=1-n),s&&(a=1-a),e.attributes.uv.array[i+0]=n,e.attributes.uv.array[i+1]=a}}static uvMapCube(t,s,i=!1){if(i&&null!==t.index){const e=t.toNonIndexed();t.dispose(),t=e}void 0===s&&(s=new e.Matrix4);let n=Qe.modelSize(t),a=n/2,r=new e.Box3(new e.Vector3(-a,-a,-a),new e.Vector3(a,a,a)),o=new e.Vector3;t.boundingBox.getCenter(o);const c=(new e.Matrix4).makeTranslation(-o.x,-o.y,-o.z),l=[];l.length=2*t.attributes.position.array.length/3;const d=t.attributes.position.array;if(t.index)for(let s=0;s<t.index.array.length;s+=3){const i=t.index.array[s+0],n=t.index.array[s+1],a=t.index.array[s+2];h(new e.Vector3(d[3*i+0],d[3*i+1],d[3*i+2]),new e.Vector3(d[3*n+0],d[3*n+1],d[3*n+2]),new e.Vector3(d[3*a+0],d[3*a+1],d[3*a+2])),l[2*i+0]=Je[0].x,l[2*i+1]=Je[0].y,l[2*n+0]=Je[1].x,l[2*n+1]=Je[1].y,l[2*a+0]=Je[2].x,l[2*a+1]=Je[2].y}else for(let s=0;s<t.attributes.position.array.length;s+=9){h(new e.Vector3(d[s+0],d[s+1],d[s+2]),new e.Vector3(d[s+3],d[s+4],d[s+5]),new e.Vector3(d[s+6],d[s+7],d[s+8]));const t=s/3,i=t+1,n=t+2;l[2*t+0]=Je[0].x,l[2*t+1]=Je[0].y,l[2*i+0]=Je[1].x,l[2*i+1]=Je[1].y,l[2*n+0]=Je[2].x,l[2*n+1]=Je[2].y}return void 0===t.attributes.uv&&t.addAttribute("uv",new e.Float32BufferAttribute(l,2)),t.attributes.uv.array=new Float32Array(l),t.attributes.uv.needsUpdate=!0,t;function h(t,a,o){t.applyMatrix4(c).applyMatrix4(s),a.applyMatrix4(c).applyMatrix4(s),o.applyMatrix4(c).applyMatrix4(s);const l=new e.Vector3;var d,h,p,u;if(d=l,h=t,p=a,u=o,$e.subVectors(h,p),d.subVectors(p,u),d.cross($e).normalize(),Re.round(d,5),Je[0].set(0,0,0),Je[1].set(0,0,0),Je[2].set(0,0,0),i){let e=l.z<0;e=e&&Math.abs(l.y)<.866,e=e&&Math.abs(l.x)<.866,e&&(Je[0].x=(t.x-r.min.x)/n,Je[0].y=(t.y-r.min.y)/n,Je[1].x=(a.x-r.min.x)/n,Je[1].y=(a.y-r.min.y)/n,Je[2].x=(o.x-r.min.x)/n,Je[2].y=(o.y-r.min.y)/n)}else l.x=Math.abs(l.x),l.y=Math.abs(l.y),l.z=Math.abs(l.z),l.y>l.x&&l.y>l.z?(Je[0].x=(t.x-r.min.x)/n,Je[0].y=(r.max.z-t.z)/n,Je[1].x=(a.x-r.min.x)/n,Je[1].y=(r.max.z-a.z)/n,Je[2].x=(o.x-r.min.x)/n,Je[2].y=(r.max.z-o.z)/n):l.x>l.y&&l.x>l.z?(Je[0].x=(t.z-r.min.z)/n,Je[0].y=(t.y-r.min.y)/n,Je[1].x=(a.z-r.min.z)/n,Je[1].y=(a.y-r.min.y)/n,Je[2].x=(o.z-r.min.z)/n,Je[2].y=(o.y-r.min.y)/n):l.z>l.y&&l.z>l.x&&(Je[0].x=(t.x-r.min.x)/n,Je[0].y=(t.y-r.min.y)/n,Je[1].x=(a.x-r.min.x)/n,Je[1].y=(a.y-r.min.y)/n,Je[2].x=(o.x-r.min.x)/n,Je[2].y=(o.y-r.min.y)/n)}}static uvMapSphere(t,s="uv"){if(null!==t.index){const e=t.toNonIndexed();e.uuid=t.uuid,e.name=t.name,t.dispose(),t=e}const i=[];i.length=2*t.attributes.position.array.length/3;const n=!(void 0===t.attributes.uv);n||t.addAttribute("uv",new e.Float32BufferAttribute(i,2));const a=!n||"u"===s||"uv"===s,r=!n||"v"===s||"uv"===s,o=t.attributes.position.array;for(let e=0;e<t.attributes.position.array.length;e+=9){_e[0].set(o[e+0],o[e+1],o[e+2]),_e[1].set(o[e+3],o[e+4],o[e+5]),_e[2].set(o[e+6],o[e+7],o[e+8]);let t=e/3;for(let e=0;e<3;e++){const s=l(_e[e]);if(0===s.theta&&(0===s.phi||s.phi===Math.PI)){const e=0===s.phi?"1":"0";s.theta=l(_e[e]).theta}c(s,t,e),t++}let s=!1;if(Math.abs(Je[0].x-Je[1].x)>.75&&(s=!0),Math.abs(Je[0].x-Je[2].x)>.75&&(s=!0),Math.abs(Je[1].x-Je[0].x)>.75&&(s=!0),Math.abs(Je[1].x-Je[2].x)>.75&&(s=!0),Math.abs(Je[2].x-Je[0].x)>.75&&(s=!0),Math.abs(Je[2].x-Je[1].x)>.75&&(s=!0),s){let t=e/3;for(let e=0;e<3;e++){i[2*t]>.75&&(i[2*t]=0),t++}}}return t.attributes.uv.array=new Float32Array(i),t.attributes.uv.needsUpdate=!0,t;function c(s,n,o){const c={x:((l=s).theta+Math.PI)/(2*Math.PI),y:l.phi/Math.PI};var l;const d=new e.Vector2(1-c.x,1-c.y),h=2*n+0,p=2*n+1;i[h]=a?d.x:t.attributes.uv.array[h],i[p]=r?d.y:t.attributes.uv.array[p],Je[o].x=i[h],Je[o].y=i[p]}function l(e){let t=e.x*e.x+e.y*e.y+e.z*e.z,s=Math.sqrt(t);return{r:s,theta:Math.atan2(e.z,e.x),phi:Math.acos(e.y/s)}}}}const qe=new e.Color,He=new e.Vector3;class Xe{static createFromPaths(t,s,n,a=""){let r=0,o=0;if(s.forEach((s=>{let n=s.userData.style.fill,c=s.userData.style.fillOpacity;if(c||0===c||(c=1),void 0!==n&&"none"!==n){i.createShapes(s).forEach((s=>{let i=`Fill ${o}`;""!==a&&(i=a+" "+i);const l=new he(i),d=.001;function h(e){e.v0&&e.v0.multiplyScalar(d),e.v1&&e.v1.multiplyScalar(d),e.v2&&e.v2.multiplyScalar(d),e.v3&&e.v3.multiplyScalar(d),e.aX&&(e.aX*=d),e.aY&&(e.aY*=d),e.xRadius&&(e.xRadius*=d),e.yRadius&&(e.yRadius*=d)}for(let e=0;e<s.curves.length;e++)h(s.curves[e]);for(let e=0;e<s.holes.length;e++)for(let t=0;t<s.holes[e].curves.length;t++)h(s.holes[e].curves[t]);const p=new e.ExtrudeGeometry(s,{depth:.256,bevelEnabled:!1,bevelThickness:.25,bevelSegments:8,curveSegments:16,steps:4});p.name=i,p.translate(0,0,-.128),p.scale(1,-1,-1),p.computeBoundingBox(),p.boundingBox.getCenter(He),p.center(),l.position.copy(He),Qe.uvFlip(p,!1,!0),l.addComponent("geometry",p),l.addComponent("material",{style:"standard",side:"FrontSide",color:qe.setStyle(n).getHex(),opacity:c}),l.position.z=r,t.add(l),r+=.001,o++}))}})),t.children&&t.children.length>0){const s=new e.Vector3;H.computeCenter(t.children,s);for(let e of t.children)e.position.x-=s.x-t.position.x,e.position.y-=s.y-t.position.y}t.name=a,n&&"function"==typeof n&&n(t)}static createFromFile(e,t){const s=new he;return(new i).load(e,(function(i){Xe.createFromPaths(s,i.paths,t,j.nameFromUrl(e))})),s}}class Ye extends e.BufferGeometry{constructor(t=1,s=1,i=2,n=12,a=1,r=5,o=5,c,l){super(),this.type="CapsuleGeometry",this.parameters={radiusTop:t,radiusBottom:s,height:i,radialSegments:n,heightSegments:a,thetaStart:c,thetaLength:l},t=void 0!==t?t:1,s=void 0!==s?s:1,i=void 0!==i?i:2,t=z.clamp(t,.001,i),s=z.clamp(s,.001,i),i<.001&&(i=.001),n=Math.floor(n)||12,a=Math.floor(a)||1,r=Math.floor(r)||5,o=Math.floor(o)||5,c=void 0!==c?c:0,l=void 0!==l?l:2*Math.PI;let d=Math.acos((s-t)/i),h=(n+1)*(a+1+o+r),p=n*(a+o+r)*2*3,u=new e.BufferAttribute(new(p>65535?Uint32Array:Uint16Array)(p),1),m=new e.BufferAttribute(new Float32Array(3*h),3),y=new e.BufferAttribute(new Float32Array(3*h),3),f=new e.BufferAttribute(new Float32Array(2*h),2),g=0,b=0,w=[],x=i/2;!function(){let h,p,v=new e.Vector3,S=new e.Vector3,M=Math.cos(d),k=Math.sin(d),C=new e.Vector2(t*k,x+t*M).sub(new e.Vector2(s*k,s*M-x)).length(),P=t*d+C+s*(Math.PI/2-d),z=0;for(p=0;p<=r;p++){let e=[],s=Math.PI/2-d*(p/r);z+=t*d/r;let i=Math.cos(s),a=Math.sin(s),o=i*t;for(h=0;h<=n;h++){let s=h/n,r=s*l+c,d=Math.sin(r),p=Math.cos(r);S.x=o*d,S.y=x+a*t,S.z=o*p,m.setXYZ(g,S.x,S.y,S.z),v.set(i*d,a,i*p),y.setXYZ(g,v.x,v.y,v.z),f.setXY(g,s,1-z/P),e.push(g),g++}w.push(e)}let A=i+M*t-M*s,O=k*(s-t)/A;for(p=1;p<=a;p++){let e=[];z+=C/a;let i=k*(p*(s-t)/a+t);for(h=0;h<=n;h++){let s=h/n,r=s*l+c,o=Math.sin(r),d=Math.cos(r);S.x=i*o,S.y=x+M*t-p*A/a,S.z=i*d,m.setXYZ(g,S.x,S.y,S.z),v.set(o,O,d).normalize(),y.setXYZ(g,v.x,v.y,v.z),f.setXY(g,s,1-z/P),e.push(g),g++}w.push(e)}for(p=1;p<=o;p++){let e=[],t=Math.PI/2-d-(Math.PI-d)*(p/o);z+=s*d/o;let i=Math.cos(t),a=Math.sin(t),r=i*s;for(h=0;h<=n;h++){let t=h/n,o=t*l+c,d=Math.sin(o),p=Math.cos(o);S.x=r*d,S.y=a*s-x,S.z=r*p,m.setXYZ(g,S.x,S.y,S.z),v.set(i*d,a,i*p),y.setXYZ(g,v.x,v.y,v.z),f.setXY(g,t,1-z/P),e.push(g),g++}w.push(e)}for(h=0;h<n;h++)for(p=0;p<r+a+o;p++){let e=w[p][h],t=w[p+1][h],s=w[p+1][h+1],i=w[p][h+1];u.setX(b,e),b++,u.setX(b,t),b++,u.setX(b,i),b++,u.setX(b,t),b++,u.setX(b,s),b++,u.setX(b,i),b++}}(),this.setIndex(u),this.setAttribute("position",m),this.setAttribute("normal",y),this.setAttribute("uv",f)}static fromPoints(t,s,i,n,a,r,o,c,l,d){let h=null,p=null,u=null,m=null;p=t,h=s,m=i,u=n;const y=h,f=p,g=u,b=m,w=new e.Vector3(y.x,y.y,y.z),x=new e.Vector3(f.x,f.y,f.z),v=g,S=b;let M=w.distanceTo(x);if(M<Math.abs(g-b)){let t=new e.SphereGeometry(b,a,c,l,d);return t.translate(b.x,b.y,b.z),t}const k=Math.acos((S-v)/M),C=Math.cos(k),P=new e.Matrix4,z=new e.Quaternion,A=new e.Vector3(0,1,0),O=new e.Vector3;O.subVectors(w,x),O.normalize(),z.setFromUnitVectors(A,O),P.makeRotationFromQuaternion(z);const D=new e.Matrix4,E=new e.Vector3;E.subVectors(w,x),E.normalize();let j=new e.Vector3;j=w,j.addScaledVector(E,C*v);let B=new e.Vector3;B=x,B.addScaledVector(E,C*S);const T=new e.Vector3;T.subVectors(B,j),T.normalize();const F=new e.Vector3;F.lerpVectors(B,j,.5),D.makeTranslation(F.x,F.y,F.z);let I=new Ye(S,v,M,a,r,o,c,l,d);return I.applyMatrix(P),I.applyMatrix(D),I}}class Ze extends e.BufferGeometry{constructor(t=1,s=1,i=1,n=8,a=1,r=!1,o=0,c=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:s,height:i,radialSegments:n,heightSegments:a,openEnded:r,thetaStart:o,thetaLength:c};const l=this;n=Math.floor(n),a=Math.floor(a);const d=[],h=[],p=[],u=[];let m=0;const y=[],f=i/2;let g=0;function b(i){const a=m,r=new e.Vector2,y=new e.Vector3;let b=0;const w=!0===i?t:s,x=!0===i?1:-1;for(let e=1;e<=n;e++)h.push(0,f*x,0),p.push(0,x,0),u.push(.5,.5),m++;const v=m;for(let e=0;e<=n;e++){const t=e/n*c+o,s=Math.cos(t),i=Math.sin(t);y.x=w*i,y.y=f*x,y.z=w*s,h.push(y.x,y.y,y.z),p.push(0,x,0),r.x=.5*s+.5,r.y=.5*i*x+.5,u.push(r.x,r.y),m++}for(let e=0;e<n;e++){const t=a+e,s=v+e;!0===i?d.push(s,s+1,t):d.push(s+1,s,t),b+=3}l.addGroup(g,b,!0===i?1:2),g+=b}!function(){const r=new e.Vector3,b=new e.Vector3;let w=0;const x=(s-t)/i;for(let e=0;e<=a;e++){const l=[],d=e/a,g=d*(s-t)+t;for(let e=0;e<=n;e++){const t=e/n,s=t*c+o,a=Math.sin(s),y=Math.cos(s);b.x=g*a,b.y=-d*i+f,b.z=g*y,h.push(b.x,b.y,b.z),r.set(a,x,y).normalize(),p.push(r.x,r.y,r.z),u.push(t,1-d),l.push(m++)}y.push(l)}for(let t=0;t<n;t++)for(let s=0;s<a;s++){const i=y[s][t],n=y[s+1][t],a=y[s+1][t+1],r=y[s][t+1],o=new e.Vector3(h[3*i+0],h[3*i+1],h[3*i+2]),c=new e.Vector3(h[3*n+0],h[3*n+1],h[3*n+2]),l=new e.Vector3(h[3*a+0],h[3*a+1],h[3*a+2]),p=new e.Vector3(h[3*r+0],h[3*r+1],h[3*r+2]),u=new e.Triangle(o,c,p),m=new e.Triangle(c,l,p);u.getArea()>1e-4&&(d.push(i,n,r),w+=3),m.getArea()>1e-4&&(d.push(n,a,r),w+=3)}l.addGroup(g,w,0),g+=w}(),r||(t>0&&b(!0),s>0&&b(!1)),this.setIndex(d),this.setAttribute("position",new e.Float32BufferAttribute(h,3)),this.setAttribute("normal",new e.Float32BufferAttribute(p,3)),this.setAttribute("uv",new e.Float32BufferAttribute(u,2))}static fromJSON(e){return new Ze(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ke extends e.ExtrudeGeometry{constructor(t,s){const i=new e.Shape;i.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;e++)i.lineTo(t[e].x,t[e].y);i.lineTo(t[0].x,t[0].y);super(i,{steps:2,depth:s,bevelEnabled:!1}),this.vertices=t,this.height=s}clone(){return new this.constructor(this.vertices,this.height).copy(this)}}function et(t){t.transparent=!0,t.resolution=new e.Vector2(1024,1024),t.depthTest=!0,t.depthWrite=!1,t.polygonOffset=!0,t.polygonOffsetFactor=1,t.side=e.DoubleSide,t.alphaToCoverage=!0}const tt=new e.Quaternion,st=new e.Vector3,it=new e.Vector3,nt=new e.Vector3,at=new e.Vector3,rt=new e.Box3,ot=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);class ct extends e.LineSegments{constructor(t,s,i,n,a,r,o=16777215){const c=[t,s,i,n,a,r],l=new e.BufferGeometry;l.setIndex([0,1]),l.setAttribute("position",new e.Float32BufferAttribute(c,3));const d=new e.LineBasicMaterial({color:o});et(d),d.wireframe=!0,super(l,d)}clone(){const e=this.geometry.attributes.position.array;return e[0]=point1.x,e[1]=point1.y,e[2]=point1.z,e[3]=point2.x,e[4]=point2.y,e[5]=point2.z,new this.constructor(e[0],e[1],e[2],e[3],e[4],e[5]).copy(this,!0)}setPoints(e,t){Re.sanity(e),Re.sanity(t);const s=this.geometry.attributes.position.array;s[0]=e.x,s[1]=e.y,s[2]=e.z,s[3]=t.x,s[4]=t.y,s[5]=t.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere()}}class lt extends n{constructor(t,s,i,n,o,c,l=1,d=16777215){const h=new a,p=new r({color:d,linewidth:l});et(p);const u=[t,s,i,n,o,c];h.setPositions(u),super(h,p),this.computeLineDistances(),this.scale.set(1,1,1),this.point1=new e.Vector3(t,s,i),this.point2=new e.Vector3(n,o,c)}clone(){return new this.constructor(this.point1.x,this.point1.y,this.point1.z,this.point2.x,this.point2.y,this.point2.z).copy(this,!0)}setPoints(e,t){Re.sanity(e),Re.sanity(t),this.point1.copy(e),this.point2.copy(t);const s=[e.x,e.y,e.z,t.x,t.y,t.z];this.geometry.setPositions(s),this.computeLineDistances()}}class dt extends e.LineSegments{constructor(t,s=16777215,i=1,n=!1){const a=new e.WireframeGeometry,r=new e.LineBasicMaterial({color:s,opacity:i});et(r),super(a,r),this._positions=new Float32Array(24),this.points=[];for(let t=0;t<8;t++)this.points.push(new e.Vector3);t&&this.updateFromObject(t,n),this.clone=function(){return new this.constructor(t,s,i,n).copy(this,!0)}}disableDepthTest(){this.material.depthTest=!1}updateFromObject(t,s){const i=t.clone();s&&(t.getWorldPosition(it),t.getWorldQuaternion(tt),t.getWorldScale(st),i.lookAtCamera=!1,i.position.set(0,0,0),i.rotation.set(0,0,0),i.scale.set(1,1,1),i.updateMatrixWorld(!0)),rt.setFromObject(i);const n=rt.min,a=rt.max;Re.sanity(rt.min),Re.sanity(rt.max);const r=this._positions;r[0]=a.x,r[1]=a.y,r[2]=a.z,r[3]=n.x,r[4]=a.y,r[5]=a.z,r[6]=n.x,r[7]=n.y,r[8]=a.z,r[9]=a.x,r[10]=n.y,r[11]=a.z,r[12]=a.x,r[13]=a.y,r[14]=n.z,r[15]=n.x,r[16]=a.y,r[17]=n.z,r[18]=n.x,r[19]=n.y,r[20]=n.z,r[21]=a.x,r[22]=n.y,r[23]=n.z;const o=[];for(let e=ot.length-1;e>0;e-=2){const t=3*ot[e-0],s=3*ot[e-1];o.push(r[t+0],r[t+1],r[t+2]),o.push(r[s+0],r[s+1],r[s+2])}this.geometry.setAttribute("position",new e.Float32BufferAttribute(o,3)),s&&(this.setRotationFromQuaternion(tt),this.scale.set(st.x,st.y,st.z),this.position.set(it.x,it.y,it.z),this.updateMatrix()),this.updateMatrixWorld(!0),H.clearObject(i)}getPoints(){for(let e=0;e<8;e++){const t=3*e;this.points[e].x=this.geometry.attributes.position.array[t+0],this.points[e].y=this.geometry.attributes.position.array[t+1],this.points[e].z=this.geometry.attributes.position.array[t+2],this.localToWorld(this.points[e])}return this.points}getLocalPoints(){for(let e=0;e<8;e++){const t=3*e;this.points[e].x=this._positions[t+0],this.points[e].y=this._positions[t+1],this.points[e].z=this._positions[t+2]}return this.points}getBox3(t){const s=this.getLocalPoints();(t=t??new e.Box3).min.x=s[6].x,t.min.y=s[6].y,t.min.z=s[6].z,t.max.x=s[0].x,t.max.y=s[0].y,t.max.z=s[0].z}}class ht extends n{constructor(t,s=1,i=16777215,n=1,a=!1){const c=new o,l=new r({color:i,linewidth:s,opacity:n});et(l),l.depthTest=!1,super(c,l),this._positions=new Float32Array(24),this.points=[];for(let t=0;t<8;t++)this.points.push(new e.Vector3);t&&this.updateFromObject(t,a),this.clone=function(){return new this.constructor(t,s,i,n,a).copy(this,!0)}}disableDepthTest(){this.material.depthTest=!1}updateFromObject(e,t){const s=e.clone();t&&(e.getWorldPosition(it),e.getWorldQuaternion(tt),e.getWorldScale(st),s.lookAtCamera=!1,s.position.set(0,0,0),s.rotation.set(0,0,0),s.scale.set(1,1,1),s.updateMatrixWorld(!0)),rt.setFromObject(s);const i=rt.min,n=rt.max;Re.sanity(rt.min),Re.sanity(rt.max);const a=this._positions;a[0]=n.x,a[1]=n.y,a[2]=n.z,a[3]=i.x,a[4]=n.y,a[5]=n.z,a[6]=i.x,a[7]=i.y,a[8]=n.z,a[9]=n.x,a[10]=i.y,a[11]=n.z,a[12]=n.x,a[13]=n.y,a[14]=i.z,a[15]=i.x,a[16]=n.y,a[17]=i.z,a[18]=i.x,a[19]=i.y,a[20]=i.z,a[21]=n.x,a[22]=i.y,a[23]=i.z;const r=[];for(let e=ot.length-1;e>0;e-=2){const t=3*ot[e-0],s=3*ot[e-1];r.push(a[t+0],a[t+1],a[t+2]),r.push(a[s+0],a[s+1],a[s+2])}this.geometry.setPositions(r),t&&(this.setRotationFromQuaternion(tt),this.scale.set(st.x,st.y,st.z),this.position.set(it.x,it.y,it.z),this.updateMatrix()),this.updateMatrixWorld(!0),H.clearObject(s)}getPoints(){for(let e=0;e<8;e++){const t=3*e;this.points[e].x=this.geometry.attributes.position.array[t+0],this.points[e].y=this.geometry.attributes.position.array[t+1],this.points[e].z=this.geometry.attributes.position.array[t+2],this.localToWorld(this.points[e])}return this.points}getLocalPoints(){for(let e=0;e<8;e++){const t=3*e;this.points[e].x=this._positions[t+0],this.points[e].y=this._positions[t+1],this.points[e].z=this._positions[t+2]}return this.points}getAbsoluteSize(e){this.getSize(e),e.x=Math.abs(e.x),e.y=Math.abs(e.y),e.z=Math.abs(e.z)}getAverageSize(){return this.getSize(at),(at.x+at.y+at.z)/3}getBox3(t){const s=this.getLocalPoints();(t=t??new e.Box3).min.x=s[6].x,t.min.y=s[6].y,t.min.z=s[6].z,t.max.x=s[0].x,t.max.y=s[0].y,t.max.z=s[0].z}getSize(e){this.getWorldScale(nt);const t=this.getLocalPoints();e.x=(t[0].x-t[6].x)*Math.abs(nt.x),e.y=(t[0].y-t[6].y)*Math.abs(nt.y),e.z=(t[0].z-t[6].z)*Math.abs(nt.z)}getMaxSize(){return this.getSize(at),Math.max(Math.max(at.x,at.y),at.z)}}class pt extends e.LineSegments{constructor(t,s,i=1,n=!1){const a=new e.WireframeGeometry(t.geometry),r=new e.LineBasicMaterial({color:s,opacity:i});et(r),super(a,r),n&&(this.rotation.set(t.rotation.x,t.rotation.y,t.rotation.z),this.scale.set(t.scale.x,t.scale.y,t.scale.z),this.position.set(t.position.x,t.position.y,t.position.z)),this.clone=function(){return new this.constructor(t,s,i,n).copy(this,!0)}}}class ut extends c{constructor(t,s,i,n=1,a=!1){const o=new l(t.geometry),c=new r({color:i,linewidth:s,resolution:new e.Vector2(500,500),opacity:n});et(c),c.depthTest=!1,super(o,c),a&&(this.rotation.set(t.rotation.x,t.rotation.y,t.rotation.z),this.scale.set(t.scale.x,t.scale.y,t.scale.z),this.position.set(t.position.x,t.position.y,t.position.z)),this.clone=function(){return new this.constructor(t,s,i,n,a).copy(this,!0)}}}class mt extends e.Mesh{constructor(){const t=mt.SkyShader;super(new e.SphereGeometry(1),new e.ShaderMaterial({name:"SkyShader",fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e.UniformsUtils.clone(t.uniforms),side:e.BackSide,depthTest:!1,depthWrite:!1})),this.isSky=!0,this.baseScale=500,this.scale.setScalar(this.baseScale)}copy(e,t){return super.copy(e,t),this.baseScale=e.baseScale,this.scale.setScalar(this.baseScale),this}}mt.SkyShader={uniforms:{uSky:{value:new e.Color(0,.85,.8)},uHorizon:{value:new e.Color(1,.75,.5)},uGround:{value:new e.Color(.9,.7,.5)},uScale:{value:500}},vertexShader:"\n        varying vec3 \tvWorldPosition;\n\n        void main() {\n            vec4 worldPosition = modelMatrix * vec4(position, 1.0);\n            vWorldPosition = worldPosition.xyz;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }",fragmentShader:"\n        uniform vec3    uSky;\n        uniform vec3    uHorizon;\n        uniform vec3    uGround;\n        uniform float   uScale;\n        varying vec3    vWorldPosition;\n\n        void main() {\n            float lowerGround =         0.0;\n            float h = normalize(vWorldPosition + lowerGround).y;\n\n            // Sky fade (brighten at horizon)\n            float skyFade = pow(vWorldPosition.y / (uScale * 0.25), 0.4);\n            skyFade = clamp(skyFade, 0.0, 1.0);\n            vec3 sky = mix(uHorizon, uSky, skyFade);\n\n            // Seperates ground and sky, solid horizon: clamp(h * uScale, 0.0, 1.0)\n            float blurHorizon =         0.05;\n            float compressHorizon =     5.0;\n            float skyMix = max(pow(max(h, 0.0), blurHorizon) * compressHorizon, 0.0);\n            skyMix = clamp(skyMix, 0.0, 1.0);\n            vec3 outColor = mix(uGround, sky, skyMix);\n\n            // Output Color\n            gl_FragColor = vec4(outColor, 1.0);\n        }"};const yt=new e.Color(16777215),ft=[],gt=new e.Color;let bt,wt;class xt extends d{constructor(t,s){super();const i=this;this.scene=t,this.camera=s,this.overrideMaterial=void 0,this.clearColor=void 0,this.clearAlpha=0,this.clear=!1,this.clearDepth=!1,this.needsSwap=!1,this.renderDebugView=!1,this.needPick=!1,this.x=0,this.y=0,this.pickedId=-1;const n=document.createElement("canvas");n.width=64,n.height=64;const a=n.getContext("2d");function r(t){const s=t.object;if(!s||!s.isObject3D)return;if(!s.visible)return;if(!H.allowSelection(s))return;const n=s.id,a=s.material,r=s.geometry;let o=0;a.morphTargets&&r.isBufferGeometry&&(o=r.morphAttributes.position.length>0?1:0);const c=s.isSkinnedMesh?1:0,l=o<<0|c<<1|(!0===s.isInstancedMesh?1:0)<<2|(a.side===e.FrontSide?1:0)<<3|(a.side===e.BackSide?1:0)<<4|(a.side===e.DoubleSide?1:0)<<5|(a.isSpriteMaterial?1:0)<<6;let d=ft[l];d||(d=new e.ShaderMaterial({defines:{USE_UV:"",USE_LOGDEPTHBUF:""},vertexShader:e.ShaderChunk.meshbasic_vert,fragmentShader:"\n                        #include <common>\n\n                        varying vec2 vUv;\n\n                        uniform float opacity;\n                        uniform sampler2D map;\n                        uniform vec4 objectId;\n                        uniform float useMap;\n\n                        #include <logdepthbuf_pars_fragment>\n\n                        void main() {\n                            #include <logdepthbuf_fragment>\n\n                            gl_FragColor = objectId;\n\n                            if (opacity < 0.05) discard;\n                            if (useMap > 0.0) {\n                                vec4 texelColor = texture2D(map, vUv);\n                                if (texelColor.a < 0.05) discard;\n                            }\n                        }\n                    ",fog:!1,lights:!1,side:s.isSprite?e.DoubleSide:e.FrontSide}),d.uniforms={opacity:{value:1},map:{value:void 0},uvTransform:{value:new e.Matrix3},objectId:{value:[1,1,1,1]},useMap:{value:0}},d.side=a.side,d.skinning=c>0,d.morphTargets=o>0,ft[l]=d),d.uniforms.objectId.value=[(n>>0&255)/255,(n>>8&255)/255,(n>>16&255)/255,(n>>24&255)/255],d.uniforms.useMap.value=a.map?1:0,a.map&&(s.isSpriteHelper?d.uniforms.map.value=i.spriteMap:d.uniforms.map.value=a.map),d.uniformsNeedUpdate=!0,wt.renderBufferDirect(i.camera,i.scene,r,d,s,null)}a.fillStyle="rgb(255,255,255)",a.beginPath(),a.arc(32,32,32,0,2*Math.PI),a.closePath(),a.fill(),this.spriteMap=new e.CanvasTexture(n),bt=new e.Scene,bt.onAfterRender=function(){const e=wt.renderLists.get(i.scene,0);e.opaque.forEach(r),e.transmissive.forEach(r),e.transparent.forEach(r)},this.pickingTarget=new e.WebGLRenderTarget(1,1,{minFilter:e.NearestFilter,magFilter:e.NearestFilter,format:e.RGBAFormat,colorSpace:e.LinearSRGBColorSpace}),this.pixelBuffer=new Uint8Array(4*this.pickingTarget.width*this.pickingTarget.height)}dispose(){this.pickingTarget.dispose(),this.spriteMap.dispose(),console.warn("GpuPickerPass: Instance was disposed!")}render(e,t,s){if(!1===this.needPick&&!1===this.renderDebugView)return;wt=e;const i=e.domElement.width,n=e.domElement.height;this.camera.setViewOffset(i,n,this.x,this.y,1,1);const a=e.getRenderTarget(),r=e.getClearAlpha();e.getClearColor(gt),e.setRenderTarget(this.pickingTarget),e.setClearColor(yt),e.clear(),e.render(bt,this.camera),e.readRenderTargetPixels(this.pickingTarget,0,0,this.pickingTarget.width,this.pickingTarget.height,this.pixelBuffer),e.setRenderTarget(a),this.camera.clearViewOffset(),this.renderDebugView&&e.render(bt,this.camera),e.setClearColor(gt,r),this.needPick&&(this.pickedId=this.pixelBuffer[0]+(this.pixelBuffer[1]<<8)+(this.pixelBuffer[2]<<16)+(this.pixelBuffer[3]<<24),this.needPick=!1)}renderPickScene(e,t){wt=e;const s=e.getClearAlpha();e.getClearColor(gt),e.setClearColor(yt),e.clear(),e.render(bt,t),e.setClearColor(gt,s)}}new e.Vector2(1,1);class vt{init(t){let s;switch(t.style){case"perspective":this._tanFOV=Math.tan(Math.PI/180*t.fov/2),this._windowHeight=t.fixedSize?1e3:0;let i=t.nearPersp<=0?1e-5:t.nearPersp,n=0==t.farPersp?1e-5:t.farPersp;n===i&&(n+=.001),s=new e.PerspectiveCamera(t.fov,1,i,n),s.fixedSize=t.fixedSize;break;case"orthographic":let a=t.nearOrtho,r=t.farOrtho,o=t.left,c=t.right,l=t.top,d=t.bottom;r==r&&(r+=.001),c===o&&(c+=.001),l===d&&(l+=.001),s=new e.OrthographicCamera(o,c,l,d,a,r);break;default:console.error(`Camera.init: Invalid camera type '${t.style}'`)}s&&s.isCamera&&(s.position.set(0,0,0),s.lookAt(0,0,0)),this.backend=s,this.data=t}dispose(){}attach(){this.entity&&this.backend&&this.entity.add(this.backend)}detach(){this.entity&&this.backend&&this.entity.remove(this.backend)}three(){return this.backend}}vt.config={schema:{style:{type:"select",default:"perspective",select:["perspective","orthographic"]},nearPersp:{type:"number",default:1,min:0,step:.1,if:{style:["perspective"]}},farPersp:{type:"number",default:500,min:0,step:1,if:{style:["perspective"]}},nearOrtho:{type:"number",default:-500,step:1,if:{style:["orthographic"]}},farOrtho:{type:"number",default:500,step:1,if:{style:["orthographic"]}},fov:{type:"number",default:58.1,if:{style:["perspective"]}},fixedSize:{type:"boolean",default:!0,if:{style:["perspective"]}},left:{type:"number",default:-1,if:{style:["orthographic"]}},right:{type:"number",default:1,if:{style:["orthographic"]}},top:{type:"number",default:1,if:{style:["orthographic"]}},bottom:{type:"number",default:-1,if:{style:["orthographic"]}}},icon:"",color:"#4B4886"},Y.register("camera",vt);new e.BoxGeometry(.5,.5,.5);const St=(new e.Shape).absarc(0,0,.5),Mt=new e.Shape([new e.Vector2(-.5,.5),new e.Vector2(-.5,-.5),new e.Vector2(.5,-.5)]);class kt{init(t){if(t.isBufferGeometry){const e=t.uuid;I.addAsset(t),(t=this.defaultData("style","asset")).asset=e}let s;switch(t.style){case"asset":const i=I.getAsset(t.asset);i&&i.isBufferGeometry&&(s=i);break;case"box":s=new e.BoxGeometry(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments);break;case"capsule":const n=z.clamp(t.radiusTop,.1,t.height)/1.5,a=z.clamp(t.radiusBottom,.1,t.height)/1.5,r=t.height/1.5;s=new Ye(n,a,r,t.radialSegments,t.heightSegments,t.capSegments,t.capSegments,t.thetaStart,t.thetaLength),s=Qe.uvMapSphere(s,"v");break;case"circle":s=new e.CircleGeometry(t.radius,t.segments,t.thetaStart,t.thetaLength);break;case"cone":s=new Ze(0,t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength);break;case"cylinder":s=new Ze(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength);break;case"lathe":const o=[];let c=I.getAsset(t.shape);if(c&&"Shape"===c.type){const s=c.getPoints(t.segments);for(let t=0;t<s.length;t++)o.push(new e.Vector2(s[t].x,s[t].y))}else for(let t=0;t<2.5;t+=.1)o.push(new e.Vector2(Math.abs(.4*Math.cos(t))+.2,.4*t));s=new e.LatheGeometry(o,t.segments,0,t.phiLength),s.center();break;case"plane":s=new e.PlaneGeometry(t.width,t.height,t.widthSegments,t.heightSegments);break;case"platonicSolid":switch(t.polyhedron){case"dodecahedron":default:s=new e.DodecahedronGeometry(t.radius,t.detail);break;case"icosahedron":s=new e.IcosahedronGeometry(t.radius,t.detail);break;case"octahedron":s=new e.OctahedronGeometry(t.radius,t.detail);break;case"tetrahedron":s=new e.TetrahedronGeometry(t.radius,t.detail)}break;case"ring":s=new e.RingGeometry(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength);break;case"roundedBox":s=new p(t.width,t.height,t.depth,t.segments,t.radius);break;case"shape":let l=I.getAsset(t.shape);l&&"Shape"===l.type||(l=Mt);const d={depth:t.depth,curveSegments:t.curveSegments,steps:t.steps,bevelEnabled:t.bevelEnabled,bevelThickness:t.bevelThickness,bevelSize:t.bevelSize,bevelSegments:t.bevelSegments};s=new e.ExtrudeGeometry(l,d),s.center();break;case"sphere":s=new e.SphereGeometry(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength);break;case"torus":s=new e.TorusGeometry(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc);break;case"torusKnot":s=new e.TorusKnotGeometry(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q);break;case"tube":let h=I.getAsset(t.shape);h&&"Shape"===h.type||(h=St);const u=new e.CurvePath,m=h.getPoints(Math.max(256,4*t.tubularSegments));for(let t=0;t<m.length-1;t++){const s=m[t],i=m[t+1];u.curves.push(new e.LineCurve3(new e.Vector3(s.x,s.y,0),new e.Vector3(i.x,i.y,0)))}s=new e.TubeGeometry(u,t.tubularSegments,t.radius,t.radialSegments,t.closed),s.center();break;default:console.error("Geometry: Invalid geometry type "+t.style)}if(s&&s.isBufferGeometry){const e=s.constructor.name,i={split:t.edgeSplit??!1,uvSmooth:t.uvSmooth??!1,flatOnly:t.flatOnly??!1,preserveEdges:!1,maxTriangles:25e3};if(i.split||t.subdivide>0){let e=h.modify(s,t.subdivide,i);e&&(s.dispose(),s=e)}if("cube"===t.textureMapping?s=Qe.uvMapCube(s):"sphere"===t.textureMapping&&(s=Qe.uvMapSphere(s)),Array.isArray(t.textureWrap)&&(1!==t.textureWrap[0]||1!==t.textureWrap[1])){const e=Math.max(t.textureWrap[0],0),i=Math.max(t.textureWrap[1],0);Qe.repeatTexture(s,e,i)}s.name=e}this.backend=s,this.data=t}dispose(){}attach(){if(this.entity){const e=this.entity.getComponent("material");e&&e.refreshMesh()}}detach(){if(this.entity){const e=this.entity.getComponent("material");e&&e.refreshMesh()}}three(){return this.backend}}kt.config={schema:{style:[{type:"select",default:"box",select:["asset","box","capsule","circle","cone","cylinder","lathe","plane","platonicSolid","ring","roundedBox","shape","sphere","torus","torusKnot","tube"]}],asset:{type:"asset",class:"geometry",if:{style:["asset"]}},shape:{type:"asset",class:"shape",if:{style:["lathe","shape","tube"]}},styleDivider:{type:"layout",format:"divider"},polyhedron:[{type:"select",default:"dodecahedron",select:["dodecahedron","icosahedron","octahedron","tetrahedron"],if:{style:["platonicSolid"]}}],points:{type:"shape",alias:"points",default:null,if:{style:["lathe"]}},shapes:{type:"shape",alias:"shape",default:null,if:{style:["shape"]}},path:{type:"shape",alias:"curve",default:null,if:{style:["tube"]}},depth:[{type:"number",default:1,min:0,step:"grid",if:{style:["box","roundedBox"]}},{type:"number",default:.5,min:0,step:"grid",if:{style:["shape"]}}],height:[{type:"number",default:1,min:0,step:"grid",if:{style:["box","capsule","cone","cylinder","plane","roundedBox"]}}],width:[{type:"number",default:1,min:0,step:"grid",if:{style:["box","plane","roundedBox"]}}],widthSegments:[{type:"int",default:1,min:1,max:1024,promode:!0,if:{style:["box","plane"]}},{type:"int",default:24,min:4,max:1024,if:{style:["sphere"]}}],heightSegments:[{type:"int",default:1,min:1,max:1024,promode:!0,if:{style:["box","plane"]}},{type:"int",default:1,min:1,max:1024,if:{style:["cone","cylinder"]}},{type:"int",default:24,min:1,max:1024,if:{style:["sphere"]}}],depthSegments:[{type:"int",default:1,min:1,max:1024,promode:!0,if:{style:["box"]}}],radius:[{type:"number",default:.25,min:0,step:.01,if:{style:["roundedBox"]}},{type:"number",default:.5,min:0,step:.01,if:{style:["circle","cone","platonicSolid","sphere"]}},{type:"number",default:.5,min:0,step:.01,if:{style:["torus"]}},{type:"number",default:.4,min:0,step:.01,if:{style:["torusKnot"]}},{type:"number",default:.1,min:0,step:.01,if:{style:["tube"]}}],radiusTop:[{type:"number",default:.5,min:0,step:.01,if:{style:["capsule"]}},{type:"number",default:.5,min:0,step:.01,if:{style:["cylinder"]}}],radiusBottom:[{type:"number",default:.5,min:0,step:.01,if:{style:["capsule"]}},{type:"number",default:.5,min:0,step:.01,if:{style:["cylinder"]}}],segments:[{type:"int",default:36,min:3,max:64,if:{style:["circle"]}},{type:"int",default:16,min:1,max:64,if:{style:["lathe"]}},{type:"int",default:4,min:1,max:10,if:{style:["roundedBox"]}}],thetaLength:[{type:"angle",default:2*Math.PI,min:0,max:360,if:{style:["circle","ring"]}},{type:"angle",default:2*Math.PI,min:0,max:360,promode:!0,if:{style:["capsule","cone","cylinder"]}},{type:"angle",default:Math.PI,min:0,max:720,promode:!0,if:{style:["sphere"]}}],thetaStart:[{type:"angle",default:0,if:{style:["circle","ring","sphere"]}},{type:"angle",default:0,promode:!0,if:{style:["capsule","cone","cylinder"]}}],phiLength:{type:"angle",default:2*Math.PI,max:360,if:{style:["lathe","sphere"]}},phiStart:{type:"angle",default:0,if:{style:["sphere"]}},capSegments:{type:"int",default:6,min:1,max:36,if:{style:["capsule"]}},radialSegments:[{type:"int",default:24,min:2,max:64,if:{style:["capsule","cone","cylinder","torus","torusKnot","tube"]}}],openEnded:{type:"boolean",default:!1,if:{style:["cone","cylinder"]}},detail:{type:"slider",default:0,min:0,max:9,step:1,precision:0,if:{style:["platonicSolid"]}},innerRadius:{type:"number",default:.25,min:0,step:.01,if:{style:["ring"]}},outerRadius:{type:"number",default:.5,min:0,step:.01,if:{style:["ring"]}},phiSegments:{type:"int",default:10,min:1,max:64,promode:!0,if:{style:["ring"]}},thetaSegments:{type:"int",default:36,min:3,max:128,if:{style:["ring"]}},steps:{type:"int",alias:"Depth Segments",default:3,min:1,max:128,promode:!0,if:{style:["shape"]}},bevelEnabled:{type:"boolean",alias:"bevel",default:!1,if:{style:["shape"]},rebuild:!0},bevelThickness:{type:"number",default:.1,min:0,step:.01,if:{style:["shape"],bevelEnabled:[!0]}},bevelSize:{type:"number",default:.1,min:0,step:.01,if:{style:["shape"],bevelEnabled:[!0]}},bevelSegments:{type:"int",default:4,min:0,max:64,promode:!0,if:{style:["shape"],bevelEnabled:[!0]}},curveSegments:{type:"int",default:16,min:1,max:128,promode:!0,if:{style:["shape"]}},tube:[{type:"number",default:.2,min:0,step:.01,if:{style:["torus"]}},{type:"number",default:.1,min:0,step:.01,if:{style:["torusKnot"]}}],tubularSegments:[{type:"int",default:32,min:3,max:128,if:{style:["torus"]}},{type:"int",default:64,min:3,max:128,if:{style:["torusKnot"]}},{type:"int",default:128,min:2,if:{style:["tube"]}}],arc:{type:"angle",default:2*Math.PI,min:0,max:360,if:{style:["torus"]}},p:{type:"number",default:2,min:1,max:128,if:{style:["torusKnot"]}},q:{type:"number",default:3,min:1,max:128,if:{style:["torusKnot"]}},closed:{type:"boolean",default:!0,if:{style:["tube"]}},modifierDivider:{type:"layout",format:"divider"},subdivide:{type:"slider",default:0,min:0,max:3,step:1,precision:0,rebuild:!0},edgeSplit:{type:"boolean",default:!1,hide:{subdivide:[0]}},uvSmooth:{type:"boolean",default:!1,promode:!0,hide:{subdivide:[0]}},flatOnly:{type:"boolean",default:!1,promode:!0,hide:{subdivide:[0]}},textureDivider:{type:"layout",format:"divider"},textureMapping:[{type:"select",default:"cube",select:["none","cube","sphere"],if:{style:["shape"]}},{type:"select",default:"none",select:["none","cube","sphere"],not:{style:["shape"]}}],textureWrap:{type:"vector",size:2,tint:!1,default:[1,1],min:0,step:.2,precision:2,label:["X","Y"]}},icon:"",color:"rgb(255, 113, 0)",dependencies:["material"]},Y.register("geometry",kt);class Ct{init(t){let s,i=!1;switch(t.style){case"ambient":s=new e.AmbientLight(t.color,t.intensity);break;case"directional":s=new e.DirectionalLight(t.color,t.intensity),i=!0;break;case"hemisphere":s=new e.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"point":s=new e.PointLight(t.color,t.intensity,t.distance,t.decay),i=!0;break;case"spot":const n=Math.PI/180*t.angle;s=new e.SpotLight(t.color,t.intensity,t.distance,n,t.penumbra,t.decay),i=!0;break;default:console.error(`Light: Invalid light type '${t.style}'`)}if(s&&s.isLight&&(s.position.set(0,0,0),i)){const e=10;s.castShadow=!0,s.shadow.bias=t.shadowBias,s.shadow.mapSize.width=2048,s.shadow.mapSize.height=2048,s.shadow.camera.near=-500,s.shadow.camera.far=500,s.shadow.camera.left=-e,s.shadow.camera.right=e,s.shadow.camera.top=e,s.shadow.camera.bottom=-e,s.shadow.camera.updateProjectionMatrix()}this.backend=s,this.data=t}dispose(){const e=this.backend;e&&e.shadow&&e.shadow.map&&e.shadow.map.dispose()}attach(){this.entity&&this.backend&&this.entity.add(this.backend)}detach(){this.entity&&this.backend&&this.entity.remove(this.backend)}three(){return this.backend}}Ct.config={schema:{style:{type:"select",default:"ambient",select:["ambient","directional","hemisphere","point","spot"]},styleDivider:{type:"layout",format:"divider"},color:[{type:"color",default:16777215,if:{style:["ambient","directional","point","spot"]}},{type:"color",alias:"skyColor",default:8454143,if:{style:["hemisphere"]}}],groundColor:{type:"color",default:8413248,if:{style:["hemisphere"]}},intensity:[{type:"slider",default:.25,step:.05,min:0,max:2,if:{style:["ambient"]}},{type:"slider",default:.5,step:.05,min:0,max:2,if:{style:["hemisphere"]}},{type:"slider",default:1,step:.05,min:0,max:2,if:{style:["directional"]}},{type:"slider",default:1,step:.05,min:0,max:2,if:{style:["point","spot"]}}],distance:{type:"number",default:0,if:{style:["point","spot"]}},decay:{type:"number",default:1,if:{style:["point","spot"]}},angle:{type:"number",default:45,unit:"°",if:{style:["spot"]}},penumbra:{type:"number",default:0,min:0,max:1,if:{style:["spot"]}},shadowBias:{type:"number",default:0,precision:6,promode:!0,if:{style:["directional","point","spot"]}}},icon:"",color:"#222222"},Y.register("light",Ct);const Pt=["NoBlending","NormalBlending","AdditiveBlending","SubstractiveBlending","MultiplyBlending","CustomBlending"],zt=["FrontSide","BackSide","DoubleSide"];class At{init(t){const s={};if(t.isMaterial){const e=t.uuid;I.addAsset(t),(t=this.defaultData("style","asset")).asset=e}else{for(const e in t){const i=t[e];s[e]=i;let n=At.config.schema[e];if(U.isIterable(n)&&n.length>0&&(n=n[0]),i&&n&&"asset"===n.type)if(i.isTexture)I.addAsset(i);else{const t=I.getAsset(i);t&&t.isTexture?s[e]=t:s[e]=null}}delete s.base,delete s.style,delete s.edgeSize,delete s.gradientSize,delete s.premultiplyAlpha,delete s.useUv,"string"==typeof s.blending&&(s.blending=Pt.indexOf(s.blending)),"string"==typeof s.side&&(s.side=zt.indexOf(s.side)),"BasicDepthPacking"===s.depthPacking&&(s.depthPacking=e.BasicDepthPacking),"RGBADepthPacking"===s.depthPacking&&(s.depthPacking=e.RGBADepthPacking)}let i;switch(t.style){case"asset":const n=I.getAsset(t.asset);n&&n.isMaterial&&(i=n.clone());break;case"basic":i=new e.MeshBasicMaterial(s);break;case"depth":i=new e.MeshDepthMaterial(s);break;case"lambert":i=new e.MeshLambertMaterial(s);break;case"matcap":i=new e.MeshMatcapMaterial(s);break;case"normal":i=new e.MeshNormalMaterial(s);break;case"phong":i=new e.MeshPhongMaterial(s);break;case"physical":i=new e.MeshPhysicalMaterial(s);break;case"points":i=new e.PointsMaterial(s);break;case"shader":i=new e.ShaderMaterial(s);break;case"standard":i=new e.MeshStandardMaterial(s);break;default:console.error(`Material: Invalid material type '${t.style}'`)}i&&i.isMaterial,this.backend=i,this.data=t}dispose(){}attach(){this.refreshMesh()}detach(){this.refreshMesh()}refreshMesh(){if(this.entity&&this.mesh&&(this.entity.remove(this.mesh),H.clearObject(this.mesh),this.mesh=void 0),!this.attached)return;if(!this.backend||!this.backend.isMaterial)return;const t=this.backend.clone();!function(t,s={style:"basic",premultiplyAlpha:!0}){if(!t||!t.isMaterial)return;let i=s&&1===s.opacity&&void 0===s.map;t.transparent=!i,t.alphaTest=.01,t.polygonOffset=!0,t.polygonOffsetFactor=1,t.onBeforeCompile=function(e){s.premultiplyAlpha&&e.fragmentShader&&(e.fragmentShader=e.fragmentShader.replace("#include <premultiplied_alpha_fragment>","gl_FragColor.rgba *= gl_FragColor.a;"))},s.premultiplyAlpha&&(t.blending=e.CustomBlending,t.blendEquation=e.AddEquation,t.blendSrc=e.OneFactor,t.blendDst=e.OneMinusSrcAlphaFactor,t.blendEquationAlpha=e.AddEquation,t.blendSrcAlpha=e.OneFactor,t.blendDstAlpha=e.OneMinusSrcAlphaFactor);t.needsUpdate=!0}(t,this.toJSON());const s=this.entity.getComponent("geometry");if(!s)return;if(!s.attached)return;const i=s.backend;if(!i)return;if(this.data&&"points"===this.data.style){const s=i.clone();this.data.useUv||s.deleteAttribute("uv"),this.mesh=new e.Points(s,t),s.dispose()}else this.mesh=new e.Mesh(i,t),this.mesh.castShadow=this.entity.castShadow,this.mesh.receiveShadow=this.entity.receiveShadow;this.mesh.name=`Backend Object3D for ${this.entity.name}`;!0===this.backend.isMeshPhysicalMaterial&&this.backend.transmission>0&&(this.backend.envMap=hdrEquirect),this.backend.opacity<.05&&(Ce.app&&Ce.app.state!==g.STOPPED||(t.map=null,t.opacity=.25,t.wireframe=!0,this.mesh.castShadow=!1)),this.entity&&this.mesh&&this.entity.add(this.mesh)}three(){return this.backend}}At.config={schema:{style:[{type:"select",default:"standard",promode:!0,select:["asset","basic","depth","lambert","matcap","normal","phong","physical","points","shader","standard"]},{type:"select",default:"standard",select:["asset","basic","points","standard"]}],styleDivider:{type:"layout",format:"divider"},asset:{type:"asset",class:"material",if:{style:["asset"]}},color:{type:"color",if:{style:["basic","lambert","matcap","phong","physical","points","standard"]}},emissive:{type:"color",default:0,promode:!0,if:{style:["lambert","phong","physical","standard"]}},emissiveIntensity:{type:"slider",default:1,min:0,max:2,promode:!0,if:{style:["lambert","phong","physical","standard"]}},opacity:{type:"slider",default:1,min:0,max:1,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","points","standard"]}},depthTest:{type:"boolean",default:!0,promode:!0,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","standard"]}},depthWrite:{type:"boolean",default:!0,promode:!0,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","standard"]}},flatShading:{type:"boolean",default:!1,if:{style:["phong","physical","standard","normal","matcap"]}},premultiplyAlpha:{type:"boolean",default:!0,promode:!0,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","points","standard"]}},wireframe:{type:"boolean",default:!1,if:{style:["basic","depth","lambert","normal","phong","physical","standard"]}},vertexColors:{type:"boolean",default:!1,promode:!0,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","standard"]}},size:{type:"slider",default:.05,min:0,max:1,if:{style:["points"]}},sizeAttenuation:{type:"boolean",default:!0,if:{style:["points"]}},useUv:{type:"boolean",default:!1,if:{style:["points"]}},metalness:{type:"slider",default:.1,min:0,max:1,if:{style:["physical","standard"]}},roughness:{type:"slider",default:1,min:0,max:1,if:{style:["physical","standard"]}},specular:{type:"color",default:1118481,if:{style:["phong"]}},shininess:{type:"number",default:30,if:{style:["phong"]}},clearcoat:{type:"slider",default:0,min:0,max:1,if:{style:["physical"]}},clearcoatRoughness:{type:"slider",default:0,min:0,max:1,if:{style:["physical"]}},ior:{type:"slider",default:1.5,min:1,max:2,if:{style:["physical"]}},sheen:{type:"slider",default:0,min:0,max:1,if:{style:["physical"]}},sheenRoughness:{type:"slider",default:0,min:0,max:1,if:{style:["physical"]}},sheenColor:{type:"color",if:{style:["physical"]}},specularColor:{type:"color",promode:!0,if:{style:["physical"]}},specularIntensity:{type:"slider",default:1,min:0,max:2,promode:!0,if:{style:["physical"]}},thickness:{type:"slider",default:0,min:0,max:5,if:{style:["physical"]}},transmission:{type:"slider",default:0,min:0,max:1,if:{style:["physical"]}},depthPacking:{type:"select",default:"BasicDepthPacking",select:["BasicDepthPacking","RGBADepthPacking"],if:{style:["depth"]}},map:[{type:"asset",class:"texture",alias:"texture",if:{style:["basic","depth","lambert","matcap","phong","points","physical","standard"]}}],matcap:{type:"asset",class:"texture",if:{style:["matcap"]}},alphaMap:{type:"asset",class:"texture",promode:!0,if:{style:["basic","depth","lambert","matcap","phong","physical","points","standard"]}},bumpMap:{type:"asset",class:"texture",promode:!0,if:{style:["matcap","normal","phong","physical","standard"]}},bumpScale:{type:"slider",default:1,min:0,max:2,promode:!0,if:{style:["matcap","normal","phong","physical","standard"]}},clearcoatNormalMap:{type:"asset",class:"texture",promode:!0,if:{style:["physical"]}},clearcoatNormalScale:{type:"vector2",default:[1,1],promode:!0,if:{style:["physical"]}},displacementMap:{type:"asset",class:"texture",promode:!0,if:{style:["depth","matcap","normal","phong","physical","standard"]}},displacementScale:{type:"slider",default:1,min:0,max:2,promode:!0,if:{style:["depth","matcap","normal","phong","physical","standard"]}},emissiveMap:{type:"asset",class:"texture",promode:!0,if:{style:["lambert","phong","physical","standard"]}},metalnessMap:{type:"asset",class:"texture",promode:!0,if:{style:["physical","standard"]}},roughnessMap:{type:"asset",class:"texture",promode:!0,if:{style:["physical","standard"]}},specularMap:{type:"asset",class:"texture",promode:!0,if:{style:["basic","lambert","phong"]}},thicknessMap:{type:"asset",class:"texture",promode:!0,if:{style:["physical"]}},transmissionMap:{type:"asset",class:"texture",promode:!0,if:{style:["physical"]}},aoMap:{type:"asset",class:"texture",promode:!0,if:{style:["basic","lambert","phong","physical","standard"]}},envMap:{type:"asset",class:"texture",promode:!0,if:{style:["basic","lambert","phong","physical","standard"]}},lightMap:{type:"asset",class:"texture",promode:!0,if:{style:["basic","lambert","phong","physical","standard"]}},normalMap:{type:"asset",class:"texture",if:{style:["matcap","normal","phong","physical","standard"]}},side:{type:"select",default:"FrontSide",select:zt,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","standard"]}}},icon:"",color:"rgb(165, 243, 0)",dependencies:["geometry"]},Y.register("material",At);class Ot{init(t){const s=t.isObject3D?t:new e.Object3D;s.traverse((e=>{e.castShadow=this.entity.castShadow})),s.traverse((e=>{e.receiveShadow=this.entity.receiveShadow})),this.backed=s,this.data=t}dispose(){}attach(){this.entity&&this.backend&&this.entity.add(this.backend)}detach(){this.entity&&this.backend&&this.entity.remove(this.backend)}three(){return this.backend}}Ot.config={multiple:!0,icon:"",color:"#F7DB63"},Y.register("mesh",Ot);class Dt{init(e){if(e.isScript){const t=e.uuid;I.addAsset(e),(e=this.defaultData()).asset=t}const t=I.getAsset(e.asset);t&&t.isScript,this.backend=void 0,this.data=e}}Dt.config={schema:{script:{type:"asset",class:"script",rebuild:!0},divider:{type:"layout",format:"divider"},variables:{type:"object",default:{}}},icon:"",color:"#090B11",width:"40%",multiple:!0,dependencies:[]},Y.register("script",Dt);class Et{init(e){let t;this.backend=t,this.data=e}dispose(){}attach(){this.entity&&this.backend&&this.entity.add(this.backend)}detach(){this.entity&&this.backend&&this.entity.remove(this.backend)}three(){return this.backend}}Et.config={schema:{style:[{type:"select",default:"basic",select:["asset","basic","array"]}],divider:{type:"layout",format:"divider"},asset:{type:"asset",if:{style:["asset"]}},assetDivider:{type:"layout",format:"divider"},geometry:{type:"asset",class:"geometry",if:{style:["asset"]}},material:{type:"asset",class:"material",if:{style:["asset"]}},script:{type:"asset",class:"script",if:{style:["asset"]}},shape:{type:"asset",class:"shape",if:{style:["asset"]}},texture:{type:"asset",class:"texture",if:{style:["asset"]}},prefabDivider:{type:"layout",format:"divider"},prefab:{type:"asset",class:"prefab",if:{style:["asset"]}},select:{type:"select",default:"Zebra",select:["Apple","Banana","Cherry","Zebra","Red"],if:{style:["basic"]}},number:{type:"number",default:.05,min:0,max:1,label:"test",if:{style:["basic"]}},int:{type:"int",default:5,min:3,max:10,if:{style:["basic"]}},angle:{type:"angle",default:2*Math.PI,min:0,max:360,if:{style:["basic"]}},variable:{type:"variable",default:[0,0],min:0,max:100,if:{style:["basic"]}},slider:{type:"slider",default:0,min:0,max:9,step:1,precision:0,if:{style:["basic"]}},boolean:{type:"boolean",default:!0,if:{style:["basic"]}},color:{type:"color",default:16711680,if:{style:["basic"]}},string:{type:"string",if:{style:["basic"]}},multiline:{type:"string",rows:4,if:{style:["basic"]}},numberArray:{type:"vector",size:1,if:{style:["array"]}},vector2:{type:"vector",size:2,tint:!0,label:["x","y"],if:{style:["array"]}},vector3:{type:"vector",size:3,tint:!0,min:[1,1,1],max:[2,2,2],step:.1,precision:2,if:{style:["array"]}},vector4:{type:"vector",size:4,tint:!0,if:{style:["array"]}}},icon:"",color:"rgb(128, 128, 128)",dependencies:[]},Y.register("test",Et),"undefined"!=typeof window&&(window.__ONSIGHT__?console.warn(`Onsight v${window.__ONSIGHT__} already imported, now importing v0.0.6!`):window.__ONSIGHT__="0.0.6");export{b as APP_EVENTS,g as APP_STATES,je as App,I as AssetManager,ct as BasicLine,dt as BasicWireBox,pt as BasicWireframe,v as CAMERA_SCALE,S as CAMERA_START_DISTANCE,M as CAMERA_START_HEIGHT,Ue as CameraFollow,C as CameraUtils,Ye as CapsuleGeometry,L as Clock,Ne as ColorChange,Y as ComponentManager,Ze as CylinderGeometry,m as ENTITY_TYPES,he as Entity3D,Le as EntityPool,Z as EntityUtils,lt as FatLine,ht as FatWireBox,ut as FatWireframe,Qe as GeometryUtils,xt as GpuPickerPass,We as KeyControls,z as Maths,H as ObjectUtils,Ke as PrismGeometry,me as Project,x as REBUILD_TYPES,D as RenderUtils,A as Renderer3D,Ge as RotateEntity,y as SCENE_TYPES,w as SCRIPT_FORMAT,Xe as SVGBuilder,pe as Scene3D,Ce as SceneManager,E as Script,mt as SkyObject,j as Strings,U as System,u as VERSION,Re as Vectors,f as WORLD_TYPES,ue as World3D};
