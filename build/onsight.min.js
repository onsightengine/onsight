/**
 * @description Onsight Engine
 * @about       Easy to use 2D / 3D JavaScript game engine.
 * @author      Stephens Nunnally <@stevinz>
 * @version     v0.0.3
 * @license     MIT - Copyright (c) 2021-2023 Stephens Nunnally and Scidian Studios
 * @source      https://github.com/onsightengine
 */
import*as e from"three";import{mergeBufferGeometries as t}from"three/addons/utils/BufferGeometryUtils.js";import{SVGLoader as i}from"three/addons/loaders/SVGLoader.js";import{Line2 as s}from"three/addons/lines/Line2.js";import{LineGeometry as n}from"three/addons/lines/LineGeometry.js";import{LineMaterial as a}from"three/addons/lines/LineMaterial.js";import{LineSegmentsGeometry as r}from"three/addons/lines/LineSegmentsGeometry.js";import{Wireframe as o}from"three/addons/lines/Wireframe.js";import{WireframeGeometry2 as l}from"three/addons/lines/WireframeGeometry2.js";import{Pass as c}from"three/addons/postprocessing/Pass.js";import{LoopSubdivision as d}from"three-subdivide";import{RoundedBoxGeometry as h}from"three/addons/geometries/RoundedBoxGeometry.js";const p="0.0.3",u={RENDERER_3D:{PIXI:"PIXI"},PHYSICS_2D:{MATTER:"MATTER"},RENDERER_3D:{THREE:"THREE"},PHYSICS_3D:{CANNON:"CANNON",RAPIER:"RAPIER"}},m={Entity2D:"Entity2D",Entity3D:"Entity3D"},y={Scene2D:"Scene2D",Scene3D:"Scene3D"},f={World2D:"World2D",World3D:"World3D"},g={IGNORE:"flagIgnore",LOCKED:"flagLocked"},b={PLAYING:"playing",PAUSED:"paused",STOPPED:"stopped"},w=.01,x=5,v=0,S=new e.Raycaster;class M{static createOrthographic(t,i,s="none",n=0){const a=new e.OrthographicCamera(0,1,1,0,-1e3,1e3);return a.desiredSize=n,a.fitType=s,a.position.set(0,0,5),a.lookAt(0,0,0),M.updateOrthographic(a,t,i),a}static createPerspective(t,i,s=!0){const n=new e.PerspectiveCamera(58.1,1,.01,1e3);return n.tanFOV=Math.tan(Math.PI/180*n.fov/2),n.windowHeight=s?1e3:0,n.fixedSize=s,n.position.set(0,0,5),n.lookAt(0,0,0),M.updatePerspective(n,t,i),n}static updateCamera(e,t,i){e.isPerspectiveCamera&&M.updatePerspective(e,t,i),e.isOrthographicCamera&&M.updateOrthographic(e,t,i)}static updatePerspective(e,t,i){e.fixedSize&&(e.fov=360/Math.PI*Math.atan(e.tanFOV*(i/e.windowHeight))),e.aspect=t/i,e.updateProjectionMatrix()}static updateOrthographic(e,t,i){let s=e.fitType,n=0;e.desiredSize?n=e.desiredSize:s="none";let a=1,r=1,o=n,l=n;"none"===s?(o=.01*t*.5,l=.01*i*.5):"width"===s?r=i/t:"height"===s&&(a=t/i),e.left=-o/a/2,e.right=o/a/2,e.top=l*r/2,e.bottom=-l*r/2,e.updateProjectionMatrix()}static screenPoint(t,i){return i&&i.isCamera?new e.Vector3.copy(t).project(i):(console.warn("CameraUtils.screenPoint: No camera provided!"),new e.Vector3)}static worldPoint(t,i,s=new e.Vector3,n="xy"){if(!i||!i.isCamera)return console.warn("CameraUtils.worldPoint: No camera provided!"),new e.Vector3;const a=new e.PlaneGeometry(1e8,1e8,2,2);switch(n.toLowerCase()){case"yz":a.rotateY(Math.PI/2);break;case"xz":a.rotateX(Math.PI/2)}a.translate(s.x,s.y,s.z);const r=new e.MeshBasicMaterial({side:e.DoubleSide}),o=new e.Mesh(a,r);S.setFromCamera(t,i),i.isOrthographicCamera&&S.ray.origin.set(t.x,t.y,-i.far).unproject(i);const l=S.intersectObject(o,!0);return a.dispose(),r.dispose(),l.length>0&&l[0].point.clone()}static distanceToFitObject(e,t,i=1.25){}static fitCameraToObject(t,i,s=null,n=1.25,a=!1){const r=new e.Box3;r.setFromObject(i);const o=r.getCenter(new e.Vector3),l=r.getSize(new e.Vector3),c=l.z/(2*Math.atan(Math.PI*t.fov/360)),d=Math.max(c,l.y/(2*Math.atan(Math.PI*t.fov/360))),h=l.x/(2.5*Math.atan(Math.PI*t.fov/360))/t.aspect,p=n*Math.max(d,h);t.near=p/100,t.far=100*p,t.updateProjectionMatrix(),t.position.copy(o),a&&(t.position.x+=p/6,t.position.y+=p/6),t.position.z+=p,t.lookAt(o),s&&(s.maxDistance=10*p,s.target.copy(o),s.update())}}class k{static radiansToDegrees(e){return e*(180/Math.PI)}static degreesToRadians(e){return Math.PI/180*e}static fuzzyFloat(e,t,i=.001){return e<t+i&&e>t-i}static fuzzyVector(e,t,i=.001){return!1!==k.fuzzyFloat(e.x,t.x,i)&&(!1!==k.fuzzyFloat(e.y,t.y,i)&&!1!==k.fuzzyFloat(e.z,t.z,i))}static fuzzyQuaternion(e,t,i=.001){return!1!==k.fuzzyVector(e,t,i)&&!1!==k.fuzzyFloat(e.w,t.w,i)}static clamp(e,t,i){return(e=Number(e))<t&&(e=t),e>i&&(e=i),e}static damp(e,t,i,s){return k.lerp(e,t,1-Math.exp(-i*s))}static lerp(e,t,i){return(1-i)*e+i*t}static roundTo(e,t=0){const i=Math.pow(10,t);return Math.round(e*i)/i}static isPowerOfTwo(e){return 0==(e&e-1)&&0!==e}static addCommas(e){return e.toString().replace(/(\d)(?=(\d{3})+(?!\d))/g,"$1,")}static countDecimals(e){return Math.floor(e.valueOf())===e.valueOf()?0:e.toString().split(".")[1].length||0}static isNumber(e){return null!=e&&"number"==typeof e&&!Number.isNaN(e)&&Number.isFinite(e)}static lineCollision(e,t,i,s,n,a,r,o){let l=(o-a)*(i-e)-(r-n)*(s-t);if(k.fuzzyFloat(l,0,1e-7))return!1;let c=((r-n)*(t-a)-(o-a)*(e-n))/l,d=((i-e)*(t-a)-(s-t)*(e-n))/l;return c>=0&&c<=1&&d>=0&&d<=1}static lineRectCollision(e,t,i,s,n,a,r,o){const l=k.lineCollision(e,t,i,s,n,a,n,o),c=k.lineCollision(e,t,i,s,r,a,r,o),d=k.lineCollision(e,t,i,s,n,a,r,a),h=k.lineCollision(e,t,i,s,n,o,r,o);return l||c||d||h}static randomFloat(e,t){return e+Math.random()*(t-e)}static randomInt(e=0,t=1){return e+Math.floor(Math.random()*(t-e))}}class z{static arrayFromArguments(){return 1===arguments.length&&Array.isArray(arguments[0])?arguments[0]:Array.from(arguments)}static isIterable(e){return null!=e&&"function"==typeof e[Symbol.iterator]}static isObject(e){return"object"==typeof e&&!Array.isArray(e)&&null!==e}static save(e,t){try{const i=document.createElement("a");document.body.appendChild(i),i.href=e,i.download=t||"data.json",i.click(),setTimeout((function(){document.body.removeChild(i),window.URL.revokeObjectURL(e)}),0)}catch(e){return void console.warn(e)}}static saveBuffer(e,t,i={type:"application/octet-stream"}){let s=URL.createObjectURL(new Blob([e],{type:i}));z.save(s,t)}static saveImage(e,t){z.save(e,t)}static saveString(e,t){let i=URL.createObjectURL(new Blob([e],{type:"text/plain"}));z.save(i,t)}static detectOS(){let e={Android:["android"],iOS:["iphone","ipad","ipod","ios"],Linux:["linux","x11","wayland"],Mac:["mac","darwin","osx","os x"],Win:["win"]},t=window.navigator.userAgent,i=window.navigator.userAgentData,s=i?i.platform:t;s=s.toLowerCase();for(let t in e)for(let i of e[t])if(-1!==s.indexOf(i))return t;return"Unknown OS"}static fullscreen(e){if(document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement){let e=document;(e.cancelFullScreen||e.exitFullscreen||e.webkitCancelFullScreen||e.webkitExitFullscreen||e.mozCancelFullScreen).call(e)}else{let t=e??document.body;(t.requestFullScreen||t.webkitRequestFullScreen||t.mozRequestFullScreen||t.msRequestFullScreen).call(t)}}static metaKeyOS(){return"Mac"===z.detectOS()?"⌘":"⌃"}static sleep(e){const t=Date.now();let i=t;for(;i-t<e;)i=Date.now()}static waitForObject(e,t,i,s=1e3,n=!1,a=5e3){let r=Date.now(),o=Date.now();!function l(){a&&Date.now()-o>a&&(console.info(`Still waiting on operation: ${e}`),o=Date.now()),void 0===t()||null===t()?setTimeout((function(){n&&Date.now()-r>n||l()}),s):i()}()}}const P=new e.Box3,C=new e.Matrix4,E=new e.Vector3,A=new e.Quaternion,O=new e.Quaternion,D=new e.Quaternion,B=new e.Vector3,j=new e.Quaternion,T=(new e.Euler,new e.Vector3);class F{static allowSelection(e){let t=!0;return e.userData&&(e.userData.flagIgnore&&(t=!1),e.userData.flagLocked&&(t=!1)),t}static checkTransforms(e){if(e.length<=1)return!0;e[0].getWorldQuaternion(A);for(let t=1;t<e.length;t++)if(e[t].getWorldQuaternion(D),!1===k.fuzzyQuaternion(A,D))return!1;return!0}static clearObject(e,t=!0){if(e&&e.isObject3D){for(e.geometry&&e.geometry.dispose(),e.material&&F.clearMaterial(e.material),e.dispose&&e.dispose();e.children.length>0;)F.clearObject(e.children[0],!0);F.resetTransform(e),t&&e.removeFromParent(),e=null}}static clearMaterial(e){!0!==z.isIterable(e)&&(e=[e]);for(let t=0,i=e.length;t<i;t++){const i=e[t];Object.keys(i).forEach((e=>{i[e]&&"function"==typeof i[e].dispose&&i[e].dispose()})),i.dispose&&i.dispose()}}static computeBounds(t,i,s=!1){void 0!==i&&!0===i.isBox3||(i=new e.Box3);const n=z.isIterable(t)?t:[t];if(i.makeEmpty(),s&&1===F.countGeometry(t)){let e;if(n.forEach((t=>{t.traverse((t=>{t.geometry&&(e=t)}))})),e&&e.geometry)return e.geometry.computeBoundingBox(),i.copy(e.geometry.boundingBox),e.matrixWorld.decompose(B,j,T),j.identity(),C.compose(B,j,T),i.applyMatrix4(C),i}return n.forEach((e=>i.expandByObject(e))),i}static computeCenter(e,t){const i=z.isIterable(e)?e:[e];if(F.computeBounds(i,P),P.isEmpty())for(let e of i)e.getWorldPosition(E),P.expandByPoint(E);return P.getCenter(t),t}static containsObject(e,t){if(t&&t.uuid&&z.isIterable(e))for(let i=0;i<e.length;i++)if(e[i].uuid===t.uuid)return!0;return!1}static copyLocalTransform(e,t,i=!0){e.updateMatrix(),e.matrix.decompose(t.position,O,t.scale),t.rotation.setFromQuaternion(O,void 0,!1),i&&t.updateMatrix()}static copyWorldTransform(e,t,i=!0){e.updateWorldMatrix(!0,!1),e.matrixWorld.decompose(t.position,O,t.scale),t.rotation.setFromQuaternion(O,void 0,!1),t.quaternion.setFromEuler(t.rotation,!1),i&&t.updateMatrix()}static countGeometry(e){const t=z.isIterable(e)?e:[e];let i=0;return t.forEach((e=>{e.traverse((e=>{e.geometry&&i++}))})),i}static flattenGroup(e){if(e&&e.parent){for(;e.children;)e.parent.attach(e.children[0]);F.clearObject(e,!0)}}static resetTransform(e){e.position.set(0,0,0),e.rotation.set(0,0,0),e.scale.set(1,1,1)}}class I{static addSpaces(e){return String(e).replace(/([A-Z])/g," $1").trim()}static capitalize(e){const t=String(e).split(" ");for(let e=0;e<t.length;e++)t[e]=t[e][0].toUpperCase()+t[e].substring(1);return t.join(" ")}static countDigits(e){return parseFloat(e).toString().length}static nameFromUrl(e,t=!0){let i=new String(e.replace(/^.*[\\\/]/,""));return i=i.replace(/\.[^/.]+$/,""),t&&(i=I.capitalize(i)),i}}const V={},N={},L=new e.TextureLoader;class R{static assetType(e){return e.isBufferGeometry?"geometry":"Shape"===e.type?"shape":e.isMaterial?"material":e.isTexture?"texture":"asset"}static getLibrary(e){const t=[];for(const[i,s]of Object.entries(V))R.assetType(s)===e&&t.push(s);return t}static addAsset(e){if(!e)return;const i=Array.isArray(e)?e:[e];for(let e=0;e<i.length;e++){let s=i[e];if(s.name&&""!==s.name||(s.name=s.constructor.name),s.isBufferGeometry&&"BufferGeometry"!==s.constructor.name){const e=t([s]);e.name=s.name,e.uuid=s.uuid,s.dispose&&s.dispose(),s=e}V[s.uuid]=s}return e}static getAsset(e){return e&&e.uuid&&(e=e.uuid),V[e]}static removeAsset(e,t=!0){if(!e)return;const i=Array.isArray(e)?e:[e];for(let e=0;e<i.length;e++){const s=i[e];if(V[s.uuid]){if(s.isTexture)for(let e in N)N[e].uuid===s.uuid&&delete N[e];t&&s.dispose&&s.dispose(),delete V[s.uuid]}}}static loadTexture(t,i){if(!t||""===t)return null;const s=e.DefaultLoadingManager.resolveURL(t);if(N[s])return console.log("AssetManager.loadTexture: Duplicate image!"),N[s];const n=L.load(t,(function(t){t.name=I.nameFromUrl(t.image.src),t.premultiplyAlpha=!0,t.wrapS=e.RepeatWrapping,t.wrapT=e.RepeatWrapping,i&&"function"==typeof i&&i(t)}),(function(){N[s]&&N[s].isTexture&&N[s].dispose();delete N[s]}));return N[s]=n,n}static clear(){for(let e in V)R.removeAsset(V[e],!0)}static fromJSON(t){function i(e){for(const[t,i]of Object.entries(e))R.addAsset(i)}R.clear();const s=new e.ObjectLoader,n=s.parseAnimations(t.animations),a=s.parseShapes(t.shapes),r=s.parseGeometries(t.geometries,{}),o=s.parseImages(t.images),l=s.parseTextures(t.textures,o),c=s.parseMaterials(t.materials,l);i(n),i(a),i(r),i(o),i(l),i(c)}static toJSON(e){const t={};e||(e={}),e.shapes||(e.shapes={}),e.geometries||(e.geometries={}),e.images||(e.images={}),e.textures||(e.textures={}),e.materials||(e.materials={}),e.animations||(e.animations={}),e.skeletons||(e.skeletons={});const i={images:{},textures:{},materials:{}},s=R.getLibrary("geometry");for(let t=0;t<s.length;t++){const i=s[t];e.geometries[i.uuid]||(e.geometries[i.uuid]=i.toJSON(e))}const n=R.getLibrary("material");for(let t=0;t<n.length;t++){const s=n[t];e.materials[s.uuid]||(e.materials[s.uuid]=s.toJSON(i))}const a=R.getLibrary("shape");for(let t=0;t<a.length;t++){const s=a[t];e.shapes[s.uuid]||(e.shapes[s.uuid]=s.toJSON(i))}const r=R.getLibrary("texture");for(let t=0;t<r.length;t++){const i=r[t];e.textures[i.uuid]||(e.textures[i.uuid]=i.toJSON(e))}for(const i in e){const s=[];for(const t in e[i]){const n=e[i][t];delete n.metadata,s.push(n)}s.length>0&&(t[i]=s)}return t}}const G={};class W{static registered(e=""){const t=G[e];return t||console.warn(`ComponentManager.registered: Component '${e}' not registered'`),t}static registeredTypes(){return Object.keys(G)}static register(e="",t){if(e=e.toLowerCase(),G[e])return console.warn(`ComponentManager.register: Component '${e}' already registered`);z.isObject(t.config)||(t.config={}),z.isObject(t.config.schema)||(t.config.schema={});const i=t.config.schema;for(const e in i){const t=Array.isArray(i[e])?i[e]:[i[e]];for(let e=0,i=t.length;e<i;e++){const i=t[e];if(void 0===i.type)console.warn("ComponentManager.register(): All schema properties require a 'type' value");else if("divider"===i.type)continue;if(void 0===i.default)switch(i.type){case"select":case"asset":case"map":case"shape":i.default=null;break;case"number":case"int":case"angle":case"slider":case"scroller":i.default=0;break;case"boolean":i.default=!1;break;case"color":i.default=16777215;break;case"variable":case"vector2":i.default=[0,0];break;case"array":i.default=[];break;case"vector3":i.default=[0,0,0];break;case"vector4":i.default=[0,0,0,0];break;case"string":case"script":i.default="";break;default:console.warn(`ComponentManager.register(): Unknown property type: '${i.type}'`),i.default=null}void 0!==i.proMode&&(i.promode=i.proMode)}}G[e]=class extends t{constructor(){super(),this.isComponent=!0,this.enabled=!0,this.tag="",this.type=e,this.entity=null,this.data={}}init(e){super.init(e)}dispose(){super.dispose()}disable(){this.enabled=!1,super.disable()}enable(){this.enabled=!0,super.enable()}defaultData(){const e={};for(let t=0,i=arguments.length;t<i;t+=2)e[arguments[t]]=arguments[t+1];return W.sanitizeData(this.type,e),e.base={enabled:this.enabled,tag:this.tag,type:this.type},e}}}static includeData(e,t,i){for(let s in e.if){let n=e.if[s];!0!==z.isIterable(n)&&(n=[n]);let a=!1,r=!1;for(let e=0;e<n.length;e++)a=a||t[s]===n[e],r=!(!r&&void 0!==i)||i[s]===n[e];if(!a||!r)return!1}for(let s in e.not){let n=e.not[s];!0!==z.isIterable(n)&&(n=[n]);let a=!1,r=!1;for(let e=0;e<n.length;e++)a=a||t[s]===n[e],r=!r&&void 0!==i&&i[s]===n[e];if(a||r)return!1}return!0}static sanitizeData(e,t){const i=W.registered(e),s=i&&i.config?i.config.schema:{};for(let e in s){let i,n=s[e];!0!==z.isIterable(n)&&(n=[s[e]]);for(let e=0;e<n.length;e++){let s=n[e];if("divider"!==s.type&&W.includeData(s,t)){i=s;break}}if(void 0!==i){if(void 0===t[e]&&(t[e]=i.default),k.isNumber(t[e])){const s=i.min??-1/0,n=i.max??1/0;t[e]<s&&(t[e]=s),t[e]>n&&(t[e]=n)}}else delete t[e]}}static stripData(e,t,i){const s=W.registered(e),n=s&&s.config?s.config.schema:{};for(let e in n){let s=!1,a=n[e];!0!==z.isIterable(a)&&(a=[n[e]]);for(let e=0;e<a.length;e++){let n=a[e];if("divider"!==n.type&&W.includeData(n,t,i)){s=!0;break}}!0!==s&&delete i[e]}}}class _{static combineEntityArrays(e,t){for(let i=0;i<t.length;i++){let s=t[i];!1===_.containsEntity(e,s)&&e.push(s)}}static commonEntity(e,t){for(let i=0;i<e.length;i++)if(!0===_.containsEntity(t,e[i]))return!0;for(let i=0;i<t.length;i++)if(!0===_.containsEntity(e,t[i]))return!0;return!1}static compareArrayOfEntities(e,t){for(let i=0;i<e.length;i++)if(!1===_.containsEntity(t,e[i]))return!1;for(let i=0;i<t.length;i++)if(!1===_.containsEntity(e,t[i]))return!1;return!0}static containsEntity(e,t){if(t&&t.uuid&&Array.isArray(e))for(let i=0;i<e.length;i++)if(e[i].uuid===t.uuid)return!0;return!1}static containsMesh(e,t=!0){if(!e.isEntity)return console.warn("EntityUtils.containsMesh: Object was not an Entity!"),!1;let i=!1;return e.traverseEntities((e=>{e.traverseComponents((e=>{i=i||"geometry"===e.type,i=i||"mesh"===e.type,i=i||"sprite"===e.type}))}),t),i}static isImportant(e){let t=!1;return t=t||null===e.parent,t=t||e.isScene,t=t||e.userData.flagLocked,t}static parentEntity(e,t=!1){for(;e&&e.parent&&!0!==e.parent.isScene;)if(e=e.parent,t&&e.isEntity)return e;return e}static parentScene(e){for(;e&&e.parent;)if((e=e.parent).isScene)return e}static removeEntityFromArray(e,t){let i=e.length;for(let s=0;s<i;s++)e[s].uuid===t.uuid&&(e.splice(s,1),i=e.length)}static uuidArray(e){let t=[];for(let i=0;i<e.length;i++)t.push(e[i].uuid);return t}}new e.Matrix4;const U=new e.Vector3,J=new e.Quaternion,q=new e.Vector3,H=(new e.Quaternion,new e.Vector3,new e.Vector3),Q=new e.Vector3,$=(new e.Quaternion,new e.Quaternion),X=new e.Quaternion,Y=(new e.Euler,new e.Quaternion),K=(new e.Quaternion,new e.Vector3),Z=new e.Quaternion,ee=new e.Vector3,te=new e.Euler;class ie extends e.Object3D{constructor(){super(),this.isObject3DOverload=!0;const t=new e.Euler,i=new e.Quaternion;t._onChange((function(){})),i._onChange((function(){})),Object.defineProperties(this,{rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:i}})}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(super.copy(e,!1),F.copyLocalTransform(e,this,!1),this.lookAtCamera=e.lookAtCamera,this.updateMatrix(),!0===t)for(let t=0;t<e.children.length;t++){const i=e.children[t].clone();this.add(i)}return this}getWorldQuaternion(e,t=!0){let i=this.lookAtCamera;return t&&i&&(this.lookAtCamera=!1),this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(H,e,Q),t&&i&&(this.lookAtCamera=!0,this.updateWorldMatrix(!0,!1)),e}safeAttach(e){e&&e.isObject3D&&(e.getWorldQuaternion(Z),e.getWorldScale(ee),e.getWorldPosition(K),e.removeFromParent(),e.rotation.copy(te.setFromQuaternion(Z,void 0,!1)),e.scale.copy(ee),e.position.copy(K),this.attach(e))}updateMatrix(){const e=window.activeCamera;let t=this.lookAtCamera&&e&&!this.isScene;t&&this.parent&&this.parent.isObject3D&&this.traverseAncestors((e=>{e.lookAtCamera&&(t=!1)})),t?(this.parent&&this.parent.isObject3D?(this.parent.getWorldQuaternion($,!1),X.copy($).invert(),this.quaternion.copy(X)):this.quaternion.identity(),e.matrixWorld.decompose(U,J,q),Y.setFromEuler(this.rotation,!1),this.quaternion.multiply(J),this.quaternion.multiply(Y)):this.quaternion.setFromEuler(this.rotation,!1),this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}}class se extends ie{constructor(e=""){super(),this.isEntity=!0,this.isEntity3D=!0,this.name=e,this.type="Entity3D",this.enabled=!0,this.castShadow=!0,this.receiveShadow=!0,this.lookAtCamera=!1,this.components=[],this.setFlag(g.LOCKED,!1)}getReducedType(){return this.isScene?"Scene":1===this.components.length?I.capitalize(this.components[0].type.toLowerCase()):"Entity3D"}getFlag(e){return Boolean(this.userData[e])}setFlag(e,t){return this.userData[e]=t,this}addComponent(e,t={},i=!0){const s=W.registered(e);if(void 0===s)return;const n=s.config;let a=this.getComponent(e);if(s.config.multiple||void 0===a?(a=new s,this.components.push(a)):a.disable(),n.dependencies&&i){const e=n.dependencies;for(let t=0,i=e.length;t<i;t++)void 0===this.getComponent(e[t])&&this.addComponent(e[t],{},!1)}return a.entity=this,W.sanitizeData(e,t),a.init&&a.init(t),this.enabled&&a.enable(),a}getComponent(e,t){if(void 0===t)return this.getComponentByProperty("type",e);let i=this.getComponentsWithProperties("type",e,"tag",t);return i.length>0?i[0]:void 0}getComponentByTag(e){return this.getComponentByProperty("tag",e)}getComponentByType(e){return this.getComponentByProperty("type",e)}getComponentByProperty(e,t){for(let i=0,s=this.components.length;i<s;i++){const s=this.components[i];if(s[e]===t)return s}}getComponentsWithProperties(){let e=[];for(let t=0;t<this.components.length;t++){const i=this.components[t];let s=!0;for(let e=0;e<arguments.length;e+=2)if(i[arguments[e]]!==arguments[e+1]){s=!1;break}s&&e.push(i)}return e}removeComponent(e){let t=this.components.indexOf(e);return-1!==t?(this.components.splice(t,1),e.disable(),e.dispose()):console.warn(`Entity3D.removeComponent: Component ${e.uuid}, type '${e.type}' not found`),e}rebuildComponents(){for(let e=0;e<this.components.length;e++){const t=this.components[e];t.disable(),t.init(t.toJSON()),t.enable()}}traverseComponents(e){for(let t=0;t<this.components.length;t++)e(this.components[t])}changeParent(e,t=-1){if(e||(e=this.parent),!e||!e.isObject3D)return;const i=this.parent;-1===t&&i&&(t=i.children.indexOf(this)),e.safeAttach(this),-1!==t&&(e.children.splice(t,0,this),e.children.pop())}addEntity(e,t=-1,i=!1){return e&&e.isObject3D?(null==t&&(t=-1),-1!==this.children.indexOf(e)||(i&&e.parent?this.attach(e):this.add(e),-1!==t&&(this.children.splice(t,0,e),this.children.pop())),this):this}getEntities(){const e=[],t=this.children;for(let i=0;i<t.length;i++)t[i].isEntity3D&&e.push(t[i]);return e}getEntityById(e){return this.getEntityByProperty("id",e)}getEntityByName(e){return this.getEntityByProperty("name",e)}getEntityByUuid(e){return this.getEntityByProperty("uuid",e)}getEntityByProperty(e,t){if(this[e]===t)return this;const i=this.getEntities();for(let s=0,n=i.length;s<n;s++){const n=i[s].getEntityByProperty(e,t);if(n)return n}}removeEntity(e,t=!1){e&&(!t&&_.isImportant(e)||this.remove(e))}traverseEntities(e,t=!0){if(e(this),t)for(let t=0;t<this.children.length;t++){const i=this.children[t];i.isEntity3D&&i.traverseEntities(e)}}cloneEntity(e=!0){return(new this.constructor).copyEntity(this,e)}copyEntity(e,t=!0){this.dispose(),super.copy(e,!1),this.name=e.name,this.enabled=e.enabled,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.lookAtCamera=e.lookAtCamera;for(let t in g)this.setFlag(g[t],e.getFlag(g[t]));const i=e.components;for(let e=0;e<i.length;e++){const t=i[e],s=this.addComponent(t.type,t.toJSON(),!1);s.tag=t.tag,!0!==t.enabled&&s.disable()}if(!0===t){const i=e.getEntities();for(let e=0;e<i.length;e++){const s=i[e];this.add(s.cloneEntity(t))}}return this}dispose(){const e=this.children;for(let t=0;t<e.length;t++){const i=e[t];this.removeEntity(i,!0),i.dispose&&i.dispose()}for(;this.components.length>0;){const e=this.components[0];this.removeComponent(e)}}fromJSON(e){const t=e.object;this.uuid=t.uuid,void 0!==t.name&&(this.name=t.name),void 0!==t.enabled&&(this.enabled=t.enabled),void 0!==t.castShadow&&(this.castShadow=t.castShadow),void 0!==t.receiveShadow&&(this.receiveShadow=t.receiveShadow),void 0!==t.lookAtCamera&&(this.lookAtCamera=t.lookAtCamera),void 0!==t.position&&this.position.fromArray(t.position),void 0!==t.rotation&&this.rotation.fromArray(t.rotation),void 0!==t.scale&&this.scale.fromArray(t.scale),void 0!==t.matrixAutoUpdate&&(this.matrixAutoUpdate=t.matrixAutoUpdate),void 0!==t.layers&&(this.layers.mask=t.layers),void 0!==t.visible&&(this.visible=t.visible),void 0!==t.frustumCulled&&(this.frustumCulled=t.frustumCulled),void 0!==t.renderOrder&&(this.renderOrder=t.renderOrder),void 0!==t.userData&&(this.userData=t.userData);for(let t in e.object.flags)this.setFlag(t,e.object.flags[t]);for(let t=0;t<e.object.components.length;t++){const i=e.object.components[t];if(i&&i.base&&i.base.type){const e=this.addComponent(i.base.type,i,!1);!1===i.enabled&&e.disable(),e.tag=i.base.tag}}if(void 0!==t.entities)for(let t=0;t<e.object.entities.length;t++){const i=(new se).fromJSON(e.object.entities[t]);this.add(i)}return this.updateMatrix(),this}toJSON(){const e={object:{name:this.name,type:this.type,uuid:this.uuid,components:[],flags:{}}};for(let t in g)e.object.flags[t]=this.getFlag(t);for(let t=0;t<this.components.length;t++)e.object.components.push(this.components[t].toJSON());e.object.enabled=this.enabled,e.object.castShadow=this.castShadow,e.object.receiveShadow=this.receiveShadow,e.object.lookAtCamera=this.lookAtCamera,e.object.position=this.position.toArray(),e.object.rotation=this.rotation.toArray(),e.object.scale=this.scale.toArray(),e.object.matrixAutoUpdate=this.matrixAutoUpdate,e.object.layers=this.layers.mask,!1===this.visible&&(e.object.visible=!1),!1===this.frustumCulled&&(e.object.frustumCulled=!1),0!==this.renderOrder&&(e.object.renderOrder=this.renderOrder),"{}"!==JSON.stringify(this.userData)&&(e.object.userData=this.userData);const t=this.getEntities();if(t.length>0){e.object.entities=[];for(let i=0;i<t.length;i++)e.object.entities.push(t[i].toJSON())}return e}}class ne extends se{constructor(t="Start Scene"){super(),this.isScene=!0,this.isScene3D=!0,this.name=t,this.type="Scene3D",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,this.shadowPlane=new e.Mesh(new e.PlaneGeometry(1e5,1e5),new e.ShadowMaterial({color:0,transparent:!0,opacity:.2,depthWrite:!1})),this.shadowPlane.name="ShadowPlane",this.shadowPlane.userData.flagIgnore=!0,this.shadowPlane.userData.flagLocked=!0,this.shadowPlane.rotation.x=-Math.PI/2,this.shadowPlane.castShadow=!1,this.shadowPlane.receiveShadow=!0,this.shadowPlane.visible=!1,this.add(this.shadowPlane)}fromJSON(t){const i=t.object;if(void 0!==i.background)if(Number.isInteger(i.background))this.background=new e.Color(i.background);else{const e=R.getAsset(i.background);e&&e.isTexture&&(this.background=e)}if(void 0!==i.environment){const e=R.getAsset(i.background);e&&e.isTexture&&(this.environment=e)}return void 0!==i.fog&&("Fog"===i.fog.type?this.fog=new e.Fog(i.fog.color,i.fog.near,i.fog.far):"FogExp2"===i.fog.type&&(this.fog=new e.FogExp2(i.fog.color,i.fog.density))),super.fromJSON(t),this}toJSON(){const e=super.toJSON();return this.fog&&(e.object.fog=this.fog.toJSON()),e}}class ae{constructor(e="World 1"){this.isWorld=!0,this.isWorld3D=!0,this.name=e,this.type="World3D",this.uuid=crypto.randomUUID(),this.order=0,this.startScene=null,this.lastEditorScene=null,this.sceneNodes={}}addScene(e){return e&&"Scene3D"===e.type?this.sceneNodes[e.uuid]?console.warn(`World3D.addScene: Scene ('${e.name}') already added`,e):(this.sceneNodes[e.uuid]={uuid:e.uuid,order:this.order++},this.startScene||(this.startScene=e.uuid),this.lastEditorScene||(this.lastEditorScene=e.uuid)):console.error("'World3D.addScene: Scene not of type 'Scene3D'",e),this}fromJSON(e){const t=e.object;return this.name=t.name,this.uuid=t.uuid,this.order=t.order,this.startScene=t.startScene,this.lastEditorScene=t.lastEditorScene,this.sceneNodes=t.sceneNodes,this}toJSON(){return{object:{name:this.name,type:this.type,uuid:this.uuid,order:this.order,startScene:this.startScene,lastEditorScene:this.lastEditorScene,sceneNodes:this.sceneNodes}}}}class re{constructor(e="My Project"){this.isProject=!0,this.name=e,this.uuid=crypto.randomUUID(),this.type="Project",this.scripts={},this.scenes={},this.worlds={}}addWorld(e){return e&&f[e.type]?(this.worlds[e.uuid]=e,null==this.activeWorldUuid&&(this.activeWorldUuid=e.uuid)):console.error(`Project.addWorld: World type (${e.type}) not a valid world type`,e),this}getWorldByName(e){return this.getWorldByProperty("name",e)}getWorldByUuid(e){return this.worlds[e]}getWorldByProperty(e,t){for(const i in this.worlds){const s=this.worlds[i];if(s[e]===t)return s}}addScene(e){return e&&y[e.type]?this.scenes[e.uuid]?console.warn(`Project.addScene: Scene ('${e.name}') already added`,e):this.scenes[e.uuid]=e:console.error(`Project.addScene: Scene type (${e.type}) not a valid scene type`,e),this}getFirstScene(){const e=Object.keys(this.scenes);return e.length>0?this.scenes[e[0]]:null}getSceneByName(e){return this.getSceneByProperty("name",e)}getSceneByUuid(e){return this.scenes[e]}getSceneByProperty(e,t){for(const i in this.scenes){const s=this.scenes[i];if(s[e]===t)return s}}removeScene(e){if(!0!==e.isScene)return;const t=e.getEntities();for(let i=t.length-1;i>=0;i--)e.removeEntity(t[i],!0),t[i].dispose();delete this.scenes[e.uuid]}traverseScenes(e){for(let t in this.scenes){this.scenes[t].traverseEntities(e)}}findEntityByUuid(e,t=!1){let i=[],s=null;if(window.editor&&(s=window.editor.viewport.scene),t){i=Array.from(this.scenes);const e=i.indexOf(s),t=0;s&&-1!==e&&(arr.splice(e,1),arr.splice(t,0,s))}else s&&i.push(s);for(let t=0;t<i.length;t++){const s=i[t].getEntityByProperty("uuid",e);if(s)return s}}addScript(e,t){const i=e.uuid;return this.scripts[i]||(this.scripts[i]=[]),this.scripts[i].push(t),this}removeScript(e,t){const i=e.uuid;if(!this.scripts[i])return;const s=this.scripts[i].indexOf(t);-1!==s&&this.scripts[i].splice(s,1)}clear(){const e=Object.keys(this.scenes);for(let t=0;t<e.length;t++){let i=this.scenes[e[t]];this.removeScene(i)}this.name="My Project",this.uuid=crypto.randomUUID()}fromJSON(e,t=!0){const i=e.metadata?e.metadata.type:"Undefined";if("Onsight"!==i)return void console.error(`Project.fromJSON: Unknown project type ('${i}'), expected 'Onsight'`);const s=e.metadata.version;if("0.0.3"!==s&&console.warn(`Project.fromJSON: Project saved in 'v${s}', attempting to load with 'v0.0.3'`),e.object&&e.object.type===this.type){this.clear(),t&&R.fromJSON(e),this.name=e.object.name,this.uuid=e.object.uuid,this.scripts=e.scripts;for(let t=0;t<e.worlds.length;t++)if("World3D"===e.worlds[t].object.type)this.addWorld((new ae).fromJSON(e.worlds[t]));for(let t=0;t<e.scenes.length;t++)if("Scene3D"===e.scenes[t].object.type)this.addScene((new ne).fromJSON(e.scenes[t]));return this}console.error("Project.fromJSON: Save file corrupt, no 'Project' object found!")}toJSON(){const e=R.toJSON({});e.metadata={type:"Onsight",version:"0.0.3",generator:"Onsight.Project.toJSON"},e.object={name:this.name,type:this.type,uuid:this.uuid},e.scripts=this.scripts,e.scenes=[],e.worlds=[];for(const t in this.worlds){const i=this.worlds[t];e.worlds.push(i.toJSON())}for(const t in this.scenes){const i=this.scenes[t];e.scenes.push(i.toJSON())}return e}}class oe{constructor(){const t=this;this.backend={},this.backend.renderer=u.RENDERER_3D.THREE,this.backend.physics=u.PHYSICS_3D.RAPIER;let i,s,n,a=this,r=new re,o=b.STOPPED;Object.defineProperty(t,"scene",{get:function(){return n},set:function(e){n=e}}),this.width=1,this.height=1,this.wantsScreenshot=!1,i=new e.WebGLRenderer({antialias:!0}),i.setPixelRatio(1),i.shadowMap.enabled=!0,this.dom=document.createElement("div"),this.dom.appendChild(i.domElement);let l="player,renderer,scene,camera",c={init:[],update:[],keydown:[],keyup:[],pointerdown:[],pointerup:[],pointermove:[]};function d(e,t){for(let i=0,s=e.length;i<s;i++)e[i](t)}this.load=function(e,t=!0){r.fromJSON(e,t),this.scene=r.getFirstScene(),this.setCamera(M.createPerspective(500,500,!0)),s.position.x=0,s.position.y=0,document.addEventListener("keydown",x),document.addEventListener("keyup",v),document.addEventListener("pointerdown",S),document.addEventListener("pointerup",k),document.addEventListener("pointermove",P);let o="",h={};for(let e in c)o+=e+",",h[e]=e;o=o.replace(/.$/,"");let p=JSON.stringify(h).replace(/\"/g,"");function u(e){const t=r.scripts[e.uuid];if(void 0!==t&&t.length>0)for(let r=0,d=t.length;r<d;r++){let d=t[r];if(d.errors)console.warn(`Entity '${e.name}' has errors in script '${d.name}'. Script will not be loaded!`);else{let t=`${d.source} \n return ${p};`,r=new Function(l,o,t).bind(e)(a,i,n,s);for(let t in r)r[t]&&(void 0!==c[t]?c[t].push(r[t].bind(e)):console.warn(`App: Event type not supported ('${t}')`))}}}n.traverse(u),d(c.init,arguments)};let h,p,m,y=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame,f=window.cancelAnimationFrame||window.mozCancelAnimationFrame,g=null;function w(){h=performance.now();try{let e=h-p,t=h-m;o===b.PLAYING&&d(c.update,{time:e,delta:t})}catch(e){console.error(e.message||e,e.stack||"")}if(window.activeCamera=s,i.render(n,s),!0===t.wantsScreenshot){let e=r.name+" "+(new Date).toLocaleString()+".png",s="image/png",n=i.domElement.toDataURL(s);z.saveImage(n,e),t.wantsScreenshot=!1}m=h,g=y(w)}function x(e){d(c.keydown,e)}function v(e){d(c.keyup,e)}function S(e){d(c.pointerdown,e)}function k(e){d(c.pointerup,e)}function P(e){d(c.pointermove,e)}this.play=function(){p=m=performance.now(),o=b.PLAYING,g=y(w)},this.pause=function(){o===b.PLAYING?o=b.PAUSED:o===b.PAUSED&&(o=b.PLAYING)},this.stop=function(){o=b.STOPPED,document.removeEventListener("keydown",x),document.removeEventListener("keyup",v),document.removeEventListener("pointerdown",S),document.removeEventListener("pointerup",k),document.removeEventListener("pointermove",P),F.clearObject(s),F.clearObject(n);for(let e in c)c[e].length=0;g&&(f(g),g=null)},this.getRenderer=function(){return i},this.appState=function(){return o},this.setCamera=function(e){s=e},this.setPixelRatio=function(e){i.setPixelRatio(e)},this.setSize=function(e,t){this.width=e,this.height=t,s&&M.updateCamera(s,e,t),i&&i.setSize(e,t)},this.gameCoordinates=function(t){const i=this.dom.getBoundingClientRect();let n=t.clientX-i.left,a=t.clientY-i.top,r=n/i.width*(2*i.width)-i.width,o=-a/i.height*(2*i.height)+i.height,l=new e.Vector3(r,o,0);return l.unproject(s),l}}}class le{constructor(){this.entities=[],this.expand()}getEntities(e){return e>this.entities.length&&this.expand(e-this.entities.length),this.entities.splice(0,e)}getEntity(){return this.entities.length||this.expand(),this.entities.pop()}recycle(e){e.dispose(),this.entities.push(e)}expand(e=10){for(let t=0;t<e;t++)this.entities.push(new se)}}class ce{constructor(){this.isScript=!0,this.type="Script",this.name="New Script",this.errors=!1,this.source="// Code outside of lifecycle and event listeners is immediately executed when the script is loaded\n\n// Events - The following events are supported:\n//\t\tkeydown, keyup, pointerdown, pointerup, pointermove\n\n// Variables - The following globals are accessible to scripts:\n//\t\tthis (entity which owns the script), player, renderer, scene, camera\n\n\n// Executed when the entity is loaded\nfunction init() {\n\t\n}\n\n\n// Executed right before a frame is going to be rendered\n// - event.time: total elapsed time, in milliseconds\n// - event.delta: time since last frame, in milliseconds\nfunction update(event) {\n\t\n}\n\n\n// Example pointer event\nfunction pointermove(event) {\n\t\n}"}}class de{static absolute(e){e.x=Math.abs(e.x),e.y=Math.abs(e.y),e.z=Math.abs(e.z)}static noZero(e,t=.001){k.fuzzyFloat(e.x,0,t)&&(e.x=e.x<0?-1*t:t),k.fuzzyFloat(e.y,0,t)&&(e.y=e.y<0?-1*t:t),k.fuzzyFloat(e.z,0,t)&&(e.z=e.z<0?-1*t:t)}static printOut(e,t=""){""!==t&&(t+=" - "),console.info(`${t}X: ${e.x}, Y: ${e.y}, Z: ${e.z}`)}static round(e,t=0){const i=Math.pow(10,t);e.x=Math.round(e.x*i)/i,e.y=Math.round(e.y*i)/i,e.z=Math.round(e.z*i)/i}static sanity(e){isNaN(e.x)&&(e.x=0),isNaN(e.y)&&(e.y=0),isNaN(e.z)&&(e.z=0)}}const he=[new e.Vector2,new e.Vector2,new e.Vector2],pe=[new e.Vector3,new e.Vector3,new e.Vector3],ue=new e.Vector3;class me{static addAttribute(t,i="color",s=3,n=0){if(!t.getAttribute(i)){let a=new Float32Array(t.attributes.position.count*s).fill(n);const r=new e.BufferAttribute(a,s,!0).setUsage(e.DynamicDrawUsage);t.setAttribute(i,r)}return t}static coloredMesh(e){if(!e.geometry)return e;if(!e.material)return e;let t=e.material;!0!==Array.isArray(t)&&(t=[e.material]);for(let e=0;e<t.length;e++)!0!==t[e].vertexColors&&(t[e].vertexColors=!0,t[e].needsUpdate=!0);return me.addAttribute(e.geometry,"color",3,1),e}static modelSize(t,i="max"){let s=new e.Vector3;return t.computeBoundingBox(),t.boundingBox.getSize(s),"max"===i?Math.max(s.x,s.y,s.z):Math.min(s.x,s.y,s.z)}static repeatTexture(e,t,i){if(e&&e.attributes&&e.attributes.uv&&e.attributes.uv.array){for(let s=0;s<e.attributes.uv.array.length;s+=2)e.attributes.uv.array[s+0]*=t,e.attributes.uv.array[s+1]*=i;e.attributes.uv.needsUpdate=!0}}static uvFlip(e,t=!0,i=!0){if(e&&e.isBufferGeometry&&void 0!==e.attributes.uv)for(let s=0;s<e.attributes.uv.array.length;s+=2){let n=e.attributes.uv.array[s+0],a=e.attributes.uv.array[s+1];t&&(n=1-n),i&&(a=1-a),e.attributes.uv.array[s+0]=n,e.attributes.uv.array[s+1]=a}}static uvMapCube(t,i,s=!1){if(s&&null!==t.index){const e=t.toNonIndexed();t.dispose(),t=e}void 0===i&&(i=new e.Matrix4);let n=me.modelSize(t),a=n/2,r=new e.Box3(new e.Vector3(-a,-a,-a),new e.Vector3(a,a,a)),o=new e.Vector3;t.boundingBox.getCenter(o);const l=(new e.Matrix4).makeTranslation(-o.x,-o.y,-o.z),c=[];c.length=2*t.attributes.position.array.length/3;const d=t.attributes.position.array;if(t.index)for(let i=0;i<t.index.array.length;i+=3){const s=t.index.array[i+0],n=t.index.array[i+1],a=t.index.array[i+2];h(new e.Vector3(d[3*s+0],d[3*s+1],d[3*s+2]),new e.Vector3(d[3*n+0],d[3*n+1],d[3*n+2]),new e.Vector3(d[3*a+0],d[3*a+1],d[3*a+2])),c[2*s+0]=he[0].x,c[2*s+1]=he[0].y,c[2*n+0]=he[1].x,c[2*n+1]=he[1].y,c[2*a+0]=he[2].x,c[2*a+1]=he[2].y}else for(let i=0;i<t.attributes.position.array.length;i+=9){h(new e.Vector3(d[i+0],d[i+1],d[i+2]),new e.Vector3(d[i+3],d[i+4],d[i+5]),new e.Vector3(d[i+6],d[i+7],d[i+8]));const t=i/3,s=t+1,n=t+2;c[2*t+0]=he[0].x,c[2*t+1]=he[0].y,c[2*s+0]=he[1].x,c[2*s+1]=he[1].y,c[2*n+0]=he[2].x,c[2*n+1]=he[2].y}return void 0===t.attributes.uv&&t.addAttribute("uv",new e.Float32BufferAttribute(c,2)),t.attributes.uv.array=new Float32Array(c),t.attributes.uv.needsUpdate=!0,t;function h(t,a,o){t.applyMatrix4(l).applyMatrix4(i),a.applyMatrix4(l).applyMatrix4(i),o.applyMatrix4(l).applyMatrix4(i);const c=new e.Vector3;var d,h,p,u;if(d=c,h=t,p=a,u=o,ue.subVectors(h,p),d.subVectors(p,u),d.cross(ue).normalize(),de.round(d,5),he[0].set(0,0,0),he[1].set(0,0,0),he[2].set(0,0,0),s){let e=c.z<0;e=e&&Math.abs(c.y)<.866,e=e&&Math.abs(c.x)<.866,e&&(he[0].x=(t.x-r.min.x)/n,he[0].y=(t.y-r.min.y)/n,he[1].x=(a.x-r.min.x)/n,he[1].y=(a.y-r.min.y)/n,he[2].x=(o.x-r.min.x)/n,he[2].y=(o.y-r.min.y)/n)}else c.x=Math.abs(c.x),c.y=Math.abs(c.y),c.z=Math.abs(c.z),c.y>c.x&&c.y>c.z?(he[0].x=(t.x-r.min.x)/n,he[0].y=(r.max.z-t.z)/n,he[1].x=(a.x-r.min.x)/n,he[1].y=(r.max.z-a.z)/n,he[2].x=(o.x-r.min.x)/n,he[2].y=(r.max.z-o.z)/n):c.x>c.y&&c.x>c.z?(he[0].x=(t.z-r.min.z)/n,he[0].y=(t.y-r.min.y)/n,he[1].x=(a.z-r.min.z)/n,he[1].y=(a.y-r.min.y)/n,he[2].x=(o.z-r.min.z)/n,he[2].y=(o.y-r.min.y)/n):c.z>c.y&&c.z>c.x&&(he[0].x=(t.x-r.min.x)/n,he[0].y=(t.y-r.min.y)/n,he[1].x=(a.x-r.min.x)/n,he[1].y=(a.y-r.min.y)/n,he[2].x=(o.x-r.min.x)/n,he[2].y=(o.y-r.min.y)/n)}}static uvMapSphere(t,i="uv"){if(null!==t.index){const e=t.toNonIndexed();e.uuid=t.uuid,e.name=t.name,t.dispose(),t=e}const s=[];s.length=2*t.attributes.position.array.length/3;const n=!(void 0===t.attributes.uv);n||t.addAttribute("uv",new e.Float32BufferAttribute(s,2));const a=!n||"u"===i||"uv"===i,r=!n||"v"===i||"uv"===i,o=t.attributes.position.array;for(let e=0;e<t.attributes.position.array.length;e+=9){pe[0].set(o[e+0],o[e+1],o[e+2]),pe[1].set(o[e+3],o[e+4],o[e+5]),pe[2].set(o[e+6],o[e+7],o[e+8]);let t=e/3;for(let e=0;e<3;e++){const i=c(pe[e]);if(0===i.theta&&(0===i.phi||i.phi===Math.PI)){const e=0===i.phi?"1":"0";i.theta=c(pe[e]).theta}l(i,t,e),t++}let i=!1;if(Math.abs(he[0].x-he[1].x)>.75&&(i=!0),Math.abs(he[0].x-he[2].x)>.75&&(i=!0),Math.abs(he[1].x-he[0].x)>.75&&(i=!0),Math.abs(he[1].x-he[2].x)>.75&&(i=!0),Math.abs(he[2].x-he[0].x)>.75&&(i=!0),Math.abs(he[2].x-he[1].x)>.75&&(i=!0),i){let t=e/3;for(let e=0;e<3;e++){s[2*t]>.75&&(s[2*t]=0),t++}}}return t.attributes.uv.array=new Float32Array(s),t.attributes.uv.needsUpdate=!0,t;function l(i,n,o){const l={x:((c=i).theta+Math.PI)/(2*Math.PI),y:c.phi/Math.PI};var c;const d=new e.Vector2(1-l.x,1-l.y),h=2*n+0,p=2*n+1;s[h]=a?d.x:t.attributes.uv.array[h],s[p]=r?d.y:t.attributes.uv.array[p],he[o].x=s[h],he[o].y=s[p]}function c(e){let t=e.x*e.x+e.y*e.y+e.z*e.z,i=Math.sqrt(t);return{r:i,theta:Math.atan2(e.z,e.x),phi:Math.acos(e.y/i)}}}}const ye=new e.Color,fe=new e.Vector3;class ge{static createFromPaths(t,s,n,a=""){let r=0,o=0;if(s.forEach((s=>{let n=s.userData.style.fill,l=s.userData.style.fillOpacity;if(l||0===l||(l=1),void 0!==n&&"none"!==n){i.createShapes(s).forEach((i=>{let s=`Fill ${o}`;""!==a&&(s=a+" "+s);const c=new se(s),d=.001;function h(e){e.v0&&e.v0.multiplyScalar(d),e.v1&&e.v1.multiplyScalar(d),e.v2&&e.v2.multiplyScalar(d),e.v3&&e.v3.multiplyScalar(d),e.aX&&(e.aX*=d),e.aY&&(e.aY*=d),e.xRadius&&(e.xRadius*=d),e.yRadius&&(e.yRadius*=d)}for(let e=0;e<i.curves.length;e++)h(i.curves[e]);for(let e=0;e<i.holes.length;e++)for(let t=0;t<i.holes[e].curves.length;t++)h(i.holes[e].curves[t]);const p=new e.ExtrudeGeometry(i,{depth:.256,bevelEnabled:!1,bevelThickness:.25,bevelSegments:8,curveSegments:16,steps:4});p.name=s,p.translate(0,0,-.128),p.scale(1,-1,-1),p.computeBoundingBox(),p.boundingBox.getCenter(fe),p.center(),c.position.copy(fe),me.uvFlip(p,!1,!0),c.addComponent("geometry",p),c.addComponent("material",{style:"standard",side:"FrontSide",color:ye.setStyle(n).getHex(),opacity:l}),c.position.z=r,t.add(c),r+=.001,o++}))}})),t.children&&t.children.length>0){const i=new e.Vector3;F.computeCenter(t.children,i);for(let e of t.children)e.position.x-=i.x-t.position.x,e.position.y-=i.y-t.position.y}t.name=a,n&&"function"==typeof n&&n(t)}static createFromFile(e,t){const s=new se;return(new i).load(e,(function(i){ge.createFromPaths(s,i.paths,t,I.nameFromUrl(e))})),s}}let be;class we{static offscreenRenderer(t,i){return void 0===be&&(be=new e.WebGLRenderer({alpha:!0}),be.setClearColor(16777215,0),be.setSize(512,512,!1)),k.isNumber(t)&&k.isNumber(i)&&be.setSize(t,i,!1),be}static renderGeometryToCanvas(t,i,s=16777215){const n=new e.Scene;n.add(new e.HemisphereLight(16777215,2105376,1.5));const a=new e.PerspectiveCamera(50,t.width/t.height);a.position.set(0,0,1);const r=new e.MeshStandardMaterial({color:s}),o=new e.Mesh(i,r);n.add(o),M.fitCameraToObject(a,o);const l=we.offscreenRenderer(t.width,t.height);l.render(n,a),r.dispose();const c=t.getContext("2d");c&&(c.clearRect(0,0,t.width,t.height),c.drawImage(l.domElement,0,0,t.width,t.height))}static renderTextureToCanvas(t,i){const s=new e.Scene,n=new e.OrthographicCamera(-1,1,1,-1,0,1),a=new e.MeshBasicMaterial({map:i,alphaTest:!0}),r=new e.PlaneGeometry(2,2),o=new e.Mesh(r,a);s.add(o);const l=i.image,c=we.offscreenRenderer(l.width,l.height);c.render(s,n),r.dispose(),a.dispose();const d=t.getContext("2d");if(d){let e,i,s,n,a;l.width/l.height<t.width/t.height?(n=l.height>t.height?t.height:l.height,a=Math.min(1,t.height/l.height),s=l.width*a):(s=l.width>t.width?t.width:l.width,a=Math.min(1,t.width/l.width),n=l.height*a),e=(t.width-s)/2,i=(t.height-n)/2,d.clearRect(0,0,t.width,t.height),d.drawImage(c.domElement,0,0,l.width,l.height,e,i,s,n)}}}class xe extends e.BufferGeometry{constructor(t=1,i=1,s=2,n=12,a=1,r=5,o=5,l,c){super(),this.type="CapsuleGeometry",this.parameters={radiusTop:t,radiusBottom:i,height:s,radialSegments:n,heightSegments:a,thetaStart:l,thetaLength:c},t=void 0!==t?t:1,i=void 0!==i?i:1,s=void 0!==s?s:2,t=k.clamp(t,.001,s),i=k.clamp(i,.001,s),s<.001&&(s=.001),n=Math.floor(n)||12,a=Math.floor(a)||1,r=Math.floor(r)||5,o=Math.floor(o)||5,l=void 0!==l?l:0,c=void 0!==c?c:2*Math.PI;let d=Math.acos((i-t)/s),h=(n+1)*(a+1+o+r),p=n*(a+o+r)*2*3,u=new e.BufferAttribute(new(p>65535?Uint32Array:Uint16Array)(p),1),m=new e.BufferAttribute(new Float32Array(3*h),3),y=new e.BufferAttribute(new Float32Array(3*h),3),f=new e.BufferAttribute(new Float32Array(2*h),2),g=0,b=0,w=[],x=s/2;!function(){let h,p,v=new e.Vector3,S=new e.Vector3,M=Math.cos(d),k=Math.sin(d),z=new e.Vector2(t*k,x+t*M).sub(new e.Vector2(i*k,i*M-x)).length(),P=t*d+z+i*(Math.PI/2-d),C=0;for(p=0;p<=r;p++){let e=[],i=Math.PI/2-d*(p/r);C+=t*d/r;let s=Math.cos(i),a=Math.sin(i),o=s*t;for(h=0;h<=n;h++){let i=h/n,r=i*c+l,d=Math.sin(r),p=Math.cos(r);S.x=o*d,S.y=x+a*t,S.z=o*p,m.setXYZ(g,S.x,S.y,S.z),v.set(s*d,a,s*p),y.setXYZ(g,v.x,v.y,v.z),f.setXY(g,i,1-C/P),e.push(g),g++}w.push(e)}let E=s+M*t-M*i,A=k*(i-t)/E;for(p=1;p<=a;p++){let e=[];C+=z/a;let s=k*(p*(i-t)/a+t);for(h=0;h<=n;h++){let i=h/n,r=i*c+l,o=Math.sin(r),d=Math.cos(r);S.x=s*o,S.y=x+M*t-p*E/a,S.z=s*d,m.setXYZ(g,S.x,S.y,S.z),v.set(o,A,d).normalize(),y.setXYZ(g,v.x,v.y,v.z),f.setXY(g,i,1-C/P),e.push(g),g++}w.push(e)}for(p=1;p<=o;p++){let e=[],t=Math.PI/2-d-(Math.PI-d)*(p/o);C+=i*d/o;let s=Math.cos(t),a=Math.sin(t),r=s*i;for(h=0;h<=n;h++){let t=h/n,o=t*c+l,d=Math.sin(o),p=Math.cos(o);S.x=r*d,S.y=a*i-x,S.z=r*p,m.setXYZ(g,S.x,S.y,S.z),v.set(s*d,a,s*p),y.setXYZ(g,v.x,v.y,v.z),f.setXY(g,t,1-C/P),e.push(g),g++}w.push(e)}for(h=0;h<n;h++)for(p=0;p<r+a+o;p++){let e=w[p][h],t=w[p+1][h],i=w[p+1][h+1],s=w[p][h+1];u.setX(b,e),b++,u.setX(b,t),b++,u.setX(b,s),b++,u.setX(b,t),b++,u.setX(b,i),b++,u.setX(b,s),b++}}(),this.setIndex(u),this.setAttribute("position",m),this.setAttribute("normal",y),this.setAttribute("uv",f)}static fromPoints(t,i,s,n,a,r,o,l,c,d){let h=null,p=null,u=null,m=null;p=t,h=i,m=s,u=n;const y=h,f=p,g=u,b=m,w=new e.Vector3(y.x,y.y,y.z),x=new e.Vector3(f.x,f.y,f.z),v=g,S=b;let M=w.distanceTo(x);if(M<Math.abs(g-b)){let t=new e.SphereGeometry(b,a,l,c,d);return t.translate(b.x,b.y,b.z),t}const k=Math.acos((S-v)/M),z=Math.cos(k),P=new e.Matrix4,C=new e.Quaternion,E=new e.Vector3(0,1,0),A=new e.Vector3;A.subVectors(w,x),A.normalize(),C.setFromUnitVectors(E,A),P.makeRotationFromQuaternion(C);const O=new e.Matrix4,D=new e.Vector3;D.subVectors(w,x),D.normalize();let B=new e.Vector3;B=w,B.addScaledVector(D,z*v);let j=new e.Vector3;j=x,j.addScaledVector(D,z*S);const T=new e.Vector3;T.subVectors(j,B),T.normalize();const F=new e.Vector3;F.lerpVectors(j,B,.5),O.makeTranslation(F.x,F.y,F.z);let I=new xe(S,v,M,a,r,o,l,c,d);return I.applyMatrix(P),I.applyMatrix(O),I}}class ve extends e.BufferGeometry{constructor(t=1,i=1,s=1,n=8,a=1,r=!1,o=0,l=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:i,height:s,radialSegments:n,heightSegments:a,openEnded:r,thetaStart:o,thetaLength:l};const c=this;n=Math.floor(n),a=Math.floor(a);const d=[],h=[],p=[],u=[];let m=0;const y=[],f=s/2;let g=0;function b(s){const a=m,r=new e.Vector2,y=new e.Vector3;let b=0;const w=!0===s?t:i,x=!0===s?1:-1;for(let e=1;e<=n;e++)h.push(0,f*x,0),p.push(0,x,0),u.push(.5,.5),m++;const v=m;for(let e=0;e<=n;e++){const t=e/n*l+o,i=Math.cos(t),s=Math.sin(t);y.x=w*s,y.y=f*x,y.z=w*i,h.push(y.x,y.y,y.z),p.push(0,x,0),r.x=.5*i+.5,r.y=.5*s*x+.5,u.push(r.x,r.y),m++}for(let e=0;e<n;e++){const t=a+e,i=v+e;!0===s?d.push(i,i+1,t):d.push(i+1,i,t),b+=3}c.addGroup(g,b,!0===s?1:2),g+=b}!function(){const r=new e.Vector3,b=new e.Vector3;let w=0;const x=(i-t)/s;for(let e=0;e<=a;e++){const c=[],d=e/a,g=d*(i-t)+t;for(let e=0;e<=n;e++){const t=e/n,i=t*l+o,a=Math.sin(i),y=Math.cos(i);b.x=g*a,b.y=-d*s+f,b.z=g*y,h.push(b.x,b.y,b.z),r.set(a,x,y).normalize(),p.push(r.x,r.y,r.z),u.push(t,1-d),c.push(m++)}y.push(c)}for(let t=0;t<n;t++)for(let i=0;i<a;i++){const s=y[i][t],n=y[i+1][t],a=y[i+1][t+1],r=y[i][t+1],o=new e.Vector3(h[3*s+0],h[3*s+1],h[3*s+2]),l=new e.Vector3(h[3*n+0],h[3*n+1],h[3*n+2]),c=new e.Vector3(h[3*a+0],h[3*a+1],h[3*a+2]),p=new e.Vector3(h[3*r+0],h[3*r+1],h[3*r+2]),u=new e.Triangle(o,l,p),m=new e.Triangle(l,c,p);u.getArea()>1e-4&&(d.push(s,n,r),w+=3),m.getArea()>1e-4&&(d.push(n,a,r),w+=3)}c.addGroup(g,w,0),g+=w}(),r||(t>0&&b(!0),i>0&&b(!1)),this.setIndex(d),this.setAttribute("position",new e.Float32BufferAttribute(h,3)),this.setAttribute("normal",new e.Float32BufferAttribute(p,3)),this.setAttribute("uv",new e.Float32BufferAttribute(u,2))}static fromJSON(e){return new ve(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Se extends e.ExtrudeGeometry{constructor(t,i){const s=new e.Shape;s.moveTo(t[0].x,t[0].y);for(let e=1;e<t.length;e++)s.lineTo(t[e].x,t[e].y);s.lineTo(t[0].x,t[0].y);super(s,{steps:2,depth:i,bevelEnabled:!1}),this.vertices=t,this.height=i}clone(){return new this.constructor(this.vertices,this.height).copy(this)}}function Me(t){t.transparent=!0,t.resolution=new e.Vector2(1024,1024),t.depthTest=!0,t.depthWrite=!1,t.polygonOffset=!0,t.polygonOffsetFactor=1,t.side=e.DoubleSide,t.alphaToCoverage=!0}const ke=new e.Quaternion,ze=new e.Vector3,Pe=new e.Vector3,Ce=new e.Vector3,Ee=new e.Vector3,Ae=new e.Box3,Oe=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]);class De extends e.LineSegments{constructor(t,i,s,n,a,r,o=16777215){const l=[t,i,s,n,a,r],c=new e.BufferGeometry;c.setIndex([0,1]),c.setAttribute("position",new e.Float32BufferAttribute(l,3));const d=new e.LineBasicMaterial({color:o});Me(d),d.wireframe=!0,super(c,d)}clone(){const e=this.geometry.attributes.position.array;return e[0]=point1.x,e[1]=point1.y,e[2]=point1.z,e[3]=point2.x,e[4]=point2.y,e[5]=point2.z,new this.constructor(e[0],e[1],e[2],e[3],e[4],e[5]).copy(this,!0)}setPoints(e,t){de.sanity(e),de.sanity(t);const i=this.geometry.attributes.position.array;i[0]=e.x,i[1]=e.y,i[2]=e.z,i[3]=t.x,i[4]=t.y,i[5]=t.z,this.geometry.attributes.position.needsUpdate=!0,this.geometry.computeBoundingSphere()}}class Be extends s{constructor(t,i,s,r,o,l,c=1,d=16777215){const h=new n,p=new a({color:d,linewidth:c});Me(p);const u=[t,i,s,r,o,l];h.setPositions(u),super(h,p),this.computeLineDistances(),this.scale.set(1,1,1),this.point1=new e.Vector3(t,i,s),this.point2=new e.Vector3(r,o,l)}clone(){return new this.constructor(this.point1.x,this.point1.y,this.point1.z,this.point2.x,this.point2.y,this.point2.z).copy(this,!0)}setPoints(e,t){de.sanity(e),de.sanity(t),this.point1.copy(e),this.point2.copy(t);const i=[e.x,e.y,e.z,t.x,t.y,t.z];this.geometry.setPositions(i),this.computeLineDistances()}}class je extends e.LineSegments{constructor(t,i=16777215,s=1,n=!1){const a=new e.WireframeGeometry,r=new e.LineBasicMaterial({color:i,opacity:s});Me(r),super(a,r),this._positions=new Float32Array(24),this.points=[];for(let t=0;t<8;t++)this.points.push(new e.Vector3);t&&this.updateFromObject(t,n),this.clone=function(){return new this.constructor(t,i,s,n).copy(this,!0)}}disableDepthTest(){this.material.depthTest=!1}updateFromObject(t,i){const s=t.clone();i&&(t.getWorldPosition(Pe),t.getWorldQuaternion(ke),t.getWorldScale(ze),s.lookAtCamera=!1,s.position.set(0,0,0),s.rotation.set(0,0,0),s.scale.set(1,1,1),s.updateMatrixWorld(!0)),Ae.setFromObject(s);const n=Ae.min,a=Ae.max;de.sanity(Ae.min),de.sanity(Ae.max);const r=this._positions;r[0]=a.x,r[1]=a.y,r[2]=a.z,r[3]=n.x,r[4]=a.y,r[5]=a.z,r[6]=n.x,r[7]=n.y,r[8]=a.z,r[9]=a.x,r[10]=n.y,r[11]=a.z,r[12]=a.x,r[13]=a.y,r[14]=n.z,r[15]=n.x,r[16]=a.y,r[17]=n.z,r[18]=n.x,r[19]=n.y,r[20]=n.z,r[21]=a.x,r[22]=n.y,r[23]=n.z;const o=[];for(let e=Oe.length-1;e>0;e-=2){const t=3*Oe[e-0],i=3*Oe[e-1];o.push(r[t+0],r[t+1],r[t+2]),o.push(r[i+0],r[i+1],r[i+2])}this.geometry.setAttribute("position",new e.Float32BufferAttribute(o,3)),i&&(this.setRotationFromQuaternion(ke),this.scale.set(ze.x,ze.y,ze.z),this.position.set(Pe.x,Pe.y,Pe.z),this.updateMatrix()),this.updateMatrixWorld(!0),F.clearObject(s)}getPoints(){for(let e=0;e<8;e++){const t=3*e;this.points[e].x=this.geometry.attributes.position.array[t+0],this.points[e].y=this.geometry.attributes.position.array[t+1],this.points[e].z=this.geometry.attributes.position.array[t+2],this.localToWorld(this.points[e])}return this.points}getLocalPoints(){for(let e=0;e<8;e++){const t=3*e;this.points[e].x=this._positions[t+0],this.points[e].y=this._positions[t+1],this.points[e].z=this._positions[t+2]}return this.points}getBox3(t){const i=this.getLocalPoints();(t=t??new e.Box3).min.x=i[6].x,t.min.y=i[6].y,t.min.z=i[6].z,t.max.x=i[0].x,t.max.y=i[0].y,t.max.z=i[0].z}}class Te extends s{constructor(t,i=1,s=16777215,n=1,o=!1){const l=new r,c=new a({color:s,linewidth:i,opacity:n});Me(c),c.depthTest=!1,super(l,c),this._positions=new Float32Array(24),this.points=[];for(let t=0;t<8;t++)this.points.push(new e.Vector3);t&&this.updateFromObject(t,o),this.clone=function(){return new this.constructor(t,i,s,n,o).copy(this,!0)}}disableDepthTest(){this.material.depthTest=!1}updateFromObject(e,t){const i=e.clone();t&&(e.getWorldPosition(Pe),e.getWorldQuaternion(ke),e.getWorldScale(ze),i.lookAtCamera=!1,i.position.set(0,0,0),i.rotation.set(0,0,0),i.scale.set(1,1,1),i.updateMatrixWorld(!0)),Ae.setFromObject(i);const s=Ae.min,n=Ae.max;de.sanity(Ae.min),de.sanity(Ae.max);const a=this._positions;a[0]=n.x,a[1]=n.y,a[2]=n.z,a[3]=s.x,a[4]=n.y,a[5]=n.z,a[6]=s.x,a[7]=s.y,a[8]=n.z,a[9]=n.x,a[10]=s.y,a[11]=n.z,a[12]=n.x,a[13]=n.y,a[14]=s.z,a[15]=s.x,a[16]=n.y,a[17]=s.z,a[18]=s.x,a[19]=s.y,a[20]=s.z,a[21]=n.x,a[22]=s.y,a[23]=s.z;const r=[];for(let e=Oe.length-1;e>0;e-=2){const t=3*Oe[e-0],i=3*Oe[e-1];r.push(a[t+0],a[t+1],a[t+2]),r.push(a[i+0],a[i+1],a[i+2])}this.geometry.setPositions(r),t&&(this.setRotationFromQuaternion(ke),this.scale.set(ze.x,ze.y,ze.z),this.position.set(Pe.x,Pe.y,Pe.z),this.updateMatrix()),this.updateMatrixWorld(!0),F.clearObject(i)}getPoints(){for(let e=0;e<8;e++){const t=3*e;this.points[e].x=this.geometry.attributes.position.array[t+0],this.points[e].y=this.geometry.attributes.position.array[t+1],this.points[e].z=this.geometry.attributes.position.array[t+2],this.localToWorld(this.points[e])}return this.points}getLocalPoints(){for(let e=0;e<8;e++){const t=3*e;this.points[e].x=this._positions[t+0],this.points[e].y=this._positions[t+1],this.points[e].z=this._positions[t+2]}return this.points}getAbsoluteSize(e){this.getSize(e),e.x=Math.abs(e.x),e.y=Math.abs(e.y),e.z=Math.abs(e.z)}getAverageSize(){return this.getSize(Ee),(Ee.x+Ee.y+Ee.z)/3}getBox3(t){const i=this.getLocalPoints();(t=t??new e.Box3).min.x=i[6].x,t.min.y=i[6].y,t.min.z=i[6].z,t.max.x=i[0].x,t.max.y=i[0].y,t.max.z=i[0].z}getSize(e){this.getWorldScale(Ce);const t=this.getLocalPoints();e.x=(t[0].x-t[6].x)*Math.abs(Ce.x),e.y=(t[0].y-t[6].y)*Math.abs(Ce.y),e.z=(t[0].z-t[6].z)*Math.abs(Ce.z)}getMaxSize(){return this.getSize(Ee),Math.max(Math.max(Ee.x,Ee.y),Ee.z)}}class Fe extends e.LineSegments{constructor(t,i,s=1,n=!1){const a=new e.WireframeGeometry(t.geometry),r=new e.LineBasicMaterial({color:i,opacity:s});Me(r),super(a,r),n&&(this.rotation.set(t.rotation.x,t.rotation.y,t.rotation.z),this.scale.set(t.scale.x,t.scale.y,t.scale.z),this.position.set(t.position.x,t.position.y,t.position.z)),this.clone=function(){return new this.constructor(t,i,s,n).copy(this,!0)}}}class Ie extends o{constructor(t,i,s,n=1,r=!1){const o=new l(t.geometry),c=new a({color:s,linewidth:i,resolution:new e.Vector2(500,500),opacity:n});Me(c),c.depthTest=!1,super(o,c),r&&(this.rotation.set(t.rotation.x,t.rotation.y,t.rotation.z),this.scale.set(t.scale.x,t.scale.y,t.scale.z),this.position.set(t.position.x,t.position.y,t.position.z)),this.clone=function(){return new this.constructor(t,i,s,n,r).copy(this,!0)}}}class Ve extends e.Mesh{constructor(){const t=Ve.SkyShader;super(new e.SphereGeometry(1),new e.ShaderMaterial({name:"SkyShader",fragmentShader:t.fragmentShader,vertexShader:t.vertexShader,uniforms:e.UniformsUtils.clone(t.uniforms),side:e.BackSide,depthTest:!1,depthWrite:!1})),this.isSky=!0,this.baseScale=500,this.scale.setScalar(this.baseScale)}copy(e,t){return super.copy(e,t),this.baseScale=e.baseScale,this.scale.setScalar(this.baseScale),this}}Ve.SkyShader={uniforms:{uSky:{value:new e.Color(0,.85,.8)},uHorizon:{value:new e.Color(1,.75,.5)},uGround:{value:new e.Color(.9,.7,.5)},uScale:{value:500}},vertexShader:"\n        varying vec3 \tvWorldPosition;\n\n        void main() {\n            vec4 worldPosition = modelMatrix * vec4(position, 1.0);\n            vWorldPosition = worldPosition.xyz;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }",fragmentShader:"\n        uniform vec3    uSky;\n        uniform vec3    uHorizon;\n        uniform vec3    uGround;\n        uniform float   uScale;\n        varying vec3    vWorldPosition;\n\n        void main() {\n            float lowerGround =         0.0;\n            float h = normalize(vWorldPosition + lowerGround).y;\n\n            ///// Sky fade (brighten at horizon)\n            float skyFade = pow(vWorldPosition.y / (uScale * 0.25), 0.4);\n            skyFade = clamp(skyFade, 0.0, 1.0);\n            vec3 sky = mix(uHorizon, uSky, skyFade);\n\n            ///// Seperates ground and sky, solid horizon: clamp(h * uScale, 0.0, 1.0)\n            float blurHorizon =         0.05;\n            float compressHorizon =     5.0;\n            float skyMix = max(pow(max(h, 0.0), blurHorizon) * compressHorizon, 0.0);\n            skyMix = clamp(skyMix, 0.0, 1.0);\n            vec3 outColor = mix(uGround, sky, skyMix);\n\n            ///// Output Color\n            gl_FragColor = vec4(outColor, 1.0);\n        }"};const Ne=new e.Color(16777215),Le=[],Re=new e.Color;let Ge,We;class _e extends c{constructor(t,i){super();const s=this;this.scene=t,this.camera=i,this.overrideMaterial=void 0,this.clearColor=void 0,this.clearAlpha=0,this.clear=!1,this.clearDepth=!1,this.needsSwap=!1,this.renderDebugView=!1,this.needPick=!1,this.x=0,this.y=0,this.pickedId=-1;const n=document.createElement("canvas");n.width=64,n.height=64;const a=n.getContext("2d");function r(t){const i=t.object;if(!i||!i.isObject3D)return;if(!i.visible)return;if(!F.allowSelection(i))return;const n=i.id,a=i.material,r=i.geometry;let o=0;a.morphTargets&&r.isBufferGeometry&&(o=r.morphAttributes.position.length>0?1:0);const l=i.isSkinnedMesh?1:0,c=o<<0|l<<1|(!0===i.isInstancedMesh?1:0)<<2|(a.side===e.FrontSide?1:0)<<3|(a.side===e.BackSide?1:0)<<4|(a.side===e.DoubleSide?1:0)<<5|(a.isSpriteMaterial?1:0)<<6;let d=Le[c];d||(d=new e.ShaderMaterial({defines:{USE_MAP:"",USE_UV:"",USE_LOGDEPTHBUF:""},vertexShader:e.ShaderChunk.meshbasic_vert,fragmentShader:"\n                        #include <common>\n\n                        varying vec2 vUv;\n\n                        uniform float opacity;\n                        uniform sampler2D map;\n                        uniform vec4 objectId;\n                        uniform float useMap;\n\n                        #include <logdepthbuf_pars_fragment>\n\n                        void main() {\n                            #include <logdepthbuf_fragment>\n\n                            gl_FragColor = objectId;\n\n                            if (opacity < 0.05) discard;\n                            if (useMap > 0.0) {\n                                vec4 texelColor = texture2D(map, vUv);\n                                if (texelColor.a < 0.05) discard;\n                            }\n                        }\n                    ",fog:!1,lights:!1,side:i.isSprite?e.DoubleSide:e.FrontSide}),d.uniforms={opacity:{value:1},map:{value:void 0},uvTransform:{value:new e.Matrix3},objectId:{value:[1,1,1,1]},useMap:{value:0}},d.side=a.side,d.skinning=l>0,d.morphTargets=o>0,Le[c]=d),d.uniforms.objectId.value=[(n>>0&255)/255,(n>>8&255)/255,(n>>16&255)/255,(n>>24&255)/255],d.uniforms.useMap.value=a.map?1:0,a.map&&(i.isSpriteHelper?d.uniforms.map.value=s.spriteMap:d.uniforms.map.value=a.map),d.uniformsNeedUpdate=!0,We.renderBufferDirect(s.camera,s.scene,r,d,i,null)}a.fillStyle="rgb(255,255,255)",a.beginPath(),a.arc(32,32,32,0,2*Math.PI),a.closePath(),a.fill(),this.spriteMap=new e.CanvasTexture(n),Ge=new e.Scene,Ge.onAfterRender=function(){const e=We.renderLists.get(s.scene,0);e.opaque.forEach(r),e.transmissive.forEach(r),e.transparent.forEach(r)},this.pickingTarget=new e.WebGLRenderTarget(1,1,{minFilter:e.NearestFilter,magFilter:e.NearestFilter,format:e.RGBAFormat,encoding:e.LinearEncoding}),this.pixelBuffer=new Uint8Array(4*this.pickingTarget.width*this.pickingTarget.height)}dispose(){this.pickingTarget.dispose(),this.spriteMap.dispose(),console.warn("GpuPickerPass: Instance was disposed!")}render(e,t,i){if(!1===this.needPick&&!1===this.renderDebugView)return;We=e;const s=e.domElement.width,n=e.domElement.height;this.camera.setViewOffset(s,n,this.x,this.y,1,1);const a=e.getRenderTarget(),r=e.getClearAlpha();e.getClearColor(Re),e.setRenderTarget(this.pickingTarget),e.setClearColor(Ne),e.clear(),e.render(Ge,this.camera),e.readRenderTargetPixels(this.pickingTarget,0,0,this.pickingTarget.width,this.pickingTarget.height,this.pixelBuffer),e.setRenderTarget(a),this.camera.clearViewOffset(),this.renderDebugView&&e.render(Ge,this.camera),e.setClearColor(Re,r),this.needPick&&(this.pickedId=this.pixelBuffer[0]+(this.pixelBuffer[1]<<8)+(this.pixelBuffer[2]<<16)+(this.pixelBuffer[3]<<24),this.needPick=!1)}renderPickScene(e,t){We=e;const i=e.getClearAlpha();e.getClearColor(Re),e.setClearColor(Ne),e.clear(),e.render(Ge,t),e.setClearColor(Re,i)}}const Ue=new e.Vector2(1,1);class Je{init(t){let i;switch(t.style){case"perspective":this._tanFOV=Math.tan(Math.PI/180*t.fov/2),this._windowHeight=t.fixedSize?1e3:0;let s=t.nearPersp<=0?1e-5:t.nearPersp,n=0==t.farPersp?1e-5:t.farPersp;n===s&&(n+=.001),i=new e.PerspectiveCamera(t.fov,1,s,n);break;case"orthographic":let a=t.nearOrtho,r=t.farOrtho,o=t.left,l=t.right,c=t.top,d=t.bottom;r==r&&(r+=.001),l===o&&(l+=.001),c===d&&(c+=.001),i=new e.OrthographicCamera(o,l,c,d,a,r);break;default:console.error(`Camera.init: Invalid camera type '${t.style}'`)}i&&i.isCamera?(i.position.set(0,0,0),i.lookAt(0,0,0)):console.log("Error with camera!"),this.backend=i,this.data=t,this.style=t.style}dispose(){}enable(){this.entity&&this.backend&&this.entity.add(this.backend)}disable(){this.entity&&this.backend&&this.entity.remove(this.backend)}updateProjectionMatrix(){if(window.getRenderer()&&this.backend&&this.backend.isCamera){window.getRenderer().getSize(Ue);let e=Ue.x,t=Ue.y;if(this.backend.isPerspectiveCamera)this.data.fixedSize&&(this.backend.fov=360/Math.PI*Math.atan(this._tanFOV*(t/this._windowHeight))),this.backend.aspect=e/t;else if(this.backend.isOrthographicCamera){let i=1,s=1;this.backend.left=-e/i/2,this.backend.right=e/i/2,this.backend.top=t*s/2,this.backend.bottom=-t*s/2}this.backend.updateProjectionMatrix()}}toJSON(){const e=this.defaultData("style",this.style);for(let t in e)void 0!==this.data[t]&&(e[t]=this.data[t]);return e}}Je.config={schema:{style:{type:"select",default:"perspective",select:["perspective","orthographic"]},nearPersp:{type:"number",default:1,min:0,step:.1,if:{style:["perspective"]}},farPersp:{type:"number",default:500,min:0,step:1,if:{style:["perspective"]}},nearOrtho:{type:"number",default:-500,step:1,if:{style:["orthographic"]}},farOrtho:{type:"number",default:500,step:1,if:{style:["orthographic"]}},fov:{type:"number",default:58.1,if:{style:["perspective"]}},fixedSize:{type:"boolean",default:!0,if:{style:["perspective"]}},left:{type:"number",default:-1,if:{style:["orthographic"]}},right:{type:"number",default:1,if:{style:["orthographic"]}},top:{type:"number",default:1,if:{style:["orthographic"]}},bottom:{type:"number",default:-1,if:{style:["orthographic"]}}},icon:"",color:"#4B4886"},W.register("camera",Je);new e.BoxGeometry(.5,.5,.5);const qe=(new e.Shape).absarc(0,0,.5),He=new e.Shape([new e.Vector2(-.5,.5),new e.Vector2(-.5,-.5),new e.Vector2(.5,-.5)]);class Qe{init(t){if(this.dispose(),t.isBufferGeometry){const e=t.uuid;R.addAsset(t),(t=this.defaultData("style","asset")).asset=e}let i;switch(t.style){case"asset":const s=R.getAsset(t.asset);s&&s.isBufferGeometry&&(i=s);break;case"box":i=new e.BoxGeometry(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments);break;case"capsule":const n=k.clamp(t.radiusTop,.1,t.height)/1.5,a=k.clamp(t.radiusBottom,.1,t.height)/1.5,r=t.height/1.5;i=new xe(n,a,r,t.radialSegments,t.heightSegments,t.capSegments,t.capSegments,t.thetaStart,t.thetaLength),i=me.uvMapSphere(i,"v");break;case"circle":i=new e.CircleGeometry(t.radius,t.segments,t.thetaStart,t.thetaLength);break;case"cone":i=new ve(0,t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength);break;case"cylinder":i=new ve(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength);break;case"lathe":const o=[];let l=R.getAsset(t.shape);if(l&&"Shape"===l.type){const i=l.getPoints(t.segments);for(let t=0;t<i.length;t++)o.push(new e.Vector2(i[t].x,i[t].y))}else for(let t=0;t<2.5;t+=.1)o.push(new e.Vector2(Math.abs(.4*Math.cos(t))+.2,.4*t));i=new e.LatheGeometry(o,t.segments,0,t.phiLength),i.center();break;case"plane":i=new e.PlaneGeometry(t.width,t.height,t.widthSegments,t.heightSegments);break;case"platonicSolid":switch(t.polyhedron){case"dodecahedron":default:i=new e.DodecahedronGeometry(t.radius,t.detail);break;case"icosahedron":i=new e.IcosahedronGeometry(t.radius,t.detail);break;case"octahedron":i=new e.OctahedronGeometry(t.radius,t.detail);break;case"tetrahedron":i=new e.TetrahedronGeometry(t.radius,t.detail)}break;case"ring":i=new e.RingGeometry(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength);break;case"roundedBox":i=new h(t.width,t.height,t.depth,t.segments,t.radius);break;case"shape":let c=R.getAsset(t.shape);c&&"Shape"===c.type||(c=He);const d={depth:t.depth,curveSegments:t.curveSegments,steps:t.steps,bevelEnabled:t.bevelEnabled,bevelThickness:t.bevelThickness,bevelSize:t.bevelSize,bevelSegments:t.bevelSegments};i=new e.ExtrudeGeometry(c,d),i.center();break;case"sphere":i=new e.SphereGeometry(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength);break;case"torus":i=new e.TorusGeometry(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc);break;case"torusKnot":i=new e.TorusKnotGeometry(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q);break;case"tube":let p=R.getAsset(t.shape);p&&"Shape"===p.type||(p=qe);const u=new e.CurvePath,m=p.getPoints(Math.max(256,4*t.tubularSegments));for(let t=0;t<m.length-1;t++){const i=m[t],s=m[t+1];u.curves.push(new e.LineCurve3(new e.Vector3(i.x,i.y,0),new e.Vector3(s.x,s.y,0)))}i=new e.TubeGeometry(u,t.tubularSegments,t.radius,t.radialSegments,t.closed),i.center();break;default:console.error("Geometry: Invalid geometry type "+t.style)}if(i&&i.isBufferGeometry){const e=i.constructor.name,s={split:t.edgeSplit??!1,uvSmooth:t.uvSmooth??!1,flatOnly:t.flatOnly??!1,preserveEdges:!1,maxTriangles:25e3};if(s.split||t.subdivide>0){let e=d.modify(i,t.subdivide,s);e&&(i.dispose(),i=e)}if("cube"===t.textureMapping?i=me.uvMapCube(i):"sphere"===t.textureMapping&&(i=me.uvMapSphere(i)),1!==t.wrapS||1!==t.wrapT){const e=Math.max(t.wrapS,0),s=Math.max(t.wrapT,0);me.repeatTexture(i,e,s)}i.name=e}this.backend=i,this.data=t,this.style=t.style}dispose(){const e=this.backend;e&&e.isBufferGeometry&&this.backend.dispose(),this.backend=void 0}enable(){if(!this.entity)return;const e=this.entity.getComponent("material");void 0!==e&&e.refreshMesh()}disable(){if(!this.entity)return;const e=this.entity.getComponent("material");void 0!==e&&e.refreshMesh()}toJSON(){const e=this.defaultData("style",this.style);for(let t in e)void 0!==this.data[t]&&(e[t]=this.data[t]);return e}}Qe.config={schema:{style:[{type:"select",default:"box",select:["asset","box","capsule","circle","cone","cylinder","lathe","plane","platonicSolid","ring","roundedBox","shape","sphere","torus","torusKnot","tube"]}],asset:{type:"asset",class:"BufferGeometry",if:{style:["asset"]}},shape:{type:"asset",class:"Shape",if:{style:["lathe","shape","tube"]}},styleDivider:{type:"divider"},polyhedron:[{type:"select",default:"dodecahedron",select:["dodecahedron","icosahedron","octahedron","tetrahedron"],if:{style:["platonicSolid"]}}],points:{type:"shape",alias:"points",default:null,if:{style:["lathe"]}},shapes:{type:"shape",alias:"shape",default:null,if:{style:["shape"]}},path:{type:"shape",alias:"curve",default:null,if:{style:["tube"]}},depth:[{type:"number",default:1,min:0,step:"grid",if:{style:["box","roundedBox"]}},{type:"number",default:.5,min:0,step:"grid",if:{style:["shape"]}}],height:[{type:"number",default:1,min:0,step:"grid",if:{style:["box","capsule","cone","cylinder","plane","roundedBox"]}}],width:[{type:"number",default:1,min:0,step:"grid",if:{style:["box","plane","roundedBox"]}}],widthSegments:[{type:"int",default:1,min:1,max:1024,promode:!0,if:{style:["box","plane"]}},{type:"int",default:24,min:4,max:1024,if:{style:["sphere"]}}],heightSegments:[{type:"int",default:1,min:1,max:1024,promode:!0,if:{style:["box","plane"]}},{type:"int",default:1,min:1,max:1024,if:{style:["cone","cylinder"]}},{type:"int",default:24,min:1,max:1024,if:{style:["sphere"]}}],depthSegments:[{type:"int",default:1,min:1,max:1024,promode:!0,if:{style:["box"]}}],radius:[{type:"number",default:.25,min:0,step:.01,if:{style:["roundedBox"]}},{type:"number",default:.5,min:0,step:.01,if:{style:["circle","cone","platonicSolid","sphere"]}},{type:"number",default:.5,min:0,step:.01,if:{style:["torus"]}},{type:"number",default:.4,min:0,step:.01,if:{style:["torusKnot"]}},{type:"number",default:.1,min:0,step:.01,if:{style:["tube"]}}],radiusTop:[{type:"number",default:.5,min:0,step:.01,if:{style:["capsule"]}},{type:"number",default:.5,min:0,step:.01,if:{style:["cylinder"]}}],radiusBottom:[{type:"number",default:.5,min:0,step:.01,if:{style:["capsule"]}},{type:"number",default:.5,min:0,step:.01,if:{style:["cylinder"]}}],segments:[{type:"int",default:36,min:3,max:64,if:{style:["circle"]}},{type:"int",default:16,min:1,max:64,if:{style:["lathe"]}},{type:"int",default:4,min:1,max:10,if:{style:["roundedBox"]}}],thetaLength:[{type:"angle",default:2*Math.PI,min:0,max:360,if:{style:["circle","ring"]}},{type:"angle",default:2*Math.PI,min:0,max:360,promode:!0,if:{style:["capsule","cone","cylinder"]}},{type:"angle",default:Math.PI,min:0,max:720,promode:!0,if:{style:["sphere"]}}],thetaStart:[{type:"angle",default:0,if:{style:["circle","ring","sphere"]}},{type:"angle",default:0,promode:!0,if:{style:["capsule","cone","cylinder"]}}],phiLength:{type:"angle",default:2*Math.PI,max:360,if:{style:["lathe","sphere"]}},phiStart:{type:"angle",default:0,if:{style:["sphere"]}},capSegments:{type:"int",default:6,min:1,max:36,if:{style:["capsule"]}},radialSegments:[{type:"int",default:24,min:2,max:64,if:{style:["capsule","cone","cylinder","torus","torusKnot","tube"]}}],openEnded:{type:"boolean",default:!1,if:{style:["cone","cylinder"]}},detail:{type:"slider",default:0,min:0,max:9,step:1,precision:0,if:{style:["platonicSolid"]}},innerRadius:{type:"number",default:.25,min:0,step:.01,if:{style:["ring"]}},outerRadius:{type:"number",default:.5,min:0,step:.01,if:{style:["ring"]}},phiSegments:{type:"int",default:10,min:1,max:64,promode:!0,if:{style:["ring"]}},thetaSegments:{type:"int",default:36,min:3,max:128,if:{style:["ring"]}},steps:{type:"int",alias:"Depth Segments",default:3,min:1,max:128,promode:!0,if:{style:["shape"]}},bevelEnabled:{type:"boolean",alias:"bevel",default:!1,if:{style:["shape"]},rebuild:!0},bevelThickness:{type:"number",default:.1,min:0,step:.01,if:{style:["shape"],bevelEnabled:[!0]}},bevelSize:{type:"number",default:.1,min:0,step:.01,if:{style:["shape"],bevelEnabled:[!0]}},bevelSegments:{type:"int",default:4,min:0,max:64,promode:!0,if:{style:["shape"],bevelEnabled:[!0]}},curveSegments:{type:"int",default:16,min:1,max:128,promode:!0,if:{style:["shape"]}},tube:[{type:"number",default:.2,min:0,step:.01,if:{style:["torus"]}},{type:"number",default:.1,min:0,step:.01,if:{style:["torusKnot"]}}],tubularSegments:[{type:"int",default:32,min:3,max:128,if:{style:["torus"]}},{type:"int",default:64,min:3,max:128,if:{style:["torusKnot"]}},{type:"int",default:128,min:2,if:{style:["tube"]}}],arc:{type:"angle",default:2*Math.PI,min:0,max:360,if:{style:["torus"]}},p:{type:"number",default:2,min:1,max:128,if:{style:["torusKnot"]}},q:{type:"number",default:3,min:1,max:128,if:{style:["torusKnot"]}},closed:{type:"boolean",default:!0,if:{style:["tube"]}},modifierDivider:{type:"divider"},subdivide:{type:"slider",default:0,min:0,max:3,step:1,precision:0,rebuild:!0},edgeSplit:{type:"boolean",default:!1,hide:{subdivide:[0]}},uvSmooth:{type:"boolean",default:!1,promode:!0,hide:{subdivide:[0]}},flatOnly:{type:"boolean",default:!1,promode:!0,hide:{subdivide:[0]}},textureDivider:{type:"divider"},textureMapping:[{type:"select",default:"cube",select:["none","cube","sphere"],if:{style:["shape"]}},{type:"select",default:"none",select:["none","cube","sphere"],not:{style:["shape"]}}],wrapS:{type:"number",alias:"wrapX",default:1,min:0,step:.2,precision:2},wrapT:{type:"number",alias:"wrapY",default:1,min:0,step:.2,precision:2}},icon:"",color:"rgb(255, 113, 0)",dependencies:["material"]},W.register("geometry",Qe);class $e{init(t){let i;this.dispose();let s=!1;switch(t.style){case"ambient":i=new e.AmbientLight(t.color,t.intensity);break;case"directional":i=new e.DirectionalLight(t.color,t.intensity),s=!0;break;case"hemisphere":i=new e.HemisphereLight(t.color,t.groundColor,t.intensity);break;case"point":i=new e.PointLight(t.color,t.intensity,t.distance,t.decay),s=!0;break;case"spot":const n=Math.PI/180*t.angle;i=new e.SpotLight(t.color,t.intensity,t.distance,n,t.penumbra,t.decay),s=!0;break;default:console.error(`Light: Invalid light type '${t.style}'`)}if(i&&i.isLight){if(i.position.set(0,0,0),s){const e=10;i.castShadow=!0,i.shadow.bias=t.shadowBias,i.shadow.mapSize.width=2048,i.shadow.mapSize.height=2048,i.shadow.camera.near=-500,i.shadow.camera.far=500,i.shadow.camera.left=-e,i.shadow.camera.right=e,i.shadow.camera.top=e,i.shadow.camera.bottom=-e,i.shadow.camera.updateProjectionMatrix()}}else console.log("Error with light!");this.backend=i,this.data=t,this.style=t.style}dispose(){const e=this.backend;e&&e.isLight&&(e.shadow&&e.shadow.map&&e.shadow.map.dispose(),e.dispose()),this.backend=void 0}enable(){this.entity&&this.backend&&this.entity.add(this.backend)}disable(){this.entity&&this.backend&&this.entity.remove(this.backend)}toJSON(){const e=this.defaultData("style",this.style);for(let t in e)void 0!==this.data[t]&&(e[t]=this.data[t]);return e}}$e.config={schema:{style:{type:"select",default:"ambient",select:["ambient","directional","hemisphere","point","spot"]},styleDivider:{type:"divider"},color:[{type:"color",default:16777215,if:{style:["ambient","directional","point","spot"]}},{type:"color",alias:"skyColor",default:8454143,if:{style:["hemisphere"]}}],groundColor:{type:"color",default:8413248,if:{style:["hemisphere"]}},intensity:[{type:"slider",default:.25,step:.05,min:0,max:2,if:{style:["ambient"]}},{type:"slider",default:.5,step:.05,min:0,max:2,if:{style:["hemisphere"]}},{type:"slider",default:1,step:.05,min:0,max:2,if:{style:["directional"]}},{type:"slider",default:1,step:.05,min:0,max:2,if:{style:["point","spot"]}}],distance:{type:"number",default:0,if:{style:["point","spot"]}},decay:{type:"number",default:1,if:{style:["point","spot"]}},angle:{type:"number",default:45,unit:"°",if:{style:["spot"]}},penumbra:{type:"number",default:0,min:0,max:1,if:{style:["spot"]}},shadowBias:{type:"number",default:0,precision:6,promode:!0,if:{style:["directional","point","spot"]}}},icon:"",color:"#222222"},W.register("light",$e);const Xe=["NoBlending","NormalBlending","AdditiveBlending","SubstractiveBlending","MultiplyBlending","CustomBlending"],Ye=["FrontSide","BackSide","DoubleSide"];class Ke{init(t){this.dispose();const i={};if(t.isMaterial){const e=t.uuid;R.addAsset(t),(t=this.defaultData("style","asset")).asset=e}else{for(const e in t){const s=t[e];i[e]=s;let n=Ke.config.schema[e];if(z.isIterable(n)&&n.length>0&&(n=n[0]),s&&n&&"map"===n.type)if(s.isTexture)R.addAsset(s);else{const t=R.getAsset(s);t&&t.isTexture?i[e]=t:i[e]=null}}delete i.base,delete i.style,delete i.edgeSize,delete i.gradientSize,delete i.premultiplyAlpha,"string"==typeof i.blending&&(i.blending=Xe.indexOf(i.blending)),"string"==typeof i.side&&(i.side=Ye.indexOf(i.side)),"BasicDepthPacking"===i.depthPacking&&(i.depthPacking=e.BasicDepthPacking),"RGBADepthPacking"===i.depthPacking&&(i.depthPacking=e.RGBADepthPacking)}let s;switch(t.style){case"asset":const n=R.getAsset(t.asset);n&&n.isMaterial&&(s=n.clone());break;case"basic":s=new e.MeshBasicMaterial(i);break;case"depth":s=new e.MeshDepthMaterial(i);break;case"lambert":s=new e.MeshLambertMaterial(i);break;case"matcap":s=new e.MeshMatcapMaterial(i);break;case"normal":s=new e.MeshNormalMaterial(i);break;case"phong":s=new e.MeshPhongMaterial(i);break;case"physical":s=new e.MeshPhysicalMaterial(i);break;case"points":s=new e.PointsMaterial(i);break;case"shader":s=new e.ShaderMaterial(i);break;case"standard":s=new e.MeshStandardMaterial(i);break;case"toon":s=new e.MeshToonMaterial(i),t.gradientSize=Math.min(Math.max(t.gradientSize,1),16);const a=getRenderer().capabilities.isWebGL2?e.RedFormat:e.LuminanceFormat,r=new Uint8Array(t.gradientSize+2);for(let e=0;e<=r.length;e++)r[e]=e/r.length*256;s.gradientMap=new e.DataTexture(r,r.length,1,a),s.gradientMap.needsUpdate=!0;break;default:console.error(`Material: Invalid material type '${t.style}'`)}s&&s.isMaterial||console.log("Error with material!"),this.backend=s,this.data=t,this.style=t.style}dispose(){const e=this.backend;e&&e.isMaterial&&e.dispose(),this.backend=void 0}enable(){this.refreshMesh()}disable(){this.refreshMesh()}refreshMesh(){if(this.entity&&this.mesh&&(this.entity.remove(this.mesh),F.clearObject(this.mesh),this.mesh=void 0),!0!==this.enabled)return;if(!this.backend||!this.backend.isMaterial)return;const t=this.backend.clone();!function(t,i={style:"basic",premultiplyAlpha:!0}){if(!t||!t.isMaterial)return;let s=i&&1===i.opacity&&void 0===i.map;t.transparent=!s,t.alphaTest=.01,t.polygonOffset=!0,t.polygonOffsetFactor=1,t.onBeforeCompile=function(s){"toon"===i.style&&(s.uniforms=e.UniformsUtils.merge([s.uniforms,{uBitDepth:{value:i.gradientSize??4},uEdgeSize:{value:i.edgeSize??6},uTextureWidth:{value:100},uTextureHeight:{value:100}}]),t.map&&t.map.isTexture&&(s.uniforms.uTextureWidth.value=t.map.image.width,s.uniforms.uTextureHeight.value=t.map.image.height),s.fragmentShader=s.fragmentShader.replace("#include <common>",["#include <common>","","uniform float uBitDepth;","uniform float uEdgeSize;","uniform float uTextureWidth;","uniform float uTextureHeight;","","vec3 rgbToHsv(vec3 c) {","   vec4  K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);","   vec4  p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));","   vec4  q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));","   float d = q.x - min(q.w, q.y);","   float e = 1.0e-10;","   return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);","}","vec3 hsvToRgb(vec3 c) {","   vec4  K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);","   vec3  p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);","   return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);","}","","float avgIntensity(vec4 pix) {","   return (pix.r + pix.g + pix.b) / 3.0;","}"].join("\n")),s.fragmentShader=s.fragmentShader.replace("#include <color_fragment>",["#include <color_fragment>","vec3 original_color = diffuseColor.rgb;","vec3 v_hsv = rgbToHsv(original_color.rgb);","float amt = 1.0 / (uBitDepth + 8.0);","float hueIncrease = 1.05;","float satIncrease = 1.10;","float vibIncrease = 1.75;","v_hsv.x = clamp(amt * (floor(v_hsv.x / amt) * hueIncrease), 0.0, 1.0);","v_hsv.y = clamp(amt * (floor(v_hsv.y / amt) * satIncrease), 0.0, 1.0);","v_hsv.z = clamp(amt * (floor(v_hsv.z / amt) * vibIncrease), 0.0, 1.0);","#ifdef USE_MAP","   vec2 coords = vUv;","   float dxtex = 1.0 / uTextureWidth;","   float dytex = 1.0 / uTextureHeight;","   float edge_thres  = 0.15;","   float edge_thres2 = uEdgeSize;","   float pix[9];","   int   k = -1;","   float delta;","   for (int i = -1; i < 2; i++) {","       for (int j = -1; j < 2; j++) {","           k++;","           vec2 sampleCoords = vec2(coords.x + (float(i) * dxtex), coords.y + (float(j) * dytex));","           vec4 texSample = texture2D(map, sampleCoords);","           pix[k] = avgIntensity(texSample);","       }","   }","   delta = (abs(pix[1] - pix[7]) + abs(pix[5] - pix[3]) + abs(pix[0] - pix[8]) + abs(pix[2] - pix[6]) ) / 4.0;","   float edg = clamp(edge_thres2 * delta, 0.0, 1.0);","   vec3 v_rgb = (edg >= edge_thres) ? vec3(0.0) : hsvToRgb(v_hsv.xyz);","#else","   vec3 v_rgb = hsvToRgb(v_hsv.xyz);","#endif","diffuseColor.rgb = vec3(v_rgb.x, v_rgb.y, v_rgb.z);","float bit_depth = uBitDepth;","float bitR = floor(diffuseColor.r * bit_depth);","float bitG = floor(diffuseColor.g * bit_depth);","float bitB = floor(diffuseColor.b * bit_depth);","diffuseColor.rgb = vec3(bitR, bitG, bitB) / bit_depth;"].join("\n"))),i.premultiplyAlpha&&s.fragmentShader&&(s.fragmentShader=s.fragmentShader.replace("#include <premultiplied_alpha_fragment>","gl_FragColor.rgba *= gl_FragColor.a;"))},i.premultiplyAlpha&&(t.blending=e.CustomBlending,t.blendEquation=e.AddEquation,t.blendSrc=e.OneFactor,t.blendDst=e.OneMinusSrcAlphaFactor,t.blendEquationAlpha=e.AddEquation,t.blendSrcAlpha=e.OneFactor,t.blendDstAlpha=e.OneMinusSrcAlphaFactor);t.needsUpdate=!0}(t,this.toJSON());const i=this.entity.getComponent("geometry");if(!i)return;if(!i.enabled)return;const s=i.backend;if(!s)return;"points"===this.style?this.mesh=new e.Points(s,t):(this.mesh=new e.Mesh(s,t),this.mesh.castShadow=this.entity.castShadow,this.mesh.receiveShadow=this.entity.receiveShadow),this.mesh.name=`Backend Object3D for ${this.entity.name}`;!0===this.backend.isMeshPhysicalMaterial&&this.backend.transmission>0&&(this.backend.envMap=hdrEquirect),this.backend.opacity<.05&&window.activeCamera&&window.editor&&window.editor.viewport&&activeCamera.uuid===editor.viewport.camera.uuid&&(t.map=null,t.opacity=.25,t.wireframe=!0,this.mesh.castShadow=!1),this.entity&&this.mesh&&this.entity.add(this.mesh)}toJSON(){const e=this.defaultData("style",this.style);for(let t in e)void 0!==this.data[t]&&(this.data[t]&&this.data[t].isTexture?e[t]=this.data[t].uuid:e[t]=this.data[t]);return e}}Ke.config={schema:{style:[{type:"select",default:"standard",promode:!0,select:["asset","basic","depth","lambert","matcap","normal","phong","physical","points","shader","standard","toon"]},{type:"select",default:"standard",select:["basic","points","standard","toon"]}],styleDivider:{type:"divider"},asset:{type:"asset",class:"Material",if:{style:["asset"]}},color:{type:"color",if:{style:["basic","lambert","matcap","phong","physical","points","standard","toon"]}},emissive:{type:"color",default:0,promode:!0,if:{style:["lambert","phong","physical","standard","toon"]}},emissiveIntensity:{type:"slider",default:1,min:0,max:2,promode:!0,if:{style:["lambert","phong","physical","standard","toon"]}},opacity:{type:"slider",default:1,min:0,max:1,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","points","standard","toon"]}},depthTest:{type:"boolean",default:!0,promode:!0,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","standard","toon"]}},depthWrite:{type:"boolean",default:!0,promode:!0,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","standard","toon"]}},flatShading:{type:"boolean",default:!1,if:{style:["phong","physical","standard","normal","matcap"]}},premultiplyAlpha:{type:"boolean",default:!0,promode:!0,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","points","standard","toon"]}},wireframe:{type:"boolean",default:!1,if:{style:["basic","depth","lambert","normal","phong","physical","standard","toon"]}},vertexColors:{type:"boolean",default:!1,promode:!0,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","standard","toon"]}},size:{type:"slider",default:.05,min:0,max:1,if:{style:["points"]}},sizeAttenuation:{type:"boolean",default:!0,if:{style:["points"]}},edgeSize:{type:"slider",default:6,min:0,max:10,step:1,precision:0,if:{style:["toon"]}},gradientSize:{type:"slider",default:4,min:1,max:16,step:1,precision:0,if:{style:["toon"]}},metalness:{type:"slider",default:.1,min:0,max:1,if:{style:["physical","standard"]}},roughness:{type:"slider",default:1,min:0,max:1,if:{style:["physical","standard"]}},specular:{type:"color",default:1118481,if:{style:["phong"]}},shininess:{type:"number",default:30,if:{style:["phong"]}},clearcoat:{type:"slider",default:0,min:0,max:1,if:{style:["physical"]}},clearcoatRoughness:{type:"slider",default:0,min:0,max:1,if:{style:["physical"]}},ior:{type:"slider",default:1.5,min:1,max:2,if:{style:["physical"]}},sheen:{type:"slider",default:0,min:0,max:1,if:{style:["physical"]}},sheenRoughness:{type:"slider",default:0,min:0,max:1,if:{style:["physical"]}},sheenColor:{type:"color",if:{style:["physical"]}},specularColor:{type:"color",promode:!0,if:{style:["physical"]}},specularIntensity:{type:"slider",default:1,min:0,max:2,promode:!0,if:{style:["physical"]}},thickness:{type:"slider",default:0,min:0,max:5,if:{style:["physical"]}},transmission:{type:"slider",default:0,min:0,max:1,if:{style:["physical"]}},depthPacking:{type:"select",default:"BasicDepthPacking",select:["BasicDepthPacking","RGBADepthPacking"],if:{style:["depth"]}},map:[{type:"map",if:{style:["basic","depth","lambert","matcap","phong","points","physical","standard","toon"]}}],matcap:{type:"map",if:{style:["matcap"]}},alphaMap:{type:"map",promode:!0,if:{style:["basic","depth","lambert","matcap","phong","physical","points","standard","toon"]}},bumpMap:{type:"map",promode:!0,if:{style:["matcap","normal","phong","physical","standard","toon"]}},bumpScale:{type:"slider",default:1,min:0,max:2,promode:!0,if:{style:["matcap","normal","phong","physical","standard","toon"]}},clearcoatNormalMap:{type:"map",promode:!0,if:{style:["physical"]}},clearcoatNormalScale:{type:"vector2",default:[1,1],promode:!0,if:{style:["physical"]}},displacementMap:{type:"map",promode:!0,if:{style:["depth","matcap","normal","phong","physical","standard","toon"]}},displacementScale:{type:"slider",default:1,min:0,max:2,promode:!0,if:{style:["depth","matcap","normal","phong","physical","standard","toon"]}},emissiveMap:{type:"map",promode:!0,if:{style:["lambert","phong","physical","standard","toon"]}},metalnessMap:{type:"map",promode:!0,if:{style:["physical","standard"]}},roughnessMap:{type:"map",promode:!0,if:{style:["physical","standard"]}},specularMap:{type:"map",promode:!0,if:{style:["basic","lambert","phong"]}},thicknessMap:{type:"map",promode:!0,if:{style:["physical"]}},transmissionMap:{type:"map",promode:!0,if:{style:["physical"]}},aoMap:{type:"map",promode:!0,if:{style:["basic","lambert","phong","physical","standard","toon"]}},envMap:{type:"map",promode:!0,if:{style:["basic","lambert","phong","physical","standard"]}},lightMap:{type:"map",promode:!0,if:{style:["basic","lambert","phong","physical","standard","toon"]}},normalMap:{type:"map",if:{style:["matcap","normal","phong","physical","standard","toon"]}},side:{type:"select",default:"FrontSide",select:Ye,if:{style:["basic","depth","lambert","matcap","normal","phong","physical","standard","toon"]}}},icon:"",color:"rgb(165, 243, 0)",dependencies:["geometry"]},W.register("material",Ke);class Ze{init(t){this.backend=t.isObject3D?t:new e.Object3D,this.backend.traverse((e=>{e.castShadow=this.entity.castShadow})),this.backend.traverse((e=>{e.receiveShadow=this.entity.receiveShadow}))}dispose(){}enable(){this.entity&&this.backend&&this.entity.add(this.backend)}disable(){this.entity&&this.backend&&this.entity.remove(this.backend)}toJSON(){}}Ze.config={multiple:!0,icon:"",color:"#F7DB63"},W.register("mesh",Ze),"undefined"!=typeof window&&(window.__ONSIGHT__?console.warn("Multiple instances of Onsight being imported"):window.__ONSIGHT__="0.0.3");export{b as APP_STATES,oe as App,R as AssetManager,u as BACKENDS,De as BasicLine,je as BasicWireBox,Fe as BasicWireframe,w as CAMERA_SCALE,x as CAMERA_START_DISTANCE,v as CAMERA_START_HEIGHT,M as CameraUtils,xe as CapsuleGeometry,W as ComponentManager,ve as CylinderGeometry,g as ENTITY_FLAGS,m as ENTITY_TYPES,se as Entity3D,le as EntityPool,_ as EntityUtils,Be as FatLine,Te as FatWireBox,Ie as FatWireframe,me as GeometryUtils,_e as GpuPickerPass,k as MathUtils,ie as Object3D,F as ObjectUtils,Se as PrismGeometry,re as Project,we as RenderUtils,y as SCENE_TYPES,ge as SVGBuilder,ne as Scene3D,ce as Script,Ve as SkyObject,I as Strings,z as System,p as VERSION,de as Vectors,f as WORLD_TYPES,ae as World3D};
