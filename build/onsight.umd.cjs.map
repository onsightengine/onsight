{"version":3,"file":"onsight.umd.cjs","sources":["../src/three/utils/CameraUtils.js","../src/core/Maths.js","../src/core/System.js","../src/three/utils/ObjectUtils.js","../src/core/Strings.js","../src/app/AssetManager.js","../src/project/ComponentManager.js","../src/project/scene3d/Object3D.js","../src/project/scene3d/Entity3D.js","../src/project/scene3d/Scene3D.js","../src/project/scene3d/World3D.js","../src/three/utils/EntityUtils.js","../src/project/Project.js","../src/app/App.js","../src/app/EntityPool.js","../src/core/ColorEye.js","../src/core/Vectors.js","../src/project/scene3d/builders/SVGBuilder.js","../src/three/geometry/CapsuleGeometry.js","../src/three/geometry/CylinderGeometry.js","../src/three/geometry/PrismGeometry.js","../src/three/geometry/Wireframe.js","../src/three/objects/HelperObject.js","../src/three/objects/SkyObject.js","../src/three/shaders/DepthShader.js","../src/three/passes/DepthPass.js","../src/three/passes/GpuPickerPass.js","../src/three/passes/OutlinePass.js","../src/three/passes/WireframePass.js","../src/three/shaders/TexturedShader.js","../src/three/shaders/XRayShader.js","../src/three/utils/GeometryUtils.js","../src/three/utils/RenderUtils.js","../src/project/scene3d/components/Camera.js","../src/project/scene3d/components/Geometry.js","../src/project/scene3d/components/Light.js","../src/project/scene3d/components/Material.js","../src/project/scene3d/components/Mesh.js","../src/Onsight.js"],"sourcesContent":["/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Camera Utility Functions\n//      Creation\n//          createOrthographic          Create an orthographic camera\n//          createPerspective           Create a perspective camera\n//      Update\n//          updateCamera                Calls appropriate update function for camera\n//          updatePerspective           Updates a perspective camera's frustum\n//          updateOrthographic          Updates an orthographic camera's frustum\n//      Space\n//          screenPoint                 Projects a point from 3D world space coordinates to 2D screen coordinates\n//          worldPoint                  Unprojects a point from 2D screen coordinates to 3D world space coordinates\n//      Utils\n//          fitCameraToObject           Fits camera to object\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\n///// Constants\n\nexport const CAMERA_SCALE = 0.01;\nexport const CAMERA_START_DISTANCE = 5;\nexport const CAMERA_START_HEIGHT = 0;\n\n///// Local Variables\n\nconst _raycaster = new THREE.Raycaster();\n\n///// Class\n\nclass CameraUtils {\n\n    //////////////////// Creation\n\n    /**\n     * Create an orthographic camera\n     * @param {Number} camWidth DOM element width camera is rendering into\n     * @param {Number} camHeight DOM element height camera is rendering into\n     * @param {*} fitType Camera should fit pixels to 'none' (no scaling) or 'width' or 'height'\n     * @param {*} desiredSize If fitting to width or height, camera will zoom to fit this number of pizels\n     * @returns Three.js camera object\n     */\n    static createOrthographic(camWidth, camHeight, fitType = 'none', desiredSize = 0) {\n        // Create camera\n        const camera = new THREE.OrthographicCamera(0, 1, 1, 0, -1000, 1000);\n\n        // Add custom properties\n        camera.desiredSize = desiredSize;\n        camera.fitType = fitType;\n\n        // Set starting location\n        camera.position.set(0, CAMERA_START_HEIGHT, CAMERA_START_DISTANCE);\n        camera.lookAt(0, CAMERA_START_HEIGHT, 0);\n\n        CameraUtils.updateOrthographic(camera, camWidth, camHeight);\n        return camera;\n    }\n\n    /**\n     * Create a perspective camera\n     * @param {Number} camWidth DOM element width camera is rendering into\n     * @param {Number} camHeight DOM element height camera is rendering into\n     * @param {Boolean} fixedSize Should camera maintain size no matter the height of the DOM element?\n     * @returns Three.js camera object\n     */\n    static createPerspective(camWidth, camHeight, fixedSize = true) {\n        // Create camera\n        const camera = new THREE.PerspectiveCamera(\n            58.10,      // fov = Field Of View\n            1,          // aspect ratio (dummy value)\n            0.01,       // near clipping plane\n            1000,       // far clipping plane\n        );\n\n        // Remember these initial values\n        camera.tanFOV = Math.tan(((Math.PI / 180) * camera.fov / 2));\n        camera.windowHeight = (fixedSize) ? 1000 /* i.e. 1000 pixels tall, nice round number */ : 0;\n        camera.fixedSize = fixedSize;\n\n        // Move the camera back so we can view the scene\n        camera.position.set(0, CAMERA_START_HEIGHT, CAMERA_START_DISTANCE);\n        camera.lookAt(0, CAMERA_START_HEIGHT, 0);\n\n        CameraUtils.updatePerspective(camera, camWidth, camHeight);\n        return camera;\n    }\n\n    //////////////////// Update\n\n    static updateCamera(camera, camWidth, camHeight) {\n        if (camera.isPerspectiveCamera) CameraUtils.updatePerspective(camera, camWidth, camHeight);\n        if (camera.isOrthographicCamera) CameraUtils.updateOrthographic(camera, camWidth, camHeight);\n    }\n\n    /** Updates a perspective camera's frustum */\n    static updatePerspective(camera, camWidth, camHeight) {\n        if (camera.fixedSize) {\n            camera.fov = (360 / Math.PI) * Math.atan(camera.tanFOV * (camHeight / camera.windowHeight));\n        }\n\n        camera.aspect = camWidth / camHeight;                               // Set the camera's aspect ratio\n        camera.updateProjectionMatrix();                                    // Update the camera's frustum\n    }\n\n    /** Updates an orthographic camera's frustum */\n    static updateOrthographic(camera, camWidth, camHeight) {\n        // Check for added camera properties\n        let fit = camera.fitType;\n        let size = 0;\n        if (camera.desiredSize) {\n            size = camera.desiredSize;\n        } else {\n            fit = 'none';\n        }\n\n        // Figure out target camera width / height\n        let aspectWidth = 1.0;\n        let aspectHeight = 1.0;\n        let width = size;\n        let height = size;\n        if (fit === 'none') {\n            width = camWidth * CAMERA_SCALE * 0.5;\n            height = camHeight * CAMERA_SCALE * 0.5;\n        } else if (fit === 'width') {\n            aspectHeight = camHeight / camWidth;\n        } else if (fit === 'height') {\n            aspectWidth = camWidth / camHeight;\n        }\n\n        // Calculate new frustum, update camera\n        camera.left =    - width / aspectWidth / 2;\n        camera.right =     width / aspectWidth / 2;\n        camera.top =       height * aspectHeight / 2;\n        camera.bottom =  - height * aspectHeight / 2;\n        camera.updateProjectionMatrix();\n    }\n\n    //////////////////// Space\n\n    /** Projects a point from 3D world space coordinates to 2D screen coordinates */\n    static screenPoint(pointInWorld, camera) {\n        if (! camera || ! camera.isCamera) {\n            console.warn(`CameraUtils.screenPoint: No camera provided!`);\n            return new THREE.Vector3();\n        }\n        return new THREE.Vector3.copy(pointInWorld).project(camera);\n    }\n\n    /** Unprojects a point from 2D screen coordinates to 3D world space coordinates */\n    static worldPoint(pointOnScreen, camera, lookTarget = new THREE.Vector3(), facingPlane = 'xy') {\n        if (! camera || ! camera.isCamera) {\n            console.warn(`CameraUtils.worldPoint: No camera provided!`);\n            return new THREE.Vector3();\n        }\n\n        ///// Distance to Z (as a percentage, interpolate between the near and far plane points)\n\n        // let z = pointOnScreen.z ?? 0;\n        // const nearVector = new THREE.Vector3(pointOnScreen.x, pointOnScreen.y, 0).unproject(camera);\n        // const farVector = new THREE.Vector3(pointOnScreen.x, pointOnScreen.y, 1.0).unproject(camera);\n        // const zTotal = Math.abs(nearVector.z) + Math.abs(farVector.z);\n        // const zPercent = Math.abs(nearVector.z / zTotal);\n        // const nx = nearVector.x + (zPercent * (farVector.x - nearVector.x));\n        // const ny = nearVector.y + (zPercent * (farVector.y - nearVector.y));\n        // const nz = nearVector.z + (zPercent * (farVector.z - nearVector.z));\n        // return new THREE.Vector3(nx, ny, 0);//nz);\n\n        ///// Raycaster Method\n\n        // Rotate to 'facingPlane'\n        const planeGeometry = new THREE.PlaneGeometry(100000000, 100000000, 2, 2);\n        switch (facingPlane.toLowerCase()) {\n            case 'yz': planeGeometry.rotateY(Math.PI / 2); break;\n            case 'xz': planeGeometry.rotateX(Math.PI / 2); break;\n            default: /* 'xy' */ ;\n        }\n        planeGeometry.translate(lookTarget.x, lookTarget.y, lookTarget.z);\n\n        // Mesh\n        const planeMaterial = new THREE.MeshBasicMaterial({ side: THREE.DoubleSide });\n        const plane = new THREE.Mesh(planeGeometry, planeMaterial);\n\n        // Cast ray from camera\n        _raycaster.setFromCamera(pointOnScreen, camera);\n        if (camera.isOrthographicCamera) {\n            _raycaster.ray.origin.set(pointOnScreen.x, pointOnScreen.y, - camera.far).unproject(camera);\n        }\n        const planeIntersects = _raycaster.intersectObject(plane, true);\n\n        // Clean up\n        planeGeometry.dispose();\n        planeMaterial.dispose();\n\n        return (planeIntersects.length > 0) ? planeIntersects[0].point : false;\n    }\n\n    //////////////////// Utils\n\n    static distanceToFitObject(camera, object, offset = 1.25) {\n\n    }\n\n    /* Fits camera to object */\n    static fitCameraToObject(camera, object, controls = null, offset = 1.25) {\n        const boundingBox = new THREE.Box3();\n        boundingBox.setFromObject(object);\n        const center = boundingBox.getCenter(new THREE.Vector3());\n        const size = boundingBox.getSize(new THREE.Vector3());\n\n        // // #OPTION 0\n        const fitDepthDistance = size.z / (2.0 * Math.atan(Math.PI * camera.fov / 360));\n        const fitHeightDistance = Math.max(fitDepthDistance, size.y / (2.0 * Math.atan(Math.PI * camera.fov / 360)));\n        const fitWidthDistance = (size.x / (2.7 * Math.atan(Math.PI * camera.fov / 360))) / camera.aspect;\n        const distance = offset * Math.max(fitHeightDistance, fitWidthDistance);\n\n        // // #OPTION 1\n        // const maxSize = Math.max(size.x, size.y, size.z);\n        // const fitHeightDistance = maxSize / (2.0 * Math.atan(Math.PI * camera.fov / 360));\n        // const fitWidthDistance = fitHeightDistance / camera.aspect;\n        // const distance = offset * Math.max(fitHeightDistance, fitWidthDistance);\n\n        // // #OPTION 2\n        // const fov = camera.fov * (Math.PI / 180);\n        // const distance = offset * Math.abs(maxSize / 4 * Math.tan(fov * 2));\n\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n\n        camera.position.copy(center);\n        // camera.position.y += distance / 2;\n        camera.position.z += distance;\n        camera.lookAt(center);\n\n        if (controls) {\n            controls.maxDistance = distance * 10;\n            controls.target.copy(center);\n            controls.update();\n        }\n    }\n\n}\n\nexport { CameraUtils };","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/mrdoob/three.js/blob/dev/src/math/MathUtils.js\n//\n/////////////////////////////////////////////////////////////////////////////////////\n//\n//  Angles\n//      radiansToDegrees        Converts radians to degrees\n//      degreesToRadians        Converts degrees to radians\n//  Common\n//      clamp                   Clamps a number between min and max\n//      damp                    Time based linear interpolation\n//      lerp                    Linear interpolation\n//      roundTo                 Returns a number rounded to 'decimalPlaces'\n//  Fuzzy Comparison\n//      fuzzyFloat              Compare two floats\n//      fuzzyVector             Compare two Vector3\n//      fuzzyQuaternion         Compare two Quaternion\n//  Geometry\n//      isPowerOfTwo            Checks if a number is power of 2\n//  Number Functions\n//      addCommas               Formats a number into a string with commas added for large numbers\n//      countDecimals           Counts significant decimal places\n//      isNumber                Checks if 'number' is a valid number\n//  Polygon\n//      lineCollision           Check if two lines are intersecting\n//      lineRectCollision       Checks if a line is intersecting a rectangle\n//  Random\n//      randomFloat             Random float from min (inclusive) to max (exclusive)\n//      randomInt               Random integer from min (inclusive) to max (exclusive)\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass Maths {\n\n    //////////////////// Angles\n\n    static radiansToDegrees(radians) {\n        return radians * (180 / Math.PI);\n    }\n\n    static degreesToRadians(degrees) {\n        return (Math.PI / 180) * degrees;\n    }\n\n    //////////////////// Fuzzy Compare\n\n    /** Compares two floats to see if they're almost the same */\n    static fuzzyFloat(a, b, tolerance = 0.001) {\n        return ((a < (b + tolerance)) && (a > (b - tolerance)));\n    }\n\n    static fuzzyVector(a, b, tolerance = 0.001) {\n        if (Maths.fuzzyFloat(a.x, b.x, tolerance) === false) return false;\n        if (Maths.fuzzyFloat(a.y, b.y, tolerance) === false) return false;\n        if (Maths.fuzzyFloat(a.z, b.z, tolerance) === false) return false;\n        return true;\n    }\n\n    static fuzzyQuaternion(a, b, tolerance = 0.001) {\n        if (Maths.fuzzyVector(a, b, tolerance) === false) return false;\n        if (Maths.fuzzyFloat(a.w, b.w, tolerance) === false) return false;\n        return true;\n    }\n\n    //////////////////// Common\n\n    /** Clamps a number between min and max */\n    static clamp(number, min, max) {\n        number = Number(number);\n        if (number < min) number = min;\n        if (number > max) number = max;\n        return number;\n    }\n\n    /** http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/ */\n    static damp(x, y, lambda, dt) {\n\t    return Maths.lerp(x, y, 1 - Math.exp(- lambda * dt));\n    }\n\n    /** https://en.wikipedia.org/wiki/Linear_interpolation */\n    static lerp(x, y, t) {\n\t    return (1 - t) * x + t * y;\n    }\n\n    /** Returns a number rounded to 'decimalPlaces' */\n    static roundTo(number, decimalPlaces = 0) {\n        const shift = Math.pow(10, decimalPlaces);\n        return Math.round(number * shift) / shift;\n    }\n\n    ///// Geometry\n\n    /** Checks if a number is power of 2 */\n    static isPowerOfTwo(value) {\n        return (value & (value - 1)) === 0 && value !== 0;\n    }\n\n    //////////////////// Numbers\n\n    /** Formats a number into a string with commas added for large numbers (i.e. 12000 => 12,000) */\n    static addCommas(number) {\n        return number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n    }\n\n    /** Counts significant decimal places */\n    static countDecimals(number) {\n        if (Math.floor(number.valueOf()) === number.valueOf()) return 0;\n        return number.toString().split('.')[1].length || 0;\n    }\n\n    /** Checks if 'number' is a valid number */\n    static isNumber(number) {\n        return (typeof number === 'number' && ! Number.isNaN(number) && Number.isFinite(number));\n    }\n\n    //////////////////// Polygon\n\n    /** Check if two lines are intersecting */\n    static lineCollision(x1, y1, x2, y2, x3, y3, x4, y4) {\n        // Calculate the direction of the lines\n        let denom = ((y4 - y3) * (x2 - x1)) - ((x4 - x3) * (y2 - y1));\n        if (Maths.fuzzyFloat(denom, 0, 0.0000001)) return false;\n        let ua = (((x4 - x3) * (y1 - y3)) - ((y4 - y3) * (x1 - x3))) / denom;\n        let ub = (((x2 - x1) * (y1 - y3)) - ((y2 - y1) * (x1 - x3))) / denom;\n\n        if ((ua >= 0) && (ua <= 1) && (ub >= 0) && (ub <= 1)) {\n            // If intersecting, the intersection points are\n            // \t\tcrossX = x1 + (uA * (x2 - x1));\n            // \t\tcrossY = y1 + (uA * (y2 - y1));\n            return true;\n        }\n        return false;\n    }\n\n    /** Checks if a line is intersecting a rectangle */\n    static lineRectCollision(x1, y1, x2, y2, left, top, right, down) {\n        const rectLeft =    Maths.lineCollision(x1, y1, x2, y2, left, top, left, down);\n        const rectRight =   Maths.lineCollision(x1, y1, x2, y2, right, top, right, down);\n        const rectTop =     Maths.lineCollision(x1, y1, x2, y2, left, top, right, top);\n        const rectDown =    Maths.lineCollision(x1, y1, x2, y2, left, down, right, down);\n        return (rectLeft || rectRight || rectTop || rectDown);\n    }\n\n    //////////////////// Random\n\n    /** Random float from min (inclusive) to max (exclusive) */\n    static randomFloat(min, max) {\n\t    return min + Math.random() * (max - min);\n    }\n\n    /** Random integer from min (inclusive) to max (exclusive), randomInt(0, 3) => expected output: 0, 1 or 2 */\n    static randomInt(min = 0, max = 1) {\n        return min + Math.floor(Math.random() * (max - min));\n    }\n\n}\n\nexport { Maths };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Array Functions\n//      arrayFromArguments      Converts argument list to Array\n//      isIterable              Checks if a javascript object is iterable\n//      isObject                Checks if a variable is an object (and not null / array / function)\n//\n//  File System Functions\n//      save                    Saves an URL object to the host system\n//\n//  OS Functions\n//      detectOS                Attempts to detect current operating system\n//      fullscreen              Go fullscreen on DOM 'element'\n//      metaKeyOS               Returns character string of shortcut key depending on OS\n//\n//  System Functions\n//      sleep                   Pauses app for specified milliseconds\n//      waitForObject           Wait for getter to return an object that exists, then call a function\n//\n//  ------------------------------------------------------\n//\n//  Unicode Symbols\n//      Alt (Option)    ⌥ OR ⎇     Apple       \n//      Ctrl (Control)  ⌃\n//      Cmd (Command)   ⌘\n//      Shift           ⇧           Space      ' '  &nbsp;\n//      Caps Lock       ⇪           Degrees     °   &deg;\n//      Fn                          Search      ⌕\n//      Escape          ⎋           Target      ⌖\n//      Delete          ⌦           Touch       ⍝\n//      Backspace       ⌫\n//      Enter           ↵\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass System {\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Array Functions\n    ///////////////\n\n    /** Returns argument list as array, or if array was passed as argument, returns array */\n    static arrayFromArguments() {\n        if (arguments.length === 1 && Array.isArray(arguments[0])) {\n            return arguments[0];\n        } else {\n\t\t    return Array.from(arguments);\n        }\n    }\n\n    /** Checks if a javascript object is iterable */\n    static isIterable(obj) {\n        if (obj == null) return false;\n        return typeof obj[Symbol.iterator] === 'function';\n    }\n\n    /** Checks if a variable is an object (and not null / array / function) */\n    static isObject(variable) {\n        return (typeof variable === 'object' && ! Array.isArray(variable) && variable !== null);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   File System\n    ///////////////\n\n    static save(url, filename) {\n        try {\n            const link = document.createElement('a');\n            document.body.appendChild(link);                    // Firefox requires link to be in body\n            link.href = url;\n            link.download = filename || 'data.json';\n            link.click(); // link.dispatchEvent(new MouseEvent('click'));\n            setTimeout(function() {\n                document.body.removeChild(link);\n                window.URL.revokeObjectURL(url);\n            }, 0);\n        } catch (e) {\n            console.warn(e);\n            return;\n        }\n    }\n\n    static saveBuffer(buffer, filename, optionalType = { type: 'application/octet-stream' }) {\n        let url = URL.createObjectURL(new Blob([ buffer ], { type: optionalType }));\n        System.save(url, filename);\n    }\n\n    static saveImage(imageUrl, filename) {\n        System.save(imageUrl, filename);\n    }\n\n    static saveString(text, filename) {\n        let url = URL.createObjectURL(new Blob([ text ], { type: 'text/plain' }));\n        System.save(url, filename);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   OS (Operating System)\n    ///////////////\n\n    /** Attempts to detect current operating system */\n    static detectOS() {\n        let systems = {\n            Android:    [ 'android' ],\n            iOS:        [ 'iphone', 'ipad', 'ipod', 'ios' ],\n            Linux:      [ 'linux', 'x11', 'wayland' ],\n            Mac:        [ 'mac', 'darwin', 'osx', 'os x' ],\n            Win:        [ 'win' ],\n        }\n\n        let userAgent = window.navigator.userAgent;                 // String\n        let userAgentData = window.navigator.userAgentData;         // Object, not implemented in Safari (3/11/22)\n\n        let platform = (userAgentData) ? userAgentData.platform : userAgent;\n        platform = platform.toLowerCase();\n\n        for (let key in systems) {\n            for (let os of systems[key]) {\n                if (platform.indexOf(os) !== -1) return key;\n            }\n        }\n\n        return 'Unknown OS';\n    }\n\n    /** Go fullscreen on DOM 'element' */\n    static fullscreen(element) {\n        let isFullscreen =\n            document.fullscreenElement ||\n            document.mozFullScreenElement ||\n            document.webkitFullscreenElement ||\n            document.msFullscreenElement;\n\n        if (isFullscreen) {\n            let el = document;\n            let cancelMethod = el.cancelFullScreen || el.exitFullscreen || el.webkitCancelFullScreen || el.webkitExitFullscreen || el.mozCancelFullScreen;\n            cancelMethod.call(el);\n        } else {\n            let el = element ?? document.body;\n            let requestMethod = el.requestFullScreen || el.webkitRequestFullScreen || el.mozRequestFullScreen || el.msRequestFullScreen;\n            requestMethod.call(el);\n        }\n    }\n\n    /** Returns character string of shortcut key depending on OS */\n    static metaKeyOS() {\n        let system = System.detectOS();\n        if (system === 'Mac') {\n            return '⌘';\n        } else {\n            return '⌃'; /* 'Ctrl' */\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   System\n    ///////////////\n\n    /** Pauses app for specified milliseconds */\n    static sleep(ms) {\n        const beginTime = Date.now();\n        let endTime = beginTime;\n        while (endTime - beginTime < ms) {\n            endTime = Date.now();\n        }\n    }\n\n    /** Wait for 'getter' to return an object that exists, then call a function */\n    static waitForObject(operationName, getter, callback, checkFrequencyMs = 1000, timeoutMs = false, alertMs = 5000) {\n        let startTimeMs = Date.now();\n        let alertTimeMs = Date.now();\n        (function loopSearch() {\n            if (alertMs && Date.now() - alertTimeMs > alertMs) {\n                console.info(`Still waiting on operation: ${operationName}`);\n                alertTimeMs = Date.now();\n            }\n\n            if (getter() !== undefined && getter() !== null) {\n                callback();\n                return;\n            } else {\n                setTimeout(function() {\n                    if (timeoutMs && Date.now() - startTimeMs > timeoutMs) return;\n                    loopSearch();\n                }, checkFrequencyMs);\n            }\n        })();\n    }\n\n}\n\nexport { System };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Object3D Utility Functions\n//      allowSelection              Check if object should be allowed to be interacted with in Editor\n//      checkTransforms             Compares array of objects to see if transforms are all the same\n//      clearObject                 Completely deletes object (including geomtries/materials), and all of it's children\n//      clearMaterial               Disposes of a material\n//      computeBounds               Finds bounding box of an object or array of objects\n//      computeCenter               Finds center point of an object or array of objects\n//      containsObject              Checks array to see if it has an object (by Object3D.uuid)\n//      copyLocalTransform          Copies local transform from one object to another\n//      copyWorldTransform          Copies world transform from one object to another\n//      countGeometry               Counts total geometris in an object or array of objects\n//      flattenGroup                Puts an object's children into parent, deletes original containing object\n//      resetTransform              Normalize / zero / reset object 3D transform\n//      tempObjectRemoval           Removes temporary children, returns removed objects as array\n//      tempObjectRestore           Restores temporary children\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { Maths } from '../../core/Maths.js';\nimport { System } from '../../core/System.js';\n\n///// Local Variables\n\nconst _boxCenter = new THREE.Box3();\nconst _tempMatrix = new THREE.Matrix4();\nconst _tempVector = new THREE.Vector3();\nconst _startQuaternion = new THREE.Quaternion();\nconst _tempQuaternion = new THREE.Quaternion();\nconst _testQuaternion = new THREE.Quaternion();\n\nconst _objPosition = new THREE.Vector3();\nconst _objQuaternion = new THREE.Quaternion();\nconst _objRotation = new THREE.Euler();\nconst _objScale = new THREE.Vector3();\n\n///// Class\n\nclass ObjectUtils {\n\n    /** Check if object should be allowed to be interacted with in Editor */\n    static allowSelection(object) {\n        let allowSelect = true;\n        if (object.userData) {\n            if (object.userData.flagLocked) allowSelect = false;\n            if (object.userData.flagTemp) allowSelect = false;\n        }\n        return allowSelect;\n    }\n\n    /** Compares array of objects to see if transforms are all the same */\n    static checkTransforms(array) {\n        if (array.length <= 1) return true;\n        array[0].getWorldQuaternion(_startQuaternion);\n        for (let i = 1; i < array.length; i++) {\n            array[i].getWorldQuaternion(_testQuaternion);\n            if (Maths.fuzzyQuaternion(_startQuaternion, _testQuaternion) === false) return false;\n        }\n        return true;\n    }\n\n    /** Completely deletes 'object' (including geomtries and materials), and all of it's children */\n    static clearObject(object, removeFromParent = true) {\n        if (! object) return;\n        while (object.children.length > 0) {\n            ObjectUtils.clearObject(object.children[0], true);\n        }\n        if (object.geometry) object.geometry.dispose();\n        if (object.material) ObjectUtils.clearMaterial(object.material);\n        ObjectUtils.resetTransform(object);\n        if (removeFromParent) object.removeFromParent();\n    }\n\n    /** Disposes of a material */\n    static clearMaterial(materials) {\n        if (System.isIterable(materials) !== true) materials = [ materials ];\n        for (let i = 0, il = materials.length; i < il; i++) {\n            let material = materials[i];\n            Object.keys(material).forEach(prop => { /* in case of map, bumpMap, normalMap, envMap, etc. */\n                if (! material[prop]) return;\n                if (typeof material[prop].dispose === 'function') material[prop].dispose();\n            });\n            material.dispose();\n        }\n    }\n\n    /** Finds bounding box of an object or array of objects  (recursively adding children meshes) */\n    static computeBounds(groupOrArray, targetBox, checkIfSingleGeometry = false) {\n        if (targetBox === undefined || targetBox.isBox3 !== true) targetBox = new THREE.Box3();\n        const objects = (System.isIterable(groupOrArray)) ? groupOrArray : [ groupOrArray ];\n        targetBox.makeEmpty();\n\n        // If object contains single geometry, we might want un-rotated box\n        if (checkIfSingleGeometry && ObjectUtils.countGeometry(groupOrArray) === 1) {\n            let geomObject = undefined;\n            objects.forEach((object) => { object.traverse((child) => { if (child.geometry) geomObject = child; }); });\n\n            // Use unrotated geometry for box\n            if (geomObject && geomObject.geometry) {\n                geomObject.geometry.computeBoundingBox();\n                targetBox.copy(geomObject.geometry.boundingBox);\n                geomObject.matrixWorld.decompose(_objPosition, _objQuaternion, _objScale);\n                _objQuaternion.identity();\n                _tempMatrix.compose(_objPosition, _objQuaternion, _objScale);\n                targetBox.applyMatrix4(_tempMatrix);\n                return targetBox;\n            }\n        }\n\n        // Expand using geometries\n        objects.forEach(object => targetBox.expandByObject(object));\n        return targetBox;\n    }\n\n    /** Finds center point of an object or array of objects (recursively adding children meshes) */\n    static computeCenter(groupOrArray, targetVec3) {\n        const objects = (System.isIterable(groupOrArray)) ? groupOrArray : [ groupOrArray ];\n\n        // Get Bounds\n        ObjectUtils.computeBounds(objects, _boxCenter);\n\n        // If still empty, no geometries were found, use object locations\n        if (_boxCenter.isEmpty()) {\n            for (let object of objects) {\n                object.getWorldPosition(_tempVector);\n                _boxCenter.expandByPoint(_tempVector);\n            }\n        }\n\n        _boxCenter.getCenter(targetVec3);\n        return targetVec3;\n    }\n\n    /** Checks array to see if it has an object (by Object3D.uuid) */\n    static containsObject(arrayOfObjects, object) {\n        if (object && object.uuid && System.isIterable(arrayOfObjects)) {\n            for (let i = 0; i < arrayOfObjects.length; i++) {\n                if (arrayOfObjects[i].uuid === object.uuid) return true;\n            }\n        }\n        return false;\n    }\n\n    /** Copies local transform from one object to another */\n    static copyLocalTransform(source, target, updateMatrix = true) {\n        source.updateMatrix();\n        source.matrix.decompose(target.position, _tempQuaternion, target.scale);\n        target.rotation.setFromQuaternion(_tempQuaternion, undefined, false);\n        if (updateMatrix) target.updateMatrix();\n    }\n\n    /** Copies world transform from one object to another */\n    static copyWorldTransform(source, target, updateMatrix = true) {\n        source.updateWorldMatrix(true, true);\n        source.matrixWorld.decompose(target.position, _tempQuaternion, target.scale);\n        target.rotation.setFromQuaternion(_tempQuaternion, undefined, false);\n        if (updateMatrix) target.updateMatrix();\n    }\n\n    /** Counts total geometris in an object or array of objects */\n    static countGeometry(groupOrArray) {\n        const objects = (System.isIterable(groupOrArray)) ? groupOrArray : [ groupOrArray ];\n        let geometryCount = 0;\n        objects.forEach((object) => {\n            object.traverse((child) => { if (child.geometry) geometryCount++; });\n        });\n        return geometryCount;\n    }\n\n    /** Puts 'group' (object with children) children back into parent (usually a scene), deletes 'group' */\n    static flattenGroup(group) {\n        if (! group) return;\n        if (! group.parent) return;\n        while (group.children) group.parent.attach(group.children[0]);\n        ObjectUtils.clearObject(group, true);\n    }\n\n    /** Normalize / zero / reset object 3D transform */\n    static resetTransform(object) {\n        object.position.set(0, 0, 0);\n        object.rotation.set(0, 0, 0);\n        object.scale.set(1, 1, 1);\n    }\n\n    /** Removes temporary children, returns removed objects as array */\n    static tempObjectRemoval(object) {\n        const tempObjectArray = [];\n        object.traverse((child) => {\n            if (child.userData && child.userData.flagTemp) {\n                tempObjectArray.push({ object: child, parent: child.parent });\n            }\n        });\n        for (let i = 0; i < tempObjectArray.length; i++) {\n            tempObjectArray[i].object.removeFromParent();\n        }\n        return tempObjectArray;\n    }\n\n    /** Restores temporary children */\n    static tempObjectRestore(tempObjectArray) {\n        for (let i = 0; i < tempObjectArray.length; i++) {\n            let tempObject = tempObjectArray[i];\n            tempObject.parent.attach(tempObject.object);\n        }\n    }\n\n}\n\nexport { ObjectUtils };","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  String Functions\n//      addSpaces           Adds spaces between 'CamelCaseWords' -> 'Camel Case Words'\n//      capitalize          Capitalizes the first letter of every word in a string\n//      countDigits         Counts number of digits in a number\n//      nameFromUrl         Returns name from file url\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass Strings {\n\n    /** Adds spaces between 'CamelCaseWords' -> 'Camel Case Words' */\n    static addSpaces(string) {\n        return String(string).replace(/([A-Z])/g, ' $1').trim();\n    }\n\n    /** Capitalizes the first letter of every word in a string */\n    static capitalize(string) {\n        const words = String(string).split(' ');\n        for (let i = 0; i < words.length; i++) {\n            words[i] = words[i][0].toUpperCase() + words[i].substring(1);\n        }\n        return words.join(' ');\n    }\n\n    /** Counts number of digits in a number */\n    static countDigits(number) {\n        return parseFloat(number).toString().length;\n    }\n\n    /** Returns name from file url */\n    static nameFromUrl(url, capitalize = true) {\n        let imageName = new String(url.replace(/^.*[\\\\\\/]/, ''));       // Filename only\n        imageName = imageName.replace(/\\.[^/.]+$/, \"\");                 // Remove extension\n        if (capitalize) imageName = Strings.capitalize(imageName);\n        return imageName;\n    }\n\n}\n\nexport { Strings };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nimport * as THREE from 'three';\n\nimport { mergeBufferGeometries } from 'three/addons/utils/BufferGeometryUtils.js';\n\nimport { Maths } from '../core/Maths.js';\nimport { Strings } from '../core/Strings.js';\nimport { System } from '../core/System.js';\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////\tAssets\n/////////////////////////////////////////////////////////////////////////////////////\n\n// Assets, Scripts\nlet scripts = {};\n\n// Assets, Geometry\nlet shapes = {};\nlet geometries = {};\n\n// Assets, Material\nlet images = {};\nlet textures = {};\nlet materials = {};\n\n// Assets, Other\nlet animations = {};\nlet skeletons = {};\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////\tAsset Manager\n/////////////////////////////////////////////////////////////////////////////////////\n\nconst _textureCache = {};\nconst _textureLoader = new THREE.TextureLoader();\n\nclass AssetManager {\n\n    static getLibrary(name) {\n        switch (name) {\n            case 'scripts': return scripts;\n            case 'shapes': return shapes;\n            case 'geometries': return geometries;\n            case 'images': return images;\n            case 'textures': return textures;\n            case 'materials': return materials;\n            case 'animations': return animations;\n            case 'skeletons': return skeletons;\n        }\n        return null;\n    }\n\n    //////////////////// Geometry\n\n    static addGeometry(geometry) {\n\t\tif (geometry && geometry.isBufferGeometry) {\n            // Ensure geometry has a name\n            if (! geometry.name || geometry.name === '') {\n                geometry.name = geometry.constructor.name;\n            }\n\n            // Force 'BufferGeometry' type (strip ExtrudeGeometry, TextGeometry, etc...)\n            const bufferGeometry = mergeBufferGeometries([ geometry ]);\n            bufferGeometry.name = geometry.name;\n            bufferGeometry.uuid = geometry.uuid;\n            geometry.dispose();\n            geometry = bufferGeometry;\n\n            // Add to 'geometries'\n            geometries[geometry.uuid] = geometry;\n        }\n\t\treturn geometry;\n\t}\n\n\tstatic getGeometry(uuid) {\n        if (uuid && uuid.isBufferGeometry) uuid = uuid.uuid;\n\t\treturn geometries[uuid];\n\t}\n\n\tstatic removeGeometry(geometry, dispose = true) {\n\t\tif (geometries[geometry.uuid]) {\n\t\t\tif (dispose) geometries[geometry.uuid].dispose();\n\t\t\tdelete geometries[geometry.uuid];\n\t\t}\n\t}\n\n    //////////////////// Material\n\n\tstatic addMaterial(material) {\n\t\tif (material && material.isMaterial) {\n\t\t    let materialArray = (Array.isArray(material)) ? material : [ material ];\n            for (let i = 0; i < materialArray.length; i++) {\n                materials[material.uuid] = materialArray[i];\n            }\n        }\n\t\treturn material;\n\t}\n\n\tstatic getMaterial(uuid) {\n        if (uuid && uuid.isMaterial) uuid = uuid.uuid;\n\t\treturn materials[uuid];\n\t}\n\n\tstatic removeMaterial(material, dispose = true) {\n\t\tif (materials[material.uuid]) {\n\t\t\tif (dispose) materials[material.uuid].dispose();\n\t\t\tdelete materials[material.uuid];\n\t\t}\n\t}\n\n    //////////////////// Texture\n\n    static loadTexture(url, onLoad = undefined) {\n        if (! url || url === '') return null;\n\n        // Check if trying to add an Image already in AssetManager\n        let resolvedUrl = THREE.DefaultLoadingManager.resolveURL(url);\n        if (_textureCache[resolvedUrl]) {\n            console.log(`AssetManager.loadTexture: Duplicate image!`);\n            return _textureCache[resolvedUrl];\n        }\n\n        // Load Texture\n\t\tconst texture = _textureLoader.load(url, onTextureLoaded, onTextureLoadError);\n        _textureCache[resolvedUrl] = texture;\n\n        function onTextureLoaded(newTexture) {\n            // Name from source filename\n            newTexture.name = Strings.nameFromUrl(newTexture.image.src);\n\n            // !!!!! DEBUG: Pixel Access\n            // const canvas = document.createElement('canvas');\n            // canvas.width = newTexture.image.width;\n            // canvas.height = newTexture.image.height;\n            // const context = canvas.getContext('2d');\n            // context.drawImage(newTexture.image, 0, 0);\n            // const data = context.getImageData(0, 0, canvas.width, canvas.height);\n            // console.info(data);\n\n            // // Texture Properties\n            // newTexture.encoding = THREE.sRGBEncoding;\n            // newTexture.magFilter = THREE.NearestFilter;\n            // newTexture.minFilter = THREE.NearestFilter;\n            newTexture.premultiplyAlpha = true;\n            newTexture.wrapS = THREE.RepeatWrapping;\n            newTexture.wrapT = THREE.RepeatWrapping;\n\n            // System.waitForObject('AssetManager.loadTexture: Waiting on renderer', () => return window.getRenderer, () => {\n            //     // Reduces bluriness of mipmaps\n            //     const maxAnisotropy = window.getRenderer().capabilities.getMaxAnisotropy(); /* Mac M1 === 16 */\n            //     newTexture.anisotropy = maxAnisotropy;\n            //     newTexture.mipmaps = [];\n            //     newTexture.generateMipmaps = true;\n            // });\n\n            // On Load Callback\n            if (onLoad && typeof onLoad === 'function') onLoad(newTexture);\n        }\n\n        function onTextureLoadError() {\n            if (_textureCache[resolvedUrl] && _textureCache[resolvedUrl].isTexture) {\n                _textureCache[resolvedUrl].dispose();\n            }\n            delete _textureCache[resolvedUrl];\n        }\n\n\t\treturn texture;\n    }\n\n\tstatic addTexture(texture) {\n        if (texture && texture.isTexture) {\n            textures[texture.uuid] = texture;\n        }\n\t\treturn texture;\n\t}\n\n\tstatic getTexture(uuid) {\n        if (uuid && uuid.isTexture) uuid = uuid.uuid;\n\t\treturn textures[uuid];\n\t}\n\n\tstatic removeTexture(texture, dispose = true) {\n\t\tif (textures[texture.uuid]) {\n            for (let url in _textureCache) {\n                if (_textureCache[url] && _textureCache[url].isTexture && _textureCache[url].uuid === texture.uuid) {\n                    delete _textureCache[url];\n                }\n            }\n\t\t\tif (dispose) textures[texture.uuid].dispose();\n\t\t\tdelete textures[texture.uuid];\n\t\t}\n\t}\n\n    //////////////////// JSON\n\n    static clear() {\n\n        function clearLibrary(library) {\n            for (let uuid in library) {\n                const element = library[uuid];\n                if (element && element.dispose && typeof element.dispose === 'function') element.dispose();\n                delete library[uuid];\n            }\n        }\n\n        clearLibrary(materials);\n        clearLibrary(textures);\n        clearLibrary(images);\n        clearLibrary(geometries);\n        clearLibrary(shapes);\n        clearLibrary(animations);\n\n    }\n\n    static fromJSON(json) {\n\n        // Clear Assets\n        AssetManager.clear()\n\n        // Load Assets\n\t\tconst objectLoader = new THREE.ObjectLoader();\n\t\tanimations = objectLoader.parseAnimations(json.animations);\n\t\tshapes = objectLoader.parseShapes(json.shapes);\n\t\tgeometries = objectLoader.parseGeometries(json.geometries, shapes);\n\t\timages = objectLoader.parseImages(json.images);\n\t\ttextures = objectLoader.parseTextures(json.textures, images);\n\t\tmaterials = objectLoader.parseMaterials(json.materials, textures);\n\n    }\n\n    static toJSON(meta) {\n\n        const json = {};\n\n        if (! meta) meta = {};\n        if (! meta.shapes) meta.shapes = {};\n        if (! meta.geometries) meta.geometries = {};\n        if (! meta.images) meta.images = {};\n        if (! meta.textures) meta.textures = {};\n        if (! meta.materials) meta.materials = {};\n        if (! meta.animations) meta.animations = {};\n        if (! meta.skeletons) meta.skeletons = {};\n\n        const stopRoot = {\n            images: {},\n            textures: {},\n            materials: {},\n        };\n\n        // Geometries\n        for (let uuid in geometries) {\n            const geometry = geometries[uuid];\n            if (! meta.geometries[geometry.uuid]) meta.geometries[geometry.uuid] = geometry.toJSON(meta);\n\n            // Shapes\n            if (geometry.parameters && geometry.parameters.shapes) {\n                let shapes = geometry.parameters.shapes;\n                if (Array.isArray(shapes) !== true) shapes = [ shapes ];\n                for (let i = 0, l = shapes.length; i < l; i++) {\n                    const shape = shapes[i];\n                    if (! meta.shapes[shape.uuid]) meta.shapes[shape.uuid] = shape.toJSON(meta);\n                }\n            }\n        }\n\n        // Materials\n        for (let uuid in materials) {\n            const material = materials[uuid];\n            if (! meta.materials[material.uuid]) meta.materials[material.uuid] = material.toJSON(stopRoot);\n        }\n\n        // Textures\n        for (let uuid in textures) {\n            const texture = textures[uuid];\n            if (! meta.textures[texture.uuid]) meta.textures[texture.uuid] = texture.toJSON(meta);\n        }\n\n        // Add 'meta' caches to 'json' as arrays\n        for (const library in meta) {\n            const valueArray = [];\n            for (const key in meta[library]) {\n                const data = meta[library][key];\n                delete data.metadata;\n                valueArray.push(data);\n            }\n            if (valueArray.length > 0) json[library] = valueArray;\n        }\n\n        return json;\n    }\n\n}\n\n// Exports\n\nexport { AssetManager };","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nimport * as THREE from 'three';\n\nimport { Maths } from '../core/Maths.js';\nimport { Strings } from '../core/Strings.js';\nimport { System } from '../core/System.js';\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Component Manager\n/////////////////////////////////////////////////////////////////////////////////////\n\nconst _registered = {};\n\nclass ComponentManager {\n\n    /** Returns class definition of a registered type */\n    static registered(type = '') {\n        const ComponentClass = _registered[type];\n        if (! ComponentClass) console.warn(`ComponentManager.registered: Component '${type}' not registered'`);\n        return ComponentClass;\n    }\n\n    /** Returns an array of all types registered with Component Manager */\n    static registeredTypes() {\n        return Object.keys(_registered);\n    }\n\n    /** Registers a component type with the internal Component Manager () */\n    static register(type = '', ComponentClass) {\n\n        // Check for Component Type\n        type = type.toLowerCase();\n        if (_registered[type]) return console.warn(`ComponentManager.register: Component '${type}' already registered`);\n        if (! System.isObject(ComponentClass.config)) ComponentClass.config = {};\n        if (! System.isObject(ComponentClass.config.schema)) ComponentClass.config.schema = {};\n\n        // Ensure Default Values for Properties\n        const schema = ComponentClass.config.schema;\n        for (const key in schema) {\n            const prop = Array.isArray(schema[key]) ? schema[key] : [ schema[key] ];\n            for (let i = 0, l = prop.length; i < l; i++) {\n                let property = prop[i];\n                if (property.type === undefined) {\n                    console.warn(`ComponentManager.register(): All schema properties require a 'type' value`);\n                } else if (property.type === 'divider') {\n                    //\n                    // NOTHING: Type is for formatting only!\n                    //\n                } else if (property.default === undefined) {\n                    switch (property.type) {\n                        case 'select':      property.default = null;            break;\n                        case 'number':      property.default = 0;               break;\n                        case 'int':         property.default = 0;               break;\n                        case 'angle':       property.default = 0;               break;\n                        case 'slider':      property.default = 0;               break;\n                        case 'boolean':     property.default = false;           break;\n                        case 'color':       property.default = 0xffffff;        break;\n                        case 'asset':       property.default = null;            break;\n                        case 'image':       property.default = null;            break;\n                        // ------ !!!!! TODO: Below Needs Incorporate Inspector ------\n                        case 'scroller':    property.default = 0;               break;\n                        case 'variable':    property.default = [ 0, 0 ];        break;\n                        case 'array':       property.default = [];              break;\n                        case 'vector2':     property.default = [ 0, 0 ];        break;\n                        case 'vector3':     property.default = [ 0, 0, 0 ];     break;\n                        case 'vector4':     property.default = [ 0, 0, 0, 0 ];  break;\n                        case 'string':      property.default = '';              break;\n                        case 'shape':       property.default = null;            break;\n                        case 'script':      property.default = '';              break;\n                        default:\n                            console.warn(`ComponentManager.register(): Unknown property type: '${property.type}'`);\n                    }\n                } else if (property.proMode !== undefined) {\n                    property.promode = property.proMode;\n                }\n            }\n        }\n\n        // Add Constructor (sets type)\n        class Component extends ComponentClass {\n            constructor() {\n                super();\n\n                // Prototype\n                this.isComponent = true;\n\n                // Properties\n                this.enabled = true;\n                this.tag = '';\n                this.type = type;\n\n                // Owner\n                this.entity = null;\n            }\n\n            init(data) {\n                super.init(data);\n            }\n\n            dispose() {\n                super.dispose();\n            }\n\n            disable() {\n                this.enabled = false;\n                super.disable();\n            }\n\n            enable() {\n                this.enabled = true;\n                super.enable();\n            }\n\n            // Returns stored default schema (saved when Component was registered). Pass in starting data by key, value pair\n            defaultData(/* key, value, key, value, etc. */) {\n                let data = {};\n\n                // Set Schema Defaults\n                for (let i = 0, l = arguments.length; i < l; i += 2) data[arguments[i]] = arguments[i+1];\n                ComponentManager.sanitizeData(data, ComponentClass.config.schema);\n\n                // Base Properties\n                data.base = {\n                    enabled: \tthis.enabled,\n                    tag:\t\tthis.tag,\n                    type:\t\tthis.type,\n                };\n                return data;\n            }\n        }\n\n        // Register Component\n        _registered[type] = Component;\n    }\n\n    static sanitizeData(data, schema) {\n\n        ///// PARSE KEYS\n        for (let schemaKey in schema) {\n\n            // Get Value as Array (which is a list of properties with different 'if' conditions)\n            let itemArray = schema[schemaKey];\n            if (System.isIterable(itemArray) !== true) itemArray = [ schema[schemaKey] ];\n\n            // Process each item in property array, check if that we satisfy 'if' condition\n            let itemToInclude = undefined;\n            for (let i = 0; i < itemArray.length; i++) {\n                let item = itemArray[i];\n\n                ///// FORMATTING ONLY\n                if (item.type === 'divider') continue;\n\n                ///// PROCESS 'IF'\n                if (item.if !== undefined) {\n                    let allConditions = true;\n\n                    for (let ifKey in item.if) {\n                        let ifArray = Array.isArray(item.if[ifKey]) ? item.if[ifKey] : [];\n                        let eachCondition = false;\n                        for (let j = 0; j < ifArray.length; j++) {\n                            if (data[ifKey] === ifArray[j]) {\n                                eachCondition = true;\n                                break;\n                            }\n                        }\n                        if (eachCondition !== true) {\n                            allConditions = false;\n                            break;\n                        }\n                    }\n\n                    if (allConditions !== true) {\n                        // DO NOT INCLUDE\n                        continue;\n                    }\n                }\n\n                itemToInclude = item;\n                break;\n            }\n\n            // Make sure we have the property\n            if (itemToInclude !== undefined) {\n                if (data[schemaKey] === undefined) {\n                    data[schemaKey] = itemToInclude.default;\n                }\n\n                if (Maths.isNumber(data[schemaKey])) {\n                    let min = itemToInclude['min'] ?? -Infinity;\n                    let max = itemToInclude['max'] ??  Infinity;\n                    if (data[schemaKey] < min) data[schemaKey] = min;\n                    if (data[schemaKey] > max) data[schemaKey] = max;\n                }\n\n            // Make sure we don't have the property\n            } else {\n                delete data[schemaKey];\n            }\n\n        } // end for\n\n    } // end function\n\n    /** Removes data from 'newData' if conditions from schema on 'newData' don't match 'oldData' */\n    static stripData(oldData, newData, schema) {\n\n        ///// PARSE KEYS\n        for (let schemaKey in schema) {\n            let matchedConditions = false;\n\n            // Get Value as Array (list of properties with different 'if' conditions)\n            let itemArray = schema[schemaKey];\n            if (System.isIterable(itemArray) !== true) itemArray = [ schema[schemaKey] ];\n\n            // Process each item in property array, check if that we satisfy 'if' condition\n            for (let i = 0; i < itemArray.length; i++) {\n                let item = itemArray[i];\n\n                ///// FORMATTING ONLY\n                if (item.type === 'divider') continue;\n\n                ///// PROCESS 'IF'\n                if (item.if !== undefined) {\n                    let allConditions = true;\n\n                    for (let ifKey in item.if) {\n                        let ifArray = Array.isArray(item.if[ifKey]) ? item.if[ifKey] : [];\n                        let eachCondition = false;\n                        let conditionOne = false, conditionTwo = false;\n\n                        for (let j = 0; j < ifArray.length; j++) {\n                            if (oldData[ifKey] === ifArray[j]) conditionOne = true;\n                            if (newData[ifKey] === ifArray[j]) conditionTwo = true;\n                            if (conditionOne && conditionTwo) {\n                                eachCondition = true;\n                                break;\n                            }\n                        }\n\n                        if (eachCondition !== true) {\n                            allConditions = false;\n                            break;\n                        }\n                    }\n\n                    if (allConditions !== true) {\n                        // DO NOT INCLUDE\n                        continue;\n                    }\n                }\n\n                matchedConditions = true;\n                break;\n            }\n\n            // Both data sets matched same condition\n            if (matchedConditions !== true) {\n                delete newData[schemaKey];\n            }\n\n        }\t// end for\n\n    } // end function\n\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////\tExports\n/////////////////////////////////////////////////////////////////////////////////////\n\nexport { ComponentManager };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/mrdoob/three.js/blob/master/src/core/Object3D.js\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { ObjectUtils } from '../../three/utils/ObjectUtils.js';\n\n///// Local Variables\n\nconst _m1 = new THREE.Matrix4();\nconst _camPosition = new THREE.Vector3();\nconst _camQuaternion = new THREE.Quaternion();\nconst _camScale = new THREE.Vector3();\nconst _lookQuaternion = new THREE.Quaternion();\nconst _lookUpVector = new THREE.Vector3();\nconst _objPosition = new THREE.Vector3();\nconst _objScale = new THREE.Vector3();\nconst _objQuaternion = new THREE.Quaternion();\nconst _parentQuaternion = new THREE.Quaternion();\nconst _parentQuaternionInv = new THREE.Quaternion();\nconst _rotationDirection = new THREE.Euler();\nconst _rotationQuaternion = new THREE.Quaternion();\nconst _worldPosition = new THREE.Vector3();\nconst _worldQuaternion = new THREE.Quaternion();\nconst _worldScale = new THREE.Vector3();\nconst _worldRotation = new THREE.Euler();\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Object3D.constructor() Overload\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass Object3D extends THREE.Object3D {\n\n    constructor() {\n        super();\n\n        const rotation = new THREE.Euler();\n        const quaternion = new THREE.Quaternion();\n\n        ///// ORIGINAL from: THREE.Object3D.constructor()\n        // function onRotationChange() { quaternion.setFromEuler(rotation, false); }\n        // function onQuaternionChange() { rotation.setFromQuaternion(quaternion, undefined, false); }\n        ///// NEW\n        function onRotationChange() { /* EMPTY, updates in updateMatrix() */ }\n        function onQuaternionChange() { /* EMPTY, updates in updateMatrix() */ }\n        /////\n\n        rotation._onChange(onRotationChange);\n        quaternion._onChange(onQuaternionChange);\n\n        Object.defineProperties(this, {\n            rotation: { configurable: true, enumerable: true, value: rotation },\n            quaternion: { configurable: true, enumerable: true, value: quaternion },\n        });\n\n    } // end ctor\n\n    //////////////////// Copy\n\n    copy(source, recursive = true) {\n        // Base three.js Object3D.copy()\n        super.copy(source, recursive);\n\n        // Override copy transform, apply new updateMAtrix()\n        ObjectUtils.copyLocalTransform(source, this, false /* updateMatrix */);\n        this.lookAtCamera = source.lookAtCamera;\n        this.updateMatrix();\n\n        return this;\n    }\n\n    //////////////////// Get World Quaternion\n\n    /** Extracts World Quaternion without rotating to camera, good for Viewport Transform Group! :) */\n    getWorldQuaternion(targetQuaternion, ignoreBillboard = true) {\n        let beforeBillboard = this.lookAtCamera;\n        if (ignoreBillboard && beforeBillboard) {\n            this.lookAtCamera = false;\n        }\n        this.updateWorldMatrix(true, false);\n        this.matrixWorld.decompose(_objPosition, targetQuaternion, _objScale);\n        if (ignoreBillboard && beforeBillboard) {\n            this.lookAtCamera = true;\n            this.updateWorldMatrix(true, false);\n        }\n        return targetQuaternion;\n    }\n\n    //////////////////// Custom Attach\n\n    safeAttach(object) {\n        if (! object || ! object.isObject3D) return;\n        object.getWorldQuaternion(_worldQuaternion);\n        object.getWorldScale(_worldScale);\n        object.getWorldPosition(_worldPosition);\n        object.removeFromParent();\n        object.rotation.copy(_worldRotation.setFromQuaternion(_worldQuaternion, undefined, false));\n        object.scale.copy(_worldScale);\n        object.position.copy(_worldPosition);\n        this.attach(object);\n    }\n\n    //////////////////// Update Matrix\n\n    updateMatrix() {\n\n        // Should look at camera?\n        const camera = window.activeCamera;\n        let lookAtCamera = this.lookAtCamera && camera && ! this.isScene;\n        if (lookAtCamera && this.parent && this.parent.isObject3D) {\n            this.traverseAncestors((parent) => { if (parent.lookAtCamera) lookAtCamera = false; });\n        }\n\n        // Look at Camera\n        if (lookAtCamera) {\n\n            // Gather Transform Data\n            camera.matrixWorld.decompose(_camPosition, _camQuaternion, _camScale);\n            this.matrixWorld.decompose(_worldPosition, _worldQuaternion, _worldScale);\n            _rotationQuaternion.setFromEuler(this.rotation, false);\n\n            // // Match Camera Plane\n            // if (camera.isOrthographicCamera) {\n\n                // Apply Rotations\n                this.quaternion.copy(_camQuaternion);                           // Start with rotate to camera\n                this.quaternion.multiply(_rotationQuaternion);                  // Add in 'rotation' property\n\n            // // Look Directly at Camera\n            // } else if (camera.isPerspectiveCamera) {\n            //\n            //     // !!!!! OPTION 1: Look at Camera\n            //     _lookUpVector.copy(camera.up).applyQuaternion(_camQuaternion);  // Rotate up vector by cam rotation\n            //     _m1.lookAt(_camPosition, _worldPosition, _lookUpVector);        // Create look at matrix\n            //     _lookQuaternion.setFromRotationMatrix(_m1);\n            //\n            //     // !!!!! OPTION 2: Only 'Y' Axis\n            //     // _rotationDirection.set(0, 0, 0);\n            //     // _rotationDirection.y = Math.atan2((_camPosition.x - _worldPosition.x), (_camPosition.z - _worldPosition.z));\n            //     // _lookQuaternion.setFromEuler(_rotationDirection, false);\n            //\n            //     // Apply Rotations\n            //     this.quaternion.copy(_lookQuaternion);                          // Start with rotate to camera\n            //     this.quaternion.multiply(_rotationQuaternion);                  // Add in 'rotation' property\n            //\n            // }\n\n            // Subtract parent rotation\n            if (this.parent && this.parent.isObject3D) {\n                this.parent.getWorldQuaternion(_parentQuaternion, false);\n                _parentQuaternionInv.copy(_parentQuaternion).invert();\n                this.quaternion.multiply(_parentQuaternionInv);\n            }\n\n        // Use 'rotation' Property Only\n        } else {\n            this.quaternion.setFromEuler(this.rotation, false);\n        }\n\n        ///// ORIGINAL from: THREE.Object3D.updateMatrix()\n\n        this.matrix.compose(this.position, this.quaternion, this.scale);\n        this.matrixWorldNeedsUpdate = true;\n\n        /////\n    }\n\n}\n\nexport { Object3D };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Object3D.userData\n//      Flags\n//          userData.flagLocked         Locked in Editor (do not allow selection, deletion, or duplication)\n//          userData.flagTemp           Object not really in scene, for temporary (editor) use only\n//\n//      Internal\n//          userData.entityId           Used for transform controls to link a transform clone with original entity\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { ComponentManager } from '../ComponentManager.js'\nimport { Object3D } from './Object3D.js';\nimport { Strings } from '../../core/Strings.js'\n\nimport { ENTITY_FLAGS } from '../../Onsight.js';\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Entity3D\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass Entity3D extends Object3D {\n\n    constructor(name = '') {\n        super();\n\n        // Prototype\n        this.isEntity = true;\n        this.isEntity3D = true;\n\n        // Properties, Basic\n        this.name = name;\n        this.type = 'Entity3D';\n        this.project = null;\n\n        // Properties, More\n        this.enabled = true;\n        this.castShadow = true;                 // inherited from THREE.Object3D\n        this.receiveShadow = true;              // inherited from THREE.Object3D\n        this.lookAtCamera = false;              // implemented in ONE.Object3D.updateMatrix overload\n\n        // Collections\n        this.components = [];                   // Geometry, material, audio, light, etc.\n\n        // Flags\n        this.setFlag(ENTITY_FLAGS.LOCKED, false);\n\n    } // end ctor\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Info\n    ////////////////////\n\n    getReducedType() {\n        if (this.isScene) return 'Scene';\n        return (this.components.length === 1) ? Strings.capitalize(this.components[0].type.toLowerCase()) : 'Entity3D';\n    }\n\n    getFlag(flag) {\n        return Boolean(this.userData[flag]);\n    }\n\n    setFlag(flag, value) {\n        this.userData[flag] = value;\n        return this;\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Components\n    ////////////////////\n\n    /** Adds component of 'type' using 'data' object */\n    addComponent(type, data = {}, includeDependencies = true) {\n        const ComponentClass = ComponentManager.registered(type);\n        if (ComponentClass === undefined) return undefined;\n\n        // Config\n        const config = ComponentClass.config;\n\n        // Create new component if 'multiple' allowed, or doesn't have component\n        let component = this.getComponent(type);\n        if (ComponentClass.config.multiple || component === undefined) {\n            component = new ComponentClass();\n            this.components.push(component);\n\n        // Otherwise overwrite existing component of type\n        } else {\n            component.disable();\n        }\n\n        // Check for and add Dependent Components\n        if (config.dependencies && includeDependencies) {\n            const dependencies = config.dependencies;\n            for (let i = 0, len = dependencies.length; i < len; i++) {\n                if (this.getComponent(dependencies[i]) === undefined) {\n                    this.addComponent(dependencies[i], {}, false);\n                }\n            }\n        }\n\n        // Initialize Component\n        component.entity = this;\n        ComponentManager.sanitizeData(data, config.schema);\n        if (component.init) component.init(data);\n        if (this.enabled) component.enable();\n\n        // Return reference to newly added component\n        return component;\n    }\n\n    /** Get component by type (string, required) and tag (string, optional - in case of multiple components with type) */\n    getComponent(type, tag /* optional */) {\n        if (tag === undefined) return this.getComponentByProperty('type', type);\n        let components = this.getComponentsWithProperties('type', type, 'tag', tag);\n        if (components.length > 0) return components[0];\n        return undefined;\n    }\n\n    getComponentByTag(tag) {\n        return this.getComponentByProperty('tag', tag);\n    }\n\n    getComponentByType(type) {\n        return this.getComponentByProperty('type', type);\n    }\n\n    /** Returns first component found with property === value */\n    getComponentByProperty(property, value) {\n        for (let i = 0, l = this.components.length; i < l; i++) {\n            const component = this.components[i];\n            if (component[property] === value) return component;\n        }\n        return undefined;\n    }\n\n    /** Returns all components that match all key, value pairs */\n    getComponentsWithProperties(/* key, value, key, value, etc. */) {\n        let components = [];\n        for (let i = 0, il = this.components.length; i < il; i++) {\n            const component = this.components[i];\n\n            let hasProperties = true;\n            for (let j = 0, jl = arguments.length; j < jl; j += 2) {\n                if (component[arguments[j]] !== arguments[j+1]) {\n                    hasProperties = false;\n                    break;\n                }\n            }\n            if (hasProperties) components.push(component);\n        }\n        return components;\n    }\n\n    removeComponent(component) {\n        let index = this.components.indexOf(component);\n        if (index !== -1) {\n            this.components.splice(index, 1);\n            component.disable();\n            component.dispose();\n        } else {\n            console.warn(`Entity3D.removeComponent: Component ${component.uuid}, type '${component.type}' not found`);\n        }\n        return component;\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Children\n    ////////////////////\n\n    getEntities() {\n        const filteredChildren = [];\n        const children = this.children;\n        for (let i = 0; i < children.length; i++) {\n            if (children[i].isEntity3D) filteredChildren.push(children[i]);\n        }\n        return filteredChildren;\n    }\n\n    getEntityById(id) {\n        return this.getEntityByProperty('id', id);\n    }\n\n    getEntityByName(name) {\n        return this.getEntityByProperty('name', name);\n    }\n\n    getEntityByUuid(uuid) {\n        return this.getEntityByProperty('uuid', uuid);\n    }\n\n    getEntityByProperty(name, value) {\n        if (this[name] === value) return this;\n        const entities = this.getEntities();\n        for (let i = 0, l = entities.length; i < l; i++) {\n            const child = entities[i];\n            const entity = child.getEntityByProperty(name, value);\n            if (entity) return entity;\n        }\n        return undefined;\n    }\n\n    traverseEntities(callback) {\n        this.traverse(child => { if (child.isEntity3D) callback(child); });\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Copy / Clone\n    ////////////////////\n\n    cloneEntity(recursive = true) {\n        return new this.constructor().copyEntity(this, recursive);\n    }\n\n    copyEntity(source, recursive = true) {\n        // Remove Existing Children / Components\n        this.destroy();\n\n        // Backend THREE.Object3D.copy()\n        super.copy(source, false);\n\n        // Copy Properties, Basic\n        this.name = source.name;\n\n        // Copy Properties, More\n        this.enabled = source.enabled;\n        this.castShadow = source.castShadow;\n        this.receiveShadow = source.receiveShadow;\n        this.lookAtCamera = source.lookAtCamera;\n\n        // Copy Flags\n        for (let flag in ENTITY_FLAGS) {\n            this.setFlag(ENTITY_FLAGS[flag], source.getFlag(ENTITY_FLAGS[flag]));\n        }\n\n        // Copy Components\n        const components = source.components;\n        for (let i = 0; i < components.length; i++) {\n            const component = components[i];\n\n            // Add Component Clone\n            let clonedComponent = this.addComponent(component.type, component.toJSON(), false);\n\n            // Copy Component Properties\n            clonedComponent.tag = component.tag;\n            if (component.enabled !== true) clonedComponent.disable();\n        }\n\n        // Copy Children\n        if (recursive === true) {\n            const entities = source.getEntities();\n            for (let i = 0; i < entities.length; i++) {\n                const entity = entities[i];\n                this.add(entity.cloneEntity(true));\n            }\n        }\n\n        return this;\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Destroy\n    ////////////////////\n\n    destroy() {\n        let children = this.getEntities();\n        for (let i = 0; i < children.length; i++) {\n            if (this.project) this.project.removeEntity(children[i]);\n            children[i].destroy();\n        }\n\n        while (this.components.length > 0) {\n            let component = this.components[0];\n            this.removeComponent(component);\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   JSON\n    ////////////////////\n\n    fromJSON(json) {\n        const data = json.object;\n\n        ///// Entity3D Properties\n\n        this.uuid = data.uuid;\n        if (data.name !== undefined) this.name = data.name;\n\n        if (data.enabled !== undefined) this.enabled = data.enabled;\n        if (data.castShadow !== undefined) this.castShadow = data.castShadow;\n        if (data.receiveShadow !== undefined) this.receiveShadow = data.receiveShadow;\n        if (data.lookAtCamera !== undefined) this.lookAtCamera = data.lookAtCamera;\n\n        ///// Object3D Properties\n\n        if (data.position !== undefined) this.position.fromArray(data.position);\n        if (data.rotation !== undefined) this.rotation.fromArray(data.rotation);\n        if (data.scale !== undefined) this.scale.fromArray(data.scale);\n\n        if (data.matrixAutoUpdate !== undefined) this.matrixAutoUpdate = data.matrixAutoUpdate;\n        if (data.layers !== undefined) this.layers.mask = data.layers;\n\n        if (data.visible !== undefined) this.visible = data.visible;\n        if (data.frustumCulled !== undefined) this.frustumCulled = data.frustumCulled;\n        if (data.renderOrder !== undefined) this.renderOrder = data.renderOrder;\n        if (data.userData !== undefined) this.userData = data.userData;\n\n        ///// Flags\n\n        for (let key in json.object.flags) {\n            this.setFlag(key, json.object.flags[key]);\n        }\n\n        ///// Components\n\n        for (let i = 0; i < json.object.components.length; i++) {\n            let componentData = json.object.components[i];\n\n            // Add Component\n            if (componentData && componentData.base && componentData.base.type) {\n                const component = this.addComponent(componentData.base.type, componentData, false);\n\n                // Properties\n                if (componentData.enabled === false) component.disable();\n                component.tag = componentData.base.tag;\n            }\n        }\n\n        ///// Children\n\n        if (data.entities !== undefined) {\n            for (let i = 0; i < json.object.entities.length; i++) {\n                const entity = new Entity3D().fromJSON(json.object.entities[i]);\n                this.add(entity);\n            }\n        }\n\n        this.updateMatrix();\n\n        return this;\n    }\n\n    toJSON() {\n        const json = {\n            object: {\n                name: this.name,\n                type: this.type,\n                uuid: this.uuid,\n\n                components: [],\n                flags: {},\n            }\n        };\n\n        // Flags\n        for (let key in ENTITY_FLAGS) {\n            json.object.flags[key] = this.getFlag(key);\n        }\n\n        ///// Components\n\n        for (let i = 0; i < this.components.length; i++) {\n            json.object.components.push(this.components[i].toJSON());\n        }\n\n        ///// Entity3D Properties\n\n        json.object.enabled = this.enabled;\n        json.object.castShadow = this.castShadow;\n        json.object.receiveShadow = this.receiveShadow;\n        json.object.lookAtCamera = this.lookAtCamera;\n\n        ///// Object3D Properties\n\n        json.object.position  = this.position.toArray();\n        json.object.rotation = this.rotation.toArray();\n        json.object.scale = this.scale.toArray();\n\n        json.object.matrixAutoUpdate = this.matrixAutoUpdate;\n        json.object.layers = this.layers.mask;\n\n        if (this.visible === false) json.object.visible = false;\n        if (this.frustumCulled === false) json.object.frustumCulled = false;\n        if (this.renderOrder !== 0) json.object.renderOrder = this.renderOrder;\n        if (JSON.stringify(this.userData) !== '{}') json.object.userData = this.userData;\n\n        ///// Child Entities\n\n        let children = this.getEntities();\n        if (children.length > 0) {\n            json.object.entities = [];\n            for (let i = 0; i < children.length; i++) {\n                json.object.entities.push(children[i].toJSON());\n            }\n        }\n\n        return json;\n    }\n\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Exports\n/////////////////////////////////////////////////////////////////////////////////////\n\nexport { Entity3D };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nimport * as THREE from 'three';\n\nimport { AssetManager } from '../../app/AssetManager.js';\nimport { Entity3D } from './Entity3D.js';\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Scene3D\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass Scene3D extends Entity3D {\n\n    constructor(name = 'Start Scene') {\n        super();\n\n        // Prototype\n        this.isScene = true;                // Generic type (Scene), and also for THREE compatibility\n        this.isScene3D = true;\n\n        // Properties, Basic\n        this.name = name;\n        this.type = 'Scene3D';\n\n        // Properties, More (needed by THREE)\n        this.background = null;\n        this.environment = null;\n        this.fog = null;\n        this.overrideMaterial = null;\n        this.autoUpdate = true;             // checked by the renderer\n\n        // Shadow Plane (temp object)\n        this.shadowPlane = new THREE.Mesh(\n            new THREE.PlaneGeometry(100000, 100000),\n            new THREE.ShadowMaterial({ color: 0, transparent: true, opacity: 0.2, depthWrite: false })\n        );\n        this.shadowPlane.name = 'ShadowPlane';\n        this.shadowPlane.userData.flagTemp = true;\n        this.shadowPlane.rotation.x = - Math.PI / 2;\n        this.shadowPlane.castShadow = false;\n        this.shadowPlane.receiveShadow = true;\n        this.shadowPlane.visible = false;\n        this.add(this.shadowPlane);\n\n    } // end ctor\n\n    //////////////////// JSON\n\n    fromJSON(json) {\n        const data = json.object;\n\n        // Scene Properties\n        if (data.background !== undefined) {\n            if (Number.isInteger(data.background)) {\n                this.background = new THREE.Color(data.background);\n            } else {\n                this.background = AssetManager.getTexture(data.background);\n            }\n        }\n        if (data.environment !== undefined) this.environment = AssetManager.getTexture(data.environment);\n        if (data.fog !== undefined) {\n            if (data.fog.type === 'Fog') {\n                this.fog = new THREE.Fog(data.fog.color, data.fog.near, data.fog.far);\n            } else if (data.fog.type === 'FogExp2') {\n                this.fog = new THREE.FogExp2(data.fog.color, data.fog.density);\n            }\n        }\n\n        // Entity3D Properties\n        super.fromJSON(json);\n\n        return this;\n    }\n\n    toJSON() {\n        const json = super.toJSON();\n\n        if (this.fog) json.object.fog = this.fog.toJSON();\n\n        return json;\n    }\n\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Exports\n/////////////////////////////////////////////////////////////////////////////////////\n\nexport { Scene3D };","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   World3D\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass World3D {\n\n    constructor(name = 'World 1') {\n\n        // Prototype\n        this.isWorld = true;\n        this.isWorld3D = true;\n\n        // Properties, Basic\n        this.name = name;\n        this.type = 'World3D';\n        this.uuid = crypto.randomUUID();\n\n        // Properties, More\n        this.order = 0;\n        this.startScene = null;\n        this.lastEditorScene = null;\n\n        // Collections\n        this.sceneNodes = {};\n\n    } // end ctor\n\n    //////////////////// Scenes\n\n    addScene(scene) {\n        if (scene && scene.type === 'Scene3D') {\n            if (this.sceneNodes[scene.uuid]) {\n                console.warn(`World3D.addScene: Scene ('${scene.name}') already added`, scene);\n            } else {\n                this.sceneNodes[scene.uuid] = {\n                    uuid: scene.uuid,\n                    order: this.order ++,\n                };\n                if (! this.startScene) this.startScene = scene.uuid;\n                if (! this.lastEditorScene) this.lastEditorScene = scene.uuid;\n            }\n        } else {\n            console.error(`'World3D.addScene: Scene not of type 'Scene3D'`, scene);\n        }\n        return this;\n    }\n\n    //////////////////// JSON\n\n    fromJSON(json) {\n        const data = json.object;\n\n        this.name = data.name;\n        this.uuid = data.uuid;\n\n        this.order = data.order;\n        this.startScene = data.startScene;\n        this.lastEditorScene = data.lastEditorScene;\n\n        this.sceneNodes = data.sceneNodes;\n        return this;\n    }\n\n    toJSON() {\n        const json = {\n            object: {\n                name: this.name,\n                type: this.type,\n                uuid: this.uuid,\n\n                order: this.order,\n                startScene: this.startScene,\n                lastEditorScene: this.lastEditorScene,\n\n                sceneNodes: this.sceneNodes,\n            }\n        };\n        return json;\n    }\n\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Exports\n/////////////////////////////////////////////////////////////////////////////////////\n\nexport { World3D };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Entity Utility Functions\n//      combineEntityArrays         Adds entities from 'entityArrayToAdd' into 'intoEntityArray'\n//      commonEntity                Checks two arrays to see if they have any common entites\n//      compareArrayOfEntities      Checks if two entity arrays hold the same entities (i.e. are the same collections)\n//      containsEntity              Checks array to see if it has an entity (by entity.uuid)\n//      isImportant                 Checks if entity is important and should be protected\n//      parentEntity                Returns parent most entity that is not a Scene\n//      parentScene                 Returns parent scene of an entity\n//      removeEntityFromArray       Removes all instances of an entity (by uuid) from an array of entities\n//      uuidArray                   Converts entity array to UUID array\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass EntityUtils {\n\n    /** Adds entities from 'entityArrayToAdd' into 'intoEntityArray' */\n    static combineEntityArrays(intoEntityArray, entityArrayToAdd) {\n        for (let i = 0; i < entityArrayToAdd.length; i++) {\n            let entity = entityArrayToAdd[i];\n            if (EntityUtils.containsEntity(intoEntityArray, entity) === false) {\n                intoEntityArray.push(entity);\n            }\n        }\n    }\n\n    /** Checks two arrays to see if they have any common entites */\n    static commonEntity(entityArrayOne, entityArrayTwo) {\n        // if (entityArrayOne.isEntity) entityArrayOne = [ entityArrayOne ];\n        // if (entityArrayTwo.isEntity) entityArrayTwo = [ entityArrayTwo ];\n        for (let i = 0; i < entityArrayOne.length; i++) {\n            if (EntityUtils.containsEntity(entityArrayTwo, entityArrayOne[i]) === true) return true;\n        }\n        for (let i = 0; i < entityArrayTwo.length; i++) {\n            if (EntityUtils.containsEntity(entityArrayOne, entityArrayTwo[i]) === true) return true;\n        }\n        return false;\n    }\n\n    /** Checks if two entity arrays hold the same entities (i.e. are the same collections) */\n    static compareArrayOfEntities(entityArrayOne, entityArrayTwo) {\n        // if (entityArrayOne.isEntity) entityArrayOne = [ entityArrayOne ];\n        // if (entityArrayTwo.isEntity) entityArrayTwo = [ entityArrayTwo ];\n        for (let i = 0; i < entityArrayOne.length; i++) {\n            if (EntityUtils.containsEntity(entityArrayTwo, entityArrayOne[i]) === false) return false;\n        }\n        for (let i = 0; i < entityArrayTwo.length; i++) {\n            if (EntityUtils.containsEntity(entityArrayOne, entityArrayTwo[i]) === false) return false;\n        }\n        return true;\n    }\n\n    /** Checks array to see if it has an entity (by entity.uuid) */\n    static containsEntity(arrayOfEntities, entity) {\n        if (entity && entity.uuid && Array.isArray(arrayOfEntities)) {\n            for (let i = 0; i < arrayOfEntities.length; i++) {\n                if (arrayOfEntities[i].uuid === entity.uuid) return true;\n            }\n        }\n        return false;\n    }\n\n    /** Checks if entity is important and should be protected */\n    static isImportant(entity) {\n        let important = false;\n        important = important || entity.parent === null;                // Avoid deleting cameras / scenes\n        important = important || entity.isScene;                        // Avoid deleting scenes\n        important = important || entity.userData.flagLocked;            // Avoid entities with 'LOCKED' flag\n        return important;\n    }\n\n    /** Returns parent most entity that is not a Scene */\n    static parentEntity(entity, immediateOnly = false) {\n        while (entity && entity.parent && (entity.parent.isScene !== true)) {\n            entity = entity.parent;\n            if (immediateOnly && entity.isEntity) return entity;\n        }\n        return entity;\n    }\n\n    /** Returns parent scene of an entity */\n    static parentScene(entity) {\n        while (entity && entity.parent) {\n            entity = entity.parent;\n            if (entity.isScene) return entity;\n        }\n        return undefined;\n    }\n\n    /** Removes all instances of an entity (by uuid) from an array of entities */\n    static removeEntityFromArray(entityArray, entity) {\n        let length = entityArray.length;\n        for (let i = 0; i < length; i++) {\n            if (entityArray[i].uuid === entity.uuid) {\n                entityArray.splice(i, 1);\n                length = entityArray.length;\n            }\n        }\n    }\n\n    /** Converts entity array to UUID array */\n    static uuidArray(entityArray) {\n        let uuidArray = [];\n        for (let i = 0; i < entityArray.length; i++) {\n            uuidArray.push(entityArray[i].uuid);\n        }\n        return uuidArray;\n    }\n\n}\n\nexport { EntityUtils };","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nimport * as THREE from 'three';\n\nimport { REVISION } from '../Onsight.js';\nimport { SCENE_TYPES } from '../Onsight.js';\nimport { WORLD_TYPES } from '../Onsight.js';\n\nimport { Scene3D } from './scene3d/Scene3D.js';\nimport { World3D } from './scene3d/World3D.js';\n\nimport { AssetManager } from '../app/AssetManager.js';\nimport { EntityUtils } from '../three/utils/EntityUtils.js';\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Onsight Project\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass Project {\n\n    constructor(name = 'My Project') {\n\n        // Prototype\n        this.isProject = true;\n\n        // Members\n        this.name = name;\n        this.uuid = crypto.randomUUID();\n        this.type = 'Project';\n\n        // Collections\n        this.scripts = {};\n        this.scenes = {};\n        this.worlds = {};\n\n    } // end ctor\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Worlds\n    ////////////////////\n\n    addWorld(world) {\n        if (world && WORLD_TYPES[world.type]) {\n            this.worlds[world.uuid] = world;\n            if (this.activeWorldUuid == null) this.activeWorldUuid = world.uuid;\n        } else {\n            console.error(`Project.addWorld: World type (${world.type}) not a valid world type`, world);\n        }\n\n        return this;\n    }\n\n    getWorldByName(name) {\n        return this.getWorldByProperty('name', name);\n    }\n\n    getWorldByUuid(uuid) {\n        return this.worlds[uuid];\n    }\n\n    getWorldByProperty(property, value) {\n        for (const uuid in this.worlds) {\n            const world = this.worlds[uuid];\n            if (world[property] === value) return world;\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Scenes\n    ////////////////////\n\n    addScene(scene) {\n        if (scene && SCENE_TYPES[scene.type]) {\n            if (this.scenes[scene.uuid]) {\n                console.warn(`Project.addScene: Scene ('${scene.name}') already added`, scene);\n            } else {\n                this.scenes[scene.uuid] = scene;\n            }\n        } else {\n            console.error(`Project.addScene: Scene type (${scene.type}) not a valid scene type`, scene);\n        }\n\n        return this;\n    }\n\n    getFirstScene() {\n        let sceneList = Object.keys(this.scenes);\n        return (sceneList.length > 0) ? this.scenes[sceneList[0]] : null;\n    }\n\n    getSceneByName(name) {\n        return this.getSceneByProperty('name', name);\n    }\n\n    getSceneByUuid(uuid) {\n        return this.scenes[uuid];\n    }\n\n    getSceneByProperty(property, value) {\n        for (const uuid in this.scenes) {\n            const scene = this.scenes[uuid];\n            if (scene[property] === value) return scene;\n        }\n    }\n\n    removeScene(scene) {\n        if (scene.isScene !== true) return;\n\n        // Clear Entities\n        let entities = scene.getEntities();\n        for (let i = entities.length - 1; i >= 0; i--) {\n            this.removeEntity(entities[i], true);\n            entities[i].destroy();\n        }\n\n        // Remove from 'scenes'\n        delete this.scenes[scene.uuid];\n    }\n\n    traverseScenes(callback) {\n        for (let uuid in this.scenes) {\n            let scene = this.scenes[uuid];\n            scene.traverse(callback);\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Entities\n    ////////////////////\n\n    addEntity(entity, parent = undefined, index = -1, maintainWorldTransform = false) {\n        if (! entity) return;\n        if (index === undefined || index === null) index = -1;\n\n        if (entity.isObject3D) {\n            if (parent && parent.children && index !== -1) {\n                parent.children.splice(index, 0, entity);\n                entity.parent = parent;\n            } else {\n                let newParent = parent;\n                if (! newParent || ! newParent.isObject3D) {\n                    if (window.editor) newParent = window.editor.viewport.scene;\n                }\n                if (newParent && newParent.isObject3D) {\n                    if (maintainWorldTransform) {\n                        newParent.attach(entity);\n                    } else {\n                        newParent.add(entity);\n                    }\n                }\n            }\n        }\n\n        return this;\n    }\n\n    getEntityByUuid(uuid, searchAllScenes = false) {\n        let sceneList = [];\n        let activeScene = null;\n        if (window.editor) activeScene = window.editor.viewport.scene;\n\n        if (searchAllScenes) {\n            sceneList = Array.from(this.scenes);\n\n            // Put activeScene at front of sceneList\n            const fromIndex = sceneList.indexOf(activeScene);\n            const toIndex = 0;\n            if (activeScene && fromIndex !== -1) {\n                arr.splice(fromIndex, 1);\t\t\t\t\t\t// Remove activeScene from sceneList\n                arr.splice(toIndex, 0, activeScene);\t\t\t// Place at front\n            }\n        } else if (activeScene) {\n            sceneList.push(activeScene);\n        }\n\n        for (let i = 0; i < sceneList.length; i++) {\n            const entity = sceneList[i].getEntityByProperty('uuid', uuid);\n            if (entity) return entity;\n        }\n\n        return undefined;\n    }\n\n    moveEntity(entity, parent = undefined, before = undefined, index = -1) {\n        if (! entity) return;\n\n        parent = parent;\n        if ((! parent || ! parent.isObject3D) && window.editor) parent = window.editor.viewport.scene;\n        if (! parent || ! parent.isObject3D) return;\n\n        // parent.add(entity);\n        ///// OR\n        // parent.attach(entity);\n        ///// OR\n        parent.safeAttach(entity);\n\n        // If 'before' was supplied, find index of that entity\n        if (before) index = parent.children.indexOf(before);\n\n        // If desired array index was supplied, move entity to that index\n        if (index !== -1) {\n            parent.children.splice(index, 0, entity);\n            parent.children.pop();\n        }\n    }\n\n    /** Removes entity from Project, does not call 'destroy()' on Entity!! */\n    removeEntity(entity, forceDelete = false) {\n        if (! entity) return;\n\n        // Check for isScene, flags (BuiltIn, NoSelect, etc.)\n        if (! forceDelete && EntityUtils.isImportant(entity)) return;\n\n        // Remove entity from parent (i.e. out of Project)\n        if (entity.parent) entity.parent.remove(entity);\n    }\n\n    //////////////////// Scripts\n\n    addScript(entity, script) {\n        let key = entity.uuid;\n        if (! this.scripts[key]) this.scripts[key] = [];\n        this.scripts[key].push(script);\n        return this;\n    }\n\n    removeScript(entity, script) {\n        let key = entity.uuid;\n        if (! this.scripts[key]) return;\n        let index = this.scripts[key].indexOf(script);\n        if (index !== -1) this.scripts[key].splice(index, 1);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Clear\n    ////////////////////\n\n    clear() {\n\n        // Remove Scenes\n        const sceneIds = Object.keys(this.scenes);\n        for (let i = 0; i < sceneIds.length; i++) {\n            let scene = this.scenes[sceneIds[i]]\n            this.removeScene(scene);\n        }\n\n        // Reset Properties\n        this.name = 'My Project';\n        this.uuid = crypto.randomUUID();\n\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   JSON\n    ////////////////////\n\n    fromJSON(json, loadAssets = true) {\n\n        // Check proper JSON type\n        const metaType = (json.metadata) ? json.metadata.type : 'Undefined';\n        if (metaType !== 'Onsight') {\n            console.error(`Project.fromJSON: Unknown project type ('${metaType}'), expected 'Onsight'`);\n            return;\n        }\n\n        // Check project saved with version\n        const metaVersion = json.metadata.version;\n        if (metaVersion !== REVISION) {\n            console.warn(`Project.fromJSON: Project saved in 'v${metaVersion}', attempting to load with 'v${REVISION}'`);\n        }\n\n        // Check object type\n        if (! json.object || json.object.type !== this.type) {\n            console.error(`Project.fromJSON: Save file corrupt, no 'Project' object found!`);\n            return;\n        }\n\n        // Clear Project\n        this.clear();\n\n        // Load Assets into AssetManager\n        if (loadAssets) AssetManager.fromJSON(json);\n\n        // Properties\n        this.name = json.object.name;\n        this.uuid = json.object.uuid;\n\n        // Scripts\n        this.scripts = json.scripts;\n\n        // Worlds\n        for (let i = 0; i < json.worlds.length; i++) {\n            switch (json.worlds[i].object.type) {\n                case 'World3D': this.addWorld(new World3D().fromJSON(json.worlds[i])); break;\n            }\n        }\n\n        // Scenes\n        for (let i = 0; i < json.scenes.length; i++) {\n            switch (json.scenes[i].object.type) {\n                case 'Scene3D': this.addScene(new Scene3D().fromJSON(json.scenes[i], this)); break;\n            }\n        }\n\n        return this;\n    }\n\n    toJSON() {\n\n        ///// Assets\n\n        const meta = {};\n\n        const json = AssetManager.toJSON(meta);\n\n        ///// Project Properties\n\n        json.metadata = {\n            type: 'Onsight',\n            version: REVISION,\n            generator: 'Onsight.Project.toJSON',\n        };\n        json.object = {\n            name: this.name,\n            type: this.type,\n            uuid: this.uuid,\n        };\n        json.scripts = this.scripts;\n        json.scenes = [];\n        json.worlds = [];\n\n        // Add Worlds\n        for (const uuid in this.worlds) {\n            const world = this.worlds[uuid];\n            json.worlds.push(world.toJSON());\n        }\n\n        // Add Scenes\n        for (const uuid in this.scenes) {\n            const scene = this.scenes[uuid];\n            json.scenes.push(scene.toJSON());\n        }\n\n        return json;\n    }\n\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Exports\n/////////////////////////////////////////////////////////////////////////////////////\n\nexport { Project };","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/mrdoob/three.js/blob/dev/editor/js/libs/app.js\n//      MIT     https://github.com/Cloud9c/taro/blob/main/src/core/App.js\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { CameraUtils } from '../three/utils/CameraUtils.js';\nimport { ObjectUtils } from '../three/utils/ObjectUtils.js';\nimport { Project } from '../project/Project.js';\nimport { System } from '../core/System.js';\n\nimport { APP_STATES } from '../Onsight.js';\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   App\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass App {\n\n    //////////////////// Ctor\n\n    constructor() {\n        const self = this;\n\n        // Private Members\n        let player = this;\n        let project = new Project();\n        let renderer;\n        let camera;\n        let scene;\n        let state = APP_STATES.STOPPED;\n\n        // Accessors\n        Object.defineProperty(self, 'scene', {\n            get: function() { return scene; },\n            set: function(value) { scene = value; }\n        });\n\n        // Public Memebrs\n        this.width = 1;\n        this.height = 1;\n\n        this.wantsScreenshot = false;\n\n        // Renderer\n        renderer = new THREE.WebGLRenderer({ antialias: true });\n        renderer.setPixelRatio(1); //window.devicePixelRatio;\n        renderer.shadowMap.enabled = true;\n        // renderer.shadowMap.type = THREE.PCFSoftShadowMap;\n        // renderer.toneMapping = THREE.ReinhardToneMapping;\n        // renderer.physicallyCorrectLights = false;\n\n        // DOM\n        this.dom = document.createElement('div');\n        this.dom.appendChild(renderer.domElement);\n\n        // Local Variables\n        let scriptGlobals = 'player,renderer,scene,camera';\n        let events = {\n            init: [],\n            update: [],\n            keydown: [],\n            keyup: [],\n            pointerdown: [],\n            pointerup: [],\n            pointermove: [],\n        };\n\n        //////////////////// Load Project\n\n        this.load = function(json, loadAssets = true) {\n\n            // Load Project\n            project.fromJSON(json, loadAssets);\n\n            // Set Scene\n            this.scene = project.getFirstScene();\n\n            // !!!!! TEMP: Set Camera\n            // this.setCamera(loader.parse(json.camera));\n            this.setCamera(CameraUtils.createPerspective(500, 500, true));\n            camera.position.x = 0;\n            camera.position.y = 0;\n\n            // * Add Event Listeners\n            document.addEventListener('keydown', onKeyDown);\n            document.addEventListener('keyup', onKeyUp);\n            document.addEventListener('pointerdown', onPointerDown);\n            document.addEventListener('pointerup', onPointerUp);\n            document.addEventListener('pointermove', onPointerMove);\n\n            // * Scripts\n            let scriptFunctions = '';\n            let scriptReturnObject = {};\n            for (let eventKey in events) {\n                scriptFunctions += eventKey + ',';\n                scriptReturnObject[eventKey] = eventKey;\n            }\n            scriptFunctions = scriptFunctions.replace(/.$/, '');\t\t\t\t\t\t\t\t// remove last comma\n            let scriptReturnString = JSON.stringify(scriptReturnObject).replace(/\\\"/g, '');\t\t// remove all qoutes\n\n            function loadScripts(object) {\n                const scripts = project.scripts[object.uuid];\n                if (scripts !== undefined && scripts.length > 0) {\n                    for (let i = 0, l = scripts.length; i < l; i++) {\n                        let script = scripts[i];\n\n                        if (script.errors) {\n                            console.warn(`Entity '${object.name}' has errors in script '${script.name}'. Script will not be loaded!`);\n\n                        } else {\n                            // Returns object that has script functions with proper 'this' bound, and access to globals\n                            let body = `${script.source} \\n return ${scriptReturnString};`;\n                            let functions = (new Function(scriptGlobals, scriptFunctions, body).bind(object))(player, renderer, scene, camera);\n\n                            // Add functions to event dispatch handler\n                            for (let name in functions) {\n                                if (! functions[name]) continue;\n                                if (events[name] === undefined) {\n                                    console.warn(`Player: Event type not supported ('${name}')`);\n                                    continue;\n                                }\n                                events[name].push(functions[name].bind(object));\n                            }\n                        }\n                    }\n                }\n            }\n            scene.traverse(loadScripts);\n\n            // * Call 'init()' functions\n            dispatch(events.init, arguments);\n        };\n\n        //////////////////// Event Dispatcher\n\n        function dispatch(array, event) {\n            for (let i = 0, l = array.length; i < l; i++) {\n                array[i](event);\n            }\n        }\n\n        //////////////////// Animate / Render\n\n        let requestAnimationFrame = window.requestAnimationFrame || window.mozRequestAnimationFrame ||\n                                    window.webkitRequestAnimationFrame || window.msRequestAnimationFrame;\n        let cancelAnimationFrame = window.cancelAnimationFrame || window.mozCancelAnimationFrame;\n        let requestId = null;\n        let time, startTime, prevTime;\n\n        function animate() {\n            time = performance.now();\n\n            try {\n                let timePassed = time - startTime;\n                let delta = time - prevTime;\n\n                // Calls 'update()' functions\n                if (state === APP_STATES.PLAYING) {\n                    dispatch(events.update, { time: timePassed, delta: delta });\n                }\n            } catch (e) {\n                console.error((e.message || e), (e.stack || ''));\n            }\n\n            window.activeCamera = camera;\n            renderer.render(scene, camera);\n\n            // Screenshot\n            if (self.wantsScreenshot === true) {\n                let filename = project.name + ' ' + new Date().toLocaleString() + '.png';\n                let strMime = 'image/png'; /* or 'image/jpeg' or 'image/webp' */\n                let imgData = renderer.domElement.toDataURL(strMime);\n                System.saveImage(imgData, filename);\n                self.wantsScreenshot = false;\n            }\n\n            prevTime = time;\n\n            requestId = requestAnimationFrame(animate);\n        }\n\n        //////////////////// Game State (Play, Stop, etc.)\n\n        /** Start game loop */\n        this.play = function() {\n            startTime = prevTime = performance.now();\n            state = APP_STATES.PLAYING;\n            requestId = requestAnimationFrame(animate);\n        };\n\n        this.pause = function() {\n            if (state === APP_STATES.PLAYING) {\n                state = APP_STATES.PAUSED;\n            } else if (state === APP_STATES.PAUSED) {\n                state = APP_STATES.PLAYING;\n            }\n        }\n\n        /** Stop game loop */\n        this.stop = function() {\n            state = APP_STATES.STOPPED;\n\n            document.removeEventListener('keydown', onKeyDown);\n            document.removeEventListener('keyup', onKeyUp);\n            document.removeEventListener('pointerdown', onPointerDown);\n            document.removeEventListener('pointerup', onPointerUp);\n            document.removeEventListener('pointermove', onPointerMove);\n\n            ObjectUtils.clearObject(camera);\n            ObjectUtils.clearObject(scene);\n\n            for (let key in events) {\n                events[key].length = 0;\n            }\n\n            if (requestId) {\n                cancelAnimationFrame(requestId);\n                requestId = null;\n            }\n        };\n\n        //////////////////// Events\n\n        function onKeyDown(event) { dispatch(events.keydown, event); }\n        function onKeyUp(event) { dispatch(events.keyup, event); }\n        function onPointerDown(event) { dispatch(events.pointerdown, event); }\n        function onPointerUp(event) { dispatch(events.pointerup, event); }\n        function onPointerMove(event) { dispatch(events.pointermove, event); }\n\n        //////////////////// Getters\n\n        this.getRenderer = function() {\n            return renderer;\n        };\n\n        this.appState = function() {\n            return state;\n        };\n\n        //////////////////// Setters\n\n        this.setCamera = function(value) {\n            camera = value;\n        };\n\n        this.setPixelRatio = function(pixelRatio) {\n            renderer.setPixelRatio(pixelRatio);\n        };\n\n        this.setSize = function(width, height) {\n            this.width = width;\n            this.height = height;\n            if (camera) CameraUtils.updateCamera(camera, width, height);\n            if (renderer) renderer.setSize(width, height);\n        };\n\n        //////////////////// Game Helper Functions\n\n        this.gameCoordinates = function(fromEvent) {\n            // Get mouse coords\n            const rect = this.dom.getBoundingClientRect();\n            let eventX = fromEvent.clientX - rect.left;\n            let eventY = fromEvent.clientY - rect.top;\n\n            // Relative screen position (WebGL is -1 to 1 left to right, 1 to -1 top to bottom)\n            let x =  ((eventX / rect.width ) * (rect.width * 2)) - rect.width;\n            let y = -((eventY / rect.height) * (rect.height * 2)) + rect.height;\n\n            let vec = new THREE.Vector3(x, y, 0);\n            vec.unproject(camera);\n            return vec;\n        }\n\n    } // end ctor\n\n}\n\nexport { App };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/rare-earth/Square/blob/main/src/EntityPool.js\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport { Entity3D } from '../project/scene3d/Entity3D.js';\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Entity Pool\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass EntityPool {\n\n    constructor() {\n        this.entities = [];\n        this.expand();\n    }\n\n    getEntities(n) {\n        if(n > this.entities.length) this.expand(n - this.entities.length);\n        return this.entities.splice(0, n);\n    }\n\n    getEntity() {\n        if(! this.entities.length) this.expand();\n        return this.entities.pop();\n    }\n\n    recycle(entity) {\n        entity.destroy();\n        this.entities.push(entity);\n    }\n\n    expand(n = 10) {\n        for(let i = 0; i < n; i++) {\n            this.entities.push(new Entity3D());\n        }\n    }\n\n}\n\nexport { EntityPool };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description ColorEye\n// @about       Color library with support for RGB, RYB, HSL color models and RYB hue shifting\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/stevinz/coloreye\n//\n//      See end of file for license details and acknowledgements\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  ColorEye\n//      Color library with support for RGB, RYB, HSL color models and RYB hue shifting\n//\n//  Initialization\n//      let color = new ColorEye();\n//      ...\n//      new ColorEye();                             // Defaults to white, 0xffffff\n//      new ColorEye(0xff0000);                     // Hexadecimal (0xff0000, i.e. 16711680)\n//\n//      new ColorEye(1.0, 0.0, 0.0);                // RGB Values (0.0 to 1.0)\n//\n//      new ColorEye(255,   0,   0, 'rgb');         // RGB Values (0 to 255)\n//      new ColorEye(255,   0,   0, 'ryb');         // RYB Values (0 to 255)\n//      new ColorEye(360, 1.0, 0.5, 'hsl');         // HSL Values (H: 0 to 360, SL: 0.0 to 1.0)\n//\n//      new ColorEye({ r: 1.0, g: 0.0, b: 0.0 });   // Object with RGB Properties (0.0 to 1.0)\n//      new ColorEye({ r: 1.0, y: 0.0, b: 0.0 });   // Object with RYB Properties (0.0 to 1.0)\n//      new ColorEye({ h: 1.0, s: 1.0, l: 0.5 });   // Object with HSL Properties (0.0 to 1.0)\n//\n//      new ColorEye([ 1.0, 0.0, 0.0 ], offset);    // RGB Array (0.0 to 1.0), optional array offset\n//\n//      new ColorEye('#ff0000');                    // Hex String (also 3 digits: #f00)\n//      new ColorEye('rgb(255, 0, 0)');             // CSS Color String\n//      new ColorEye('red');                        // X11 Color Name\n//\n//      new ColorEye(fromColorEye);                 // Copy from ColorEye Object\n//      new ColorEye(fromThreeColor);               // Copy from Three.js Color Object\n//\n//  Properties\n//      color.r                                     // 0.0 to 1.0\n//      color.g                                     // 0.0 to 1.0\n//      color.b                                     // 0.0 to 1.0\n//\n//  Static\n//      ColorEye.hexString(hexColor);               // Converts hex color (i.e. 16711680) into hex string, ex: '#ff0000'\n//      ColorEye.randomHex();                       // Returns number (i.e. 16711680) of a random color\n//\n//  Output\n//      color.cssString();                          // Returns string, ex: 'rgb(255, 0, 0)'\n//      color.hex();                                // Returns number, ex: 16711680 (equivalent to 0xff0000)\n//      color.hexString();                          // Returns string, ex: '#ff0000'\n//      color.rgbString();                          // Returns string, ex: '255, 0, 0'\n//\n//      color.getHSL(target);                       // Copies HSL values into target, values from 0.0 to 1.0\n//      color.getRGB(target);                       // Copies RGB values into target, values from 0.0 to 1.0\n//      color.getRYB(target);                       // Copies RYB values into target, values from 0.0 to 1.0\n//      color.toArray(array);                       // Copies RGB values into array, values from 0.0 to 1.0\n//\n//      color.red();                                // Returns red value of color, 0 to 255\n//      color.green();                              // Returns green value of color, 0 to 255\n//      color.blue();                               // Returns blue value of color, 0 to 255\n//\n//      color.redF();                               // Returns red value of color, 0.0 to 1.0\n//      color.greenF();                             // Returns green value of color, 0.0 to 1.0\n//      color.blueF();                              // Returns blue value of color, 0.0 to 1.0\n//\n//      color.hue();                                // Returns hue value of color, 0 to 360\n//      color.saturation();                         // Returns saturation value of color, 0 to 255\n//      color.lightness();                          // Returns lightness value of color, 0 to 255\n//\n//      color.hueF();                               // Returns hue value of color, 0.0 to 1.0\n//      color.hueRYB();                             // Returns RGB hue mapped to hue in the RYB, 0 to 360\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Color Eye\n/////////////////////////////////////////////////////////////////////////////////////\n\n/** Color library with support for RGB, RYB, HSL color models and RYB hue shifting */\nclass ColorEye {\n\n    //////////////////// Static\n\n    static get NAMES() { return COLOR_KEYWORDS; }\n\n    //////////////////// Ctor\n\n    constructor(r = 0xffffff, g, b, type = '') {\n        this.isColor = true;\n        this.r = 1;                             // 0.0 to 1.0\n        this.g = 1;                             // 0.0 to 1.0\n        this.b = 1;                             // 0.0 to 1.0\n        this.set(r, g, b, type);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Assignment\n    ////////////////////\n\n    copy(colorObject) {\n        return this.set(colorObject);\n    }\n\n    set(r = 0, g, b, type = '') {\n        // No arguments passed\n        if (arguments.length === 0) {\n            return this.set(0);\n        // No valid arguments passed\n        } else if (r === undefined || r === null || Number.isNaN(r)) {\n            if (g || b) console.warn(`ColorEye: Passed some valid arguments, however 'r' was ${r}`);\n            // nothing to do\n        // r is Object, Hexidecimal, or String\n        } else if (g === undefined && b === undefined) {\n            let value = r;\n            if (typeof value === 'number' || value === 0) { return this.setHex(value);\n            } else if (value && isRGB(value)) { return this.setRGBF(value.r, value.g, value.b);\n            } else if (value && isHSL(value)) { return this.setHSL(value.h * 360, value.s, value.l);\n            } else if (value && isRYB(value)) { return this.setRYB(value.r * 255, value.y * 255, value.b * 255);\n            } else if (Array.isArray(value) && value.length > 2) {\n                let offset = (typeof g === number && g > 0) ? g : 0;\n                return this.setRGBF(value[offset], value[offset + 1], value[offset + 2])\n            } else if (typeof value === 'string') {\n                return this.setStyle(value);\n            }\n        // Three arguments were passed\n        } else {\n            switch (type) {\n                case 'rgb': return this.setRGB(r, g, b);\n                case 'hsl': return this.setHSL(r, g, b);\n                case 'ryb': return this.setRYB(r, g, b);\n                default:    return this.setRGBF(r, g, b);\n            }\n        }\n        return this;\n    }\n\n    setColorName(style) {\n        const hex = COLOR_KEYWORDS[ style.toLowerCase() ];\n        if (hex) return this.setHex(hex);\n        console.warn(`ColorEye: Unknown color ${style}`);\n        return this;\n    }\n\n    setHex(hexColor) {\n        hexColor = Math.floor(hexColor);\n        if (hexColor > 0xffffff || hexColor < 0) {\n            console.warn(`ColorEye: Given decimal outside of range, value was ${hexColor}`);\n            hexColor = clamp(hexColor, 0, 0xffffff);\n        }\n        let r = (hexColor & 0xff0000) >> 16;\n        let g = (hexColor & 0x00ff00) >>  8;\n        let b = (hexColor & 0x0000ff);\n        return this.setRGB(r, g, b);\n    }\n\n    setHSL(h, s, l) {\n        h = keepInRange(h, 0, 360);\n        s = clamp(s, 0, 1);\n        l = clamp(l, 0, 1);\n        let c = (1 - Math.abs(2 * l - 1)) * s;\n        let x = c * (1 - Math.abs((h / 60) % 2 - 1));\n        let m = l - (c / 2);\n        let r = 0, g = 0, b = 0;\n        if                  (h <  60) { r = c; g = x; b = 0; }\n        else if ( 60 <= h && h < 120) { r = x; g = c; b = 0; }\n        else if (120 <= h && h < 180) { r = 0; g = c; b = x; }\n        else if (180 <= h && h < 240) { r = 0; g = x; b = c; }\n        else if (240 <= h && h < 300) { r = x; g = 0; b = c; }\n        else if (300 <= h)            { r = c; g = 0; b = x; }\n        this.setRGBF(r + m, g + m, b + m);\n        return this;\n    }\n\n    setRandom() {\n        return this.setRGBF(Math.random(), Math.random(), Math.random());\n    };\n\n    /** 0 to 255 */\n    setRGB(r, g, b) {\n        return this.setRGBF(r / 255, g / 255, b / 255);\n    }\n\n    /** 0.0 to 1.0 */\n    setRGBF(r, g, b) {\n        this.r = clamp(r, 0, 1);\n        this.g = clamp(g, 0, 1);\n        this.b = clamp(b, 0, 1);\n        return this;\n    }\n\n    /** 0 to 255 */\n    setRYB(r, y, b) {\n        let hexColor = cubicInterpolation(clamp(r, 0, 255), clamp(y, 0, 255), clamp(b, 0, 255), 255, CUBE.RYB_TO_RGB);\n        return this.setHex(hexColor);\n    }\n\n    /** 0 to 255 */\n    setScalar(scalar) {\n        return this.setRGB(scalar, scalar, scalar);\n    }\n\n    /* 0.0 to 1.0 */\n    setScalarF(scalar) {\n        return this.setRGBF(scalar, scalar, scalar);\n    }\n\n    setStyle(style) {\n        // CSS Color: rgb() / rgba() / hsl() / hsla()\n        let m;\n        if (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n            let color;\n            const name = m[1];\n            const components = m[2];\n            switch (name) {\n                case 'rgb':\n                case 'rgba':\n                    if (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n                        // rgb(255,0,0) rgba(255,0,0,0.5)\n                        let r = Math.min(255, parseInt(color[1], 10));\n                        let g = Math.min(255, parseInt(color[2], 10));\n                        let b = Math.min(255, parseInt(color[3], 10));\n                        return this.setRGB(r, g, b);\n                    }\n                    if ( color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n                        // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n                        let r = (Math.min(100, parseInt(color[1], 10)) / 100);\n                        let g = (Math.min(100, parseInt(color[2], 10)) / 100);\n                        let b = (Math.min(100, parseInt(color[3], 10)) / 100);\n                        return this.setRGBF(r, g, b);\n                    }\n                    break;\n                case 'hsl':\n                case 'hsla':\n                    if (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n                        // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n                        const h = parseFloat(color[1]);\n                        const s = parseInt(color[2], 10) / 100;\n                        const l = parseInt(color[3], 10) / 100;\n                        return this.setHSL(h, s, l);\n                    }\n                    break;\n            }\n        // Hex Color, i.e. #FF0000\n        } else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n            const hex = m[1];\n            const size = hex.length;\n            // #FF0\n            if (size === 3) {\n                let r = parseInt(hex.charAt(0) + hex.charAt(0), 16);\n                let g = parseInt(hex.charAt(1) + hex.charAt(1), 16);\n                let b = parseInt(hex.charAt(2) + hex.charAt(2), 16);\n                return this.setRGB(r, g, b);\n            // #FF0000\n            } else if (size === 6) {\n                let r = parseInt(hex.charAt(0) + hex.charAt(1), 16);\n                let g = parseInt(hex.charAt(2) + hex.charAt(3), 16);\n                let b = parseInt(hex.charAt(4) + hex.charAt(5), 16);\n                return this.setRGB(r, g, b);\n            }\n        }\n        // X11 Color Name\n        if (style && style.length > 0) {\n            return this.setColorName(style);\n        }\n        return this;\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Output\n    ////////////////////\n\n    /** Example output: 'rgb(255, 0, 0)' */\n    cssString(alpha /* optional */) {\n        return ('rgb(' + this.rgbString(alpha) + ')');\n    }\n\n    /** Returns decimal, i.e. 16711680 (equivalent to 0xff0000) */\n    hex() {\n        return ((this.red() << 16) + (this.green() << 8) + this.blue());\n    }\n\n    /** Example output: '#ff0000' */\n    hexString(hexColor /* optional */){\n        if (hexColor === undefined || typeof value !== 'number') hexColor = this.hex();\n        return ColorEye.hexString(hexColor);\n    }\n\n    /** Example output: '#ff0000' */\n    static hexString(hexColor = 0){\n        return '#' + ('000000' + ((hexColor) >>> 0).toString(16)).slice(-6);\n    }\n\n    /** Returns decimal (hex) of a random color */\n    static randomHex() {\n        return _random.setRandom().hex();\n    }\n\n    /** Example output: '255, 0, 0' */\n    rgbString(alpha) {\n        let rgb = this.red() + ', ' + this.green() + ', ' + this.blue();\n        let rgba = (alpha != undefined) ? rgb + ', ' + alpha : rgb;\n        return rgba;\n    }\n\n    /** Export to JSON */\n    toJSON() {\n        return this.hex();\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Retrieving Data\n    ////////////////////\n\n    clone() {\n        return new this.constructor(this.r, this.g, this.b);\n    }\n\n    /** Copies HSL values into optional target, or returns new Object, values range from 0.0 to 1.0 */\n    getHSL(target) {\n        if (target && isHSL(target)) {\n            target.h = hueF(this.hex());\n            target.s = saturation(this.hex());\n            target.l = lightness(this.hex());\n        } else {\n            return { h: hueF(this.hex()), s: saturation(this.hex()), l: lightness(this.hex()) };\n        }\n    }\n\n    /** Copies RGB values into optional target, or returns new Object, values range from 0.0 to 1.0 */\n    getRGB(target) {\n        if (target && isHSL(target)) {\n            target.r = this.r;\n            target.g = this.g;\n            target.b = this.b;\n        } else {\n            return { r: this.r, g: this.g, b: this.b };\n        }\n    }\n\n    /** Copies RYB values into optional target, or returns new Object, values range from 0.0 to 1.0 */\n    getRYB(target) {\n        let rybAsHex = cubicInterpolation(this.r, this.g, this.b, 1.0, CUBE.RGB_TO_RYB);\n        if (target && isRYB(target)) {\n            target.r = redF(rybAsHex);\n            target.y = greenF(rybAsHex);\n            target.b = blueF(rybAsHex);\n        } else {\n            return { r: redF(rybAsHex), y: greenF(rybAsHex), b: blueF(rybAsHex) };\n        }\n    }\n\n    /** Copies RGB values into optional array, or returns a new Array, values range from 0.0 to 1.0 */\n    toArray(array = [], offset = 0) {\n        array[offset] = this.r;\n        array[offset + 1] = this.g;\n        array[offset + 2] = this.b;\n        return array;\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Spectrum Components\n    ////////////////////\n\n    red() { return clamp(Math.floor(this.r * 255), 0, 255); }\n    green() { return clamp(Math.floor(this.g * 255), 0, 255); }\n    blue() { return clamp(Math.floor(this.b * 255), 0, 255); }\n\n    redF() { return this.r; }\n    greenF() { return this.g; }\n    blueF() { return this.b; }\n\n    hue() { return hue(this.hex()); }\n    saturation() { return saturation(this.hex()); }\n    lightness() { return lightness(this.hex()); }\n\n    hueF() { return hueF(this.hex()); }\n\n    /** Map a color's RGB hue to the closest hue in the RYB spectrum */\n    hueRYB() {\n        for (let i = 1; i < RYB_OFFSET.length; i++) {\n            if (RYB_OFFSET[i] > this.hue()) return i - 2;\n        }\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Color Functions\n    ////////////////////\n\n    /** Adds RGB values from color to this color */\n    add(color) {\n        if (! color.isColor) console.warn(`ColorEye: add() was not called with a 'Color' object`);\n        return this.setRGBF(this.r + color.r, this.g + color.g, this.b + color.b);\n    }\n\n    /** Adds scalar value to this colors RGB values, range -255 to 255 */\n    addScalar(scalar) {\n        return this.setRGB(this.red() + scalar, this.green() + scalar, this.blue() + scalar);\n    }\n\n    /** Adds scalar value to this colors RGB values, range -1.0 to 1.0 */\n    addScalarF(scalar) {\n        return this.setRGBF(this.r + scalar, this.g + scalar, this.b + scalar);\n    }\n\n    /**\n     * Lightens color by amount\n     * @param {Number} [amount] Percentage to lighten (default = 0.5) towards 1.0, possible values are 0.0 to 1.0\n     */\n    brighten(amount = 0.5 /* percentage from 0 to 1 */ ) {\n        let h = hue(this.hex());\n        let s = saturation(this.hex());\n        let l = lightness(this.hex());\n        l = l + ((1.0 - l) * amount)\n        this.setHSL(h, s, l);\n        return this;\n    }\n\n    /**\n     * Darkens color by amount\n     * @name darken\n     * @param {Number} [amount] Percentage to darken (default = 0.5), 0 = fully dark, 1 = no change, 2 = twice as bright\n     */\n    darken(amount = 0.5 /* percentage from 0 to 1 */ ) {\n        let h = hue(this.hex());\n        let s = saturation(this.hex());\n        let l = lightness(this.hex()) * amount;\n        return this.setHSL(h, s, l);\n    }\n\n    /** Converts color to grayscale */\n    greyscale(percent = 1.0, type = 'luminosity') { return this.grayscale(percent, type) }\n    grayscale(percent = 1.0, type = 'luminosity') {\n        let gray = 0;\n        switch (type) {\n            case 'luminosity':\n                gray = (this.r * 0.21) + (this.g * 0.72) + (this.b * 0.07);\n            case 'average':\n            default:\n                gray = (this.r + this.g + this.b) / 3;\n        }\n        percent = clamp(percent, 0, 1);\n        let r = (this.r * (1.0 - percent)) + (percent * gray);\n        let g = (this.g * (1.0 - percent)) + (percent * gray);\n        let b = (this.b * (1.0 - percent)) + (percent * gray);\n        return this.setRGBF(r, g, b);\n    }\n\n    hslOffset(h, s, l) {\n        return this.setHSL(this.hue() + h, this.saturation() + s, this.lightness() + l);\n    }\n\n    /** Mixes in 'color' by percent to this color */\n    mix(color, percent = 0.5) {\n        if (! color.isColor) console.warn(`ColorEye: mix() was not called with a 'Color' object`);\n        percent = clamp(percent, 0, 1);\n        let r = (this.r * (1.0 - percent)) + (percent * color.r);\n        let g = (this.g * (1.0 - percent)) + (percent * color.g);\n        let b = (this.b * (1.0 - percent)) + (percent * color.b);\n        return this.setRGBF(r, g, b);\n    }\n\n    multiply(color) {\n        if (! color.isColor) console.warn(`ColorEye: multiply() was not called with a 'Color' object`);\n        return this.setRGBF(this.r * color.r, this.g * color.g, this.b * color.b);\n    }\n\n    /** Multiplies RGB values from this color with scalar value, -Infinity to Infinity */\n    multiplyScalar(scalar) {\n        return this.setRGBF(this.r * scalar, this.g * scalar, this.b * scalar);\n    }\n\n    rgbComplementary() {\n        return this.rgbRotateHue(180);\n    }\n\n    /** Rotates the hue of a color in the RGB spectrum by degrees */\n    rgbRotateHue(degrees = 90) {\n        let newHue = keepInRange(this.hue() + degrees);\n        return this.setHSL(newHue, this.saturation(), this.lightness());\n    }\n\n    /** Adjusts the RGB values to fit in the RYB spectrum as best as possible */\n    rybAdjust() {\n        return this.setHSL(hue(matchSpectrum(this.hue(), SPECTRUM.RYB)), this.saturation(), this.lightness());\n    }\n\n    rybComplementary() {\n        return this.rybRotateHue(180);\n    }\n\n    /** Rotates the hue of a color in the RYB spectrum by degrees */\n    rybRotateHue(degrees = 90) {\n        let newHue = keepInRange(this.hueRYB() + degrees);\n        return this.setHSL(hue(matchSpectrum(newHue, SPECTRUM.RYB)), this.saturation(), this.lightness());\n    }\n\n    /** Subtract RGB values from color to this color */\n    subtract(color) {\n        if (! color.isColor) console.warn(`ColorEye: subtract() was not called with a 'Color' object`);\n        return this.setRGBF(this.r - color.r, this.g - color.g, this.b - color.b);\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////   Comparison\n    ////////////////////\n\n    /** Returns true if the RGB values of 'color' are the same as those of this object. */\n    equals(color) {\n        if (! color.isColor) console.warn(`ColorEye: equals() was not called with a 'Color' object`);\n        return (fuzzy(this.r, color.r) && fuzzy(this.g, color.g) && fuzzy(this.b, color.b));\n    }\n\n    /** Returns true if the RGB values of 'color' are the same as those of this object. */\n    isEqual(color) {\n        return this.equals(color);\n    }\n\n    /** Return true if lightness is < 60% for blue / purple / red, or else < 32% for all other colors */\n    isDark() {\n        const h = this.hue();\n        const l = this.lightness();\n        return ((l < 0.60 && (h >= 210 || h <= 27)) || (l <= 0.32));\n    }\n\n    /** Returns true if color is generally light-ish, false if dark-ish */\n    isLight() {\n        return (! this.isDark());\n    }\n\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Utility Functions\n/////////////////////////////////////////////////////////////////////////////////////\n\nfunction isRGB(object) { return (object.r !== undefined && object.g !== undefined && object.b !== undefined); }\nfunction isHSL(object) { return (object.h !== undefined && object.s !== undefined && object.l !== undefined); }\nfunction isRYB(object) { return (object.r !== undefined && object.y !== undefined && object.b !== undefined); }\n\nfunction clamp(value, min, max) { return Math.max(min, Math.min(max, value)); }\n\nfunction red(hexColor) { return clamp((hexColor & 0xff0000) >> 16, 0, 255); }\nfunction green(hexColor) { return clamp((hexColor & 0x00ff00) >> 8, 0, 255); }\nfunction blue(hexColor) { return clamp((hexColor & 0x0000ff), 0, 255); }\nfunction redF(hexColor) { return red(hexColor) / 255.0; }\nfunction greenF(hexColor) { return green(hexColor) / 255.0; }\nfunction blueF(hexColor) { return blue(hexColor) / 255.0; }\n\nfunction hue(hexColor) { return hsl(hexColor, 'h'); }\nfunction hueF(hexColor) { return hue(hexColor) / 360; }\nfunction saturation(hexColor) { return hsl(hexColor, 's'); }\nfunction lightness(hexColor) { return hsl(hexColor, 'l'); }\n\nfunction fuzzy(a, b, tolerance = 0.0015) { return ((a < (b + tolerance)) && (a > (b - tolerance))); }\n\nfunction keepInRange(value, min = 0, max = 360) {\n    while (value >= max) value -= (max - min);\n    while (value <  min) value += (max - min);\n    return value;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Return hue (0 to 360), saturation (0 to 1), and lightness (0 to 1)\n////////////////////\n\nlet _hslHex;\nlet _hslH;\nlet _hslS;\nlet _hslL;\n\nfunction hsl(hexColor, channel = 'h') {\n    if (hexColor !== _hslHex) {\n        if (hexColor === undefined || hexColor === null) return 0;\n\n        const r = redF(hexColor), g = greenF(hexColor), b = blueF(hexColor);\n        const max = Math.max(r, g, b), min = Math.min(r, g, b);\n        const delta = max - min;\n        _hslL = (max + min) / 2;\n\n        if (delta === 0) {\n            _hslH = _hslS = 0;\n        } else {\n            _hslS = (_hslL <= 0.5) ? (delta / (max + min)) : (delta / (2 - max - min));\n            switch (max) {\n                case r: _hslH = (g - b) / delta + (g < b ? 6 : 0); break;\n                case g: _hslH = (b - r) / delta + 2; break;\n                case b: _hslH = (r - g) / delta + 4; break;\n            }\n            _hslH = Math.round(_hslH * 60);\n            if (_hslH < 0) _hslH += 360;\n        }\n\n        _hslHex = hexColor;\n    }\n\n    switch (channel) {\n        case 'h': return _hslH;\n        case 's': return _hslS;\n        case 'l': return _hslL;\n        default: console.warn(`ColorEye: Unknown channel (${channel}) requested in hsl()`);\n    }\n\n    return 0;\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Match to 'matchHue' into 'spectrum'\n////////////////////\n\nconst _mix1 = new ColorEye();\nconst _mix2 = new ColorEye();\nconst _random = new ColorEye();\n\nfunction matchSpectrum(matchHue, spectrum = SPECTRUM.RYB) {\n    let colorDegrees = 360 / spectrum.length;\n    let degreeCount = colorDegrees;\n    let stopCount = 0;\n\n    for (let i = 0; i < spectrum.length; i++) {\n        if (matchHue < degreeCount) {\n            let percent = (degreeCount - matchHue) / colorDegrees;\n            _mix1.set(spectrum[stopCount + 1]);\n            return _mix1.mix(_mix2.set(spectrum[stopCount]), percent).hex();\n        } else {\n            degreeCount = degreeCount + colorDegrees;\n            stopCount = stopCount + 1\n        }\n    }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Cubic Interpolation\n////////////////////\n\nconst _interpolate = new ColorEye();\n\n/**\n * cubicInterpolation\n * @param {*} v1 Input number 1 (probably r of rgb, or r of ryb)\n * @param {*} v2 Input number 2 (probably g of rgb, or y of ryb)\n * @param {*} v3 Input number 3 (probably b of rgb, or b of ryb)\n * @param {*} scale The range of input values, should be either 1 (0 to 1) or 255 (0 to 255)\n * @param {*} table Table to use for cubic interpolation\n * @returns Hexidecimal that has 3 new values embedded\n */\nfunction cubicInterpolation(v1, v2, v3, scale = 255, table = CUBE.RYB_TO_RGB) {\n    v1 = clamp(v1 / scale, 0, 1);\n    v2 = clamp(v2 / scale, 0, 1);\n    v3 = clamp(v3 / scale, 0, 1);\n\n    // Cube Points\n    // f0=000, f1=001, f2=010, f3=011, f4=100, f5=101, f6=110, f7=111\n    let f0 = table[0], f1 = table[1], f2 = table[2], f3 = table[3];\n    let f4 = table[4], f5 = table[5], f6 = table[6], f7 = table[7];\n\n    let i1 = 1.0 - v1;\n    let i2 = 1.0 - v2;\n    let i3 = 1.0 - v3;\n\n    let c0 = i1 * i2 * i3;\n    let c1 = i1 * i2 * v3;\n    let c2 = i1 * v2 * i3;\n    let c3 = v1 * i2 * i3;\n    let c4 = i1 * v2 * v3;\n    let c5 = v1 * i2 * v3;\n    let c6 = v1 * v2 * i3;\n    let v7 = v1 * v2 * v3;\n\n    let o1 = c0*f0[0] + c1*f1[0] + c2*f2[0] + c3*f3[0] + c4*f4[0] + c5*f5[0] + c6*f6[0] + v7*f7[0];\n    let o2 = c0*f0[1] + c1*f1[1] + c2*f2[1] + c3*f3[1] + c4*f4[1] + c5*f5[1] + c6*f6[1] + v7*f7[1];\n    let o3 = c0*f0[2] + c1*f1[2] + c2*f2[2] + c3*f3[2] + c4*f4[2] + c5*f5[2] + c6*f6[2] + v7*f7[2];\n\n    return _interpolate.set(o1, o2, o3, 'gl').hex();\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Color Data\n/////////////////////////////////////////////////////////////////////////////////////\n\nconst CUBE = {\n    RYB_TO_RGB: [\n        [ 1.000, 1.000, 1.000 ],    // white\n        [ 0.163, 0.373, 0.600 ],    // blue\n        [ 1.000, 1.000, 0.000 ],    // yellow\n        [ 1.000, 0.000, 0.000 ],    // red\n        [ 0.000, 0.660, 0.200 ],    // green\n        [ 0.500, 0.000, 0.500 ],    // purple\n        [ 1.000, 0.500, 0.000 ],    // orange\n        [ 0.000, 0.000, 0.000 ]     // black\n    ],\n\n    RGB_TO_RYB: [\n        [ 1.000, 1.000, 1.000 ],    // black\n        [ 0.000, 0.000, 1.000 ],    // blue\n        [ 0.000, 1.000, 0.483 ],    // green\n        [ 1.000, 0.000, 0.000 ],    // red\n        [ 0.000, 0.053, 0.210 ],    // cyan\n        [ 0.309, 0.000, 0.469 ],    // magenta\n        [ 0.000, 1.000, 0.000 ],    // yellow\n        [ 0.000, 0.000, 0.000 ]     // white\n    ]\n};\n\n// Stop values for RYB color wheel\nconst SPECTRUM = {\n    RYB: [\n        0xFF0000, 0xFF4900, 0xFF7400, 0xFF9200, 0xFFAA00, 0xFFBF00, 0xFFD300, 0xFFE800,\n        0xFFFF00, 0xCCF600, 0x9FEE00, 0x67E300, 0x00CC00, 0x00AF64, 0x009999, 0x0B61A4,\n        0x1240AB, 0x1B1BB3, 0x3914AF, 0x530FAD, 0x7109AA, 0xA600A6, 0xCD0074, 0xE40045,\n        0xFF0000 /* <-- addded first value to end */\n    ]\n};\n\n// Map of the RYB wheel to RGB wheel offset\nconst RYB_OFFSET = [\n    0,   1,   2,   3,   5,   6,   7,   8,   9,  10,  11,  13,  14,  15,  16,  17,  18,  19,  19,  20,\n    21,  21,  22,  23,  23,  24,  25,  25,  26,  27,  27,  28,  28,  29,  29,  30,  30,  31,  31,  32,\n    32,  32,  33,  33,  34,  34,  35,  35,  35,  36,  36,  37,  37,  37,  38,  38,  38,  39,  39,  40,\n    40,  40,  41,  41,  41,  42,  42,  42,  43,  43,  43,  44,  44,  44,  45,  45,  45,  46,  46,  46,\n    47,  47,  47,  47,  48,  48,  48,  49,  49,  49,  50,  50,  50,  51,  51,  51,  52,  52,  52,  53,\n    53,  53,  54,  54,  54,  55,  55,  55,  56,  56,  56,  57,  57,  57,  58,  58,  59,  59,  59,  60,\n    60,  61,  61,  62,  63,  63,  64,  65,  65,  66,  67,  68,  68,  69,  70,  70,  71,  72,  72,  73,\n    73,  74,  75,  75,  76,  77,  77,  78,  79,  79,  80,  81,  82,  82,  83,  84,  85,  86,  87,  88,\n    88,  89,  90,  91,  92,  93,  95,  96,  98, 100, 102, 104, 105, 107, 109, 111, 113, 115, 116, 118,\n    120, 122, 125, 127, 129, 131, 134, 136, 138, 141, 143, 145, 147, 150, 152, 154, 156, 158, 159, 161,\n    163, 165, 166, 168, 170, 171, 173, 175, 177, 178, 180, 182, 184, 185, 187, 189, 191, 192, 194, 196,\n    198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221,\n    222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244,\n    245, 246, 247, 248, 249, 250, 251, 251, 252, 253, 254, 255, 256, 257, 257, 258, 259, 260, 260, 261,\n    262, 263, 264, 264, 265, 266, 267, 268, 268, 269, 270, 271, 272, 273, 274, 274, 275, 276, 277, 278,\n    279, 280, 282, 283, 284, 286, 287, 289, 290, 292, 293, 294, 296, 297, 299, 300, 302, 303, 305, 307,\n    309, 310, 312, 314, 316, 317, 319, 321, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336,\n    337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359,\n    999\n];\n\n// X11 Color Names - http://www.w3.org/TR/css3-color/#svg-color\nconst COLOR_KEYWORDS = {\n    'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4,\n    'azure': 0xF0FFFF, 'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD,\n    'blue': 0x0000FF, 'blueviolet': 0x8A2BE2, 'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0,\n    'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50, 'cornflowerblue': 0x6495ED,\n    'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n    'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9,\n    'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B, 'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00,\n    'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n    'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1,\n    'darkviolet': 0x9400D3, 'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969,\n    'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222, 'floralwhite': 0xFFFAF0,\n    'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF,\n    'gold': 0xFFD700, 'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F,\n    'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4, 'indianred': 0xCD5C5C, 'indigo': 0x4B0082,\n    'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n    'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF,\n    'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3, 'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3,\n    'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n    'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0,\n    'lime': 0x00FF00, 'limegreen': 0x32CD32, 'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000,\n    'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3, 'mediumpurple': 0x9370DB,\n    'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A,\n    'mediumturquoise': 0x48D1CC, 'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA,\n    'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD, 'navy': 0x000080, 'oldlace': 0xFDF5E6,\n    'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n    'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093,\n    'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9, 'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD,\n    'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000,\n    'rosybrown': 0xBC8F8F, 'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072,\n    'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE, 'sienna': 0xA0522D, 'silver': 0xC0C0C0,\n    'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n    'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8,\n    'tomato': 0xFF6347, 'turquoise': 0x40E0D0, 'transparent': 0x000000, 'violet': 0xEE82EE, 'wheat': 0xF5DEB3,\n    'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32\n};\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Exports\n/////////////////////////////////////////////////////////////////////////////////////\n\nexport { ColorEye };\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Acknowledgements\n/////////////////////////////////////////////////////////////////////////////////////\n//\n// Some portions of this code adapted from:\n//      Description:    Color Schemer\n//      Author:         Scott Kellum <@scottkellum> and Mason Wendell <@canarymason>\n//      License:        Distributed under the MIT License\n//      Source(s):      https://github.com/at-import/color-schemer/blob/master/stylesheets/color-schemer/_ryb.scss\n//\n//      Description:    three.js\n//      Author:         mrdoob and three.js authors\n//      License:        Distributed under the MIT License\n//      Source(s):      https://github.com/mrdoob/three.js/blob/master/src/math/Color.js\n//\n//      Description:    RYB\n//      Author:         Ilya Kolbin\n//      License:        Distributed under the MIT License\n//      Source(s):      https://github.com/iskolbin/lryb/blob/master/ryb.lua\n//\n// Thanks to:\n//      Description:    RYB and RGB Color Space Conversion\n//      Author:         Jean-Olivier Irisson\n//      Source(s):      https://math.stackexchange.com/questions/305395/ryb-and-rgb-color-space-conversion\n//\n//      Description:    Paint Inspired Color Mixing and Compositing for Visualization\n//      Author:         Nathan Gossett & Baoquan Chen\n//      Source(s):      http://vis.computer.org/vis2004/DVD/infovis/papers/gossett.pdf\n//\n/////////////////////////////////////////////////////////////////////////////////////\n/////   License\n/////////////////////////////////////////////////////////////////////////////////////\n//\n// MIT License\n//\n// ColorEye\n//      Copyright (c) 2021-2022 Stephens Nunnally <@stevinz>\n//\n// Some Portions\n//      Copyright (c) 2011 Scott Kellum <@scottkellum> and Mason Wendell <@canarymason>\n//      Copyright (c) 2010-2022 mrdoob and three.js authors\n//      Copyright (c) 2018 Ilya Kolbin\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Vector Functions\n//      absolute            Set x, y, z to positive numbers\n//      noZero              Check if Vector3 is equal to zero ({ x:0, y:0, z:0 })\n//      printOut            Logs a vector3 to the console\n//      round               Rounds vector3 values to 'decimalPlaces'\n//      sanity              Makes sure Vector3 values are real numbers\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport { Maths } from './Maths.js';\n\nclass Vectors {\n\n    /** Set x, y, z to positive numbers */\n    static absolute(vec3) {\n        vec3.x = Math.abs(vec3.x);\n        vec3.y = Math.abs(vec3.y);\n        vec3.z = Math.abs(vec3.z);\n    }\n\n    /** Check if Vector3 is equal to zero ({ x:0, y:0, z:0 }) */\n    static noZero(vec3, min = 0.001) {\n        if (Maths.fuzzyFloat(vec3.x, 0, min)) vec3.x = (vec3.x < 0) ? (min * -1) : min;\n\t\tif (Maths.fuzzyFloat(vec3.y, 0, min)) vec3.y = (vec3.y < 0) ? (min * -1) : min;\n\t\tif (Maths.fuzzyFloat(vec3.z, 0, min)) vec3.z = (vec3.z < 0) ? (min * -1) : min;\n    }\n\n    /** Logs a vector3 to the console */\n    static printOut(vec3, name = '') {\n        if (name !== '') name += ' - ';\n        console.info(`${name}X: ${vec3.x}, Y: ${vec3.y}, Z: ${vec3.z}`);\n    }\n\n    /** Rounds vector3 values to 'decimalPlaces' */\n    static round(vec3, decimalPlaces = 0) {\n        const shift = Math.pow(10, decimalPlaces);\n        vec3.x = Math.round(vec3.x * shift) / shift;\n        vec3.y = Math.round(vec3.y * shift) / shift;\n        vec3.z = Math.round(vec3.z * shift) / shift;\n    }\n\n    /** Makes sure Vector3 values are real numbers */\n    static sanity(vec3) {\n        if (isNaN(vec3.x)) vec3.x = 0;\n        if (isNaN(vec3.y)) vec3.y = 0;\n        if (isNaN(vec3.z)) vec3.z = 0;\n    }\n\n}\n\nexport { Vectors };","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  SVGBuilder\n//      buildFromPaths              Builds Object3D from SVG paths\n//      fromFile                    Builds Object3D from SVG file\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\nimport { SVGLoader } from 'three/addons/loaders/SVGLoader.js';\n\nimport { Entity3D } from '../Entity3D.js';\nimport { ObjectUtils } from '../../../three/utils/ObjectUtils.js';\nimport { Strings } from '../../../core/Strings.js';\nimport { Vectors } from '../../../core/Vectors.js';\n\n///// Local Variables\n\nconst _color = new THREE.Color();\nconst _position = new THREE.Vector3();\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   SVGBuilder\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass SVGBuilder {\n\n    static buildFromPaths(target, paths, onLoad, name = '') {\n        const drawFills = true;\n        const drawStrokes = true;\n\n        let startZ = 0, zStep = 0.001;\n        let fillNumber = 0, strokeNumber = 0;\n\n        ///// Process Paths\n        paths.forEach((path) => {\n            let fillColor = path.userData.style.fill;\n            let fillOpacity = path.userData.style.fillOpacity;\n            if (! fillOpacity && fillOpacity !== 0) fillOpacity = 1;\n\n            ///// Fills\n            if (drawFills && fillColor !== undefined && fillColor !== 'none') {\n                const shapes = SVGLoader.createShapes(path);\n                shapes.forEach((shape) => {\n\n                    let entityName = `Fill ${fillNumber}`\n                    if (name !== '') entityName = name + ' ' + entityName;\n\n                    const entity = new Entity3D(entityName);\n                    const depth = 0.256;\n                    const scaleDown = 0.001; /* 1 unit === 1000 pixels */\n\n                    // Scale Down Curves\n                    for (let c = 0; c < shape.curves.length; c++) {\n                        const curve = shape.curves[c];\n                        if (curve.v0) curve.v0.multiplyScalar(scaleDown);\n                        if (curve.v1) curve.v1.multiplyScalar(scaleDown);\n                        if (curve.v2) curve.v2.multiplyScalar(scaleDown);\n                        if (curve.v3) curve.v3.multiplyScalar(scaleDown);\n                        if (curve.aX) curve.aX *= scaleDown;\n                        if (curve.aY) curve.aY *= scaleDown;\n                        if (curve.xRadius) curve.xRadius *= scaleDown;\n                        if (curve.yRadius) curve.yRadius *= scaleDown;\n\n                        // TODO: Scale down CatmullRomCurve3 points?\n                    }\n\n                    // // OPTION: Shape\n                    // const geometry = new THREE.ShapeGeometry(shape);\n\n                    // // OPTION: Extruded\n                    const geometry = new THREE.ExtrudeGeometry(shape, {\n                        depth: depth,\n                        bevelEnabled: false,\n                        bevelThickness: 0.25,\n                        bevelSegments: 8,\n                        curveSegments: 16,\n                        steps: 4,\n                    });\n\n                    // Set Name\n                    geometry.name = entityName;\n\n                    // Adjust Depth\n                    geometry.translate(0, 0, depth / -2);\n\n                    // Center Geometry\n                    geometry.computeBoundingBox();\n                    geometry.boundingBox.getCenter(_position);\n                    geometry.center();\n                    geometry.scale(1, -1, -1);\n                    entity.position.copy(_position);\n\n                    // Geometry Component\n                    entity.addComponent('geometry', geometry);\n\n                    // Material Component\n\t                entity.addComponent('material', {\n                        style: 'standard',\n                        side: 'FrontSide', // 'DoubleSide',\n                        color: _color.setStyle(fillColor).getHex(),\n                        opacity: fillOpacity,\n                    });\n\n                    entity.position.z = startZ;\n                    target.add(entity);\n\n                    startZ += zStep;\n                    fillNumber++;\n                });\n            }\n\n            // ///// TODO: SVG Strokes\n            //\n            // const strokeColor = path.userData.style.stroke;\n            // const strokeOpacity = path.userData.style.strokeOpacity;\n            // if (! strokeOpacity && strokeOpacity !== 0) strokeOpacity = 1;\n\n            // if (drawStrokes && strokeColor !== undefined && strokeColor !== 'none') {\n            //     for (let j = 0; j < path.subPaths.length; j++) {\n            //         const geometry = SVGLoader.pointsToStroke(path.subPaths[j].getPoints(), path.userData.style);\n            //         if (geometry) {\n\n            //             const entity = new Entity3D(`Stroke ${strokeNumber}`);\n            //             entity.addComponent('geometry', new THREE.ShapeGeometry(shape));\n            //             entity.addComponent('material', {\n            //                 style: 'standard',\n            //                 side: 'DoubleSide',\n            //                 // color: _color.setStyle(fillColor).convertSRGBToLinear().getHex(),\n            //                 color: _color.setStyle(strokeColor).getHex(),\n            //                 opacity: strokeOpacity,\n            //             });\n\n            //             // // Alternate (Edge Geometry)\n            //             // const stokeMaterial = new THREE.LineBasicMaterial({ color: \"#00A5E6\" });\n            //             // const lines = new THREE.LineSegments(new THREE.EdgesGeometry(meshGeometry), stokeMaterial);\n            //             // target.add(lines);\n\n            //             entity.position.z = startZ;\n            //             target.add(entity);\n\n            //             startZ += zStep;\n            //             strokeNumber++;\n            //         }\n            //     }\n            // }\n\n        });\n\n        // Center elements, Flip x, y axis for gpu space\n        if (target.children && target.children.length > 0) {\n            const center = new THREE.Vector3();\n            ObjectUtils.computeCenter(target.children, center);\n            for (let child of target.children) {\n                child.position.x -= center.x;\n                child.position.y -= center.y;\n            }\n        }\n\n        // Call 'onLoad'\n        if (onLoad && typeof onLoad === 'function') onLoad();\n\n    }\n\n    static fromFile(url, onLoad) {\n        const svgGroup = new Entity3D();\n        const loader = new SVGLoader();\n        loader.load(url, function(data) {\n            SVGBuilder.buildFromPaths(svgGroup, data.paths, onLoad, Strings.nameFromUrl(url));\n        });\n        return svgGroup;\n    }\n\n}\n\nexport { SVGBuilder };","/** /////////////////////////////////////////////////////////////////////////////////\r\n//\r\n// @description CapsuleGeometry\r\n// @about       CapsuleGeometry as a new geometry primitive for Three.js\r\n// @author      maximequiblier <maximeq>\r\n// @license     MIT - Copyright (c) 2019 maximequiblier\r\n// @source      https://github.com/maximeq/three-js-capsule-geometry\r\n// @version     Aug 6, 2021\r\n//\r\n///////////////////////////////////////////////////////////////////////////////////*/\r\n\r\nimport * as THREE from 'three';\r\nimport { Maths } from '../../core/Maths.js';\r\n\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n/////   CapsuleGeometry\r\n/////////////////////////////////////////////////////////////////////////////////////\r\n\r\nclass CapsuleGeometry extends THREE.BufferGeometry {\r\n\r\n    constructor(radiusTop = 1, radiusBottom = 1, height = 2, radialSegments = 12, heightSegments = 1,\r\n                capsTopSegments = 5, capsBottomSegments = 5, thetaStart, thetaLength) {\r\n        super();\r\n\r\n        this.type = 'CapsuleGeometry';\r\n\r\n        this.parameters = {\r\n            radiusTop: radiusTop,               //\r\n            radiusBottom: radiusBottom,         //\r\n            height: height,                     //\r\n            radialSegments: radialSegments,     //\r\n            heightSegments: heightSegments,     //\r\n            thetaStart: thetaStart,             //\r\n            thetaLength: thetaLength,           //\r\n        };\r\n\r\n        radiusTop = radiusTop !== undefined ? radiusTop : 1;\r\n        radiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\r\n        height = height !== undefined ? height : 2;\r\n\r\n        radiusTop = Maths.clamp(radiusTop, 0.001, height);\r\n        radiusBottom = Maths.clamp(radiusBottom, 0.001, height);\r\n        if (height < 0.001) height = 0.001;\r\n\r\n        radialSegments = Math.floor(radialSegments) || 12;\r\n        heightSegments = Math.floor(heightSegments) || 1;\r\n        capsTopSegments = Math.floor(capsTopSegments) || 5;\r\n        capsBottomSegments = Math.floor(capsBottomSegments) || 5;\r\n\r\n        thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\r\n        thetaLength = thetaLength !== undefined ? thetaLength : 2.0 * Math.PI;\r\n\r\n        // Alpha is the angle such that Math.PI/2 - alpha is the cone part angle.\r\n        let alpha = Math.acos((radiusBottom-radiusTop) / height);\r\n        let eqRadii = (radiusTop-radiusBottom === 0);\r\n\r\n        let vertexCount = calculateVertexCount();\r\n        let indexCount = calculateIndexCount();\r\n\r\n        // buffers\r\n        let indices = new THREE.BufferAttribute(new (indexCount > 65535 ? Uint32Array : Uint16Array)(indexCount), 1);\r\n        let vertices = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\r\n        let normals = new THREE.BufferAttribute(new Float32Array(vertexCount * 3), 3);\r\n        let uvs = new THREE.BufferAttribute(new Float32Array(vertexCount * 2), 2);\r\n\r\n        // helper variables\r\n        let index = 0;\r\n        let indexOffset = 0;\r\n        let indexArray = [];\r\n        let halfHeight = height / 2;\r\n\r\n        // generate geometry\r\n        generateTorso();\r\n\r\n        // build geometry\r\n        this.setIndex(indices);\r\n        this.setAttribute('position', vertices);\r\n        this.setAttribute('normal', normals);\r\n        this.setAttribute('uv', uvs);\r\n\r\n        // helper functions\r\n\r\n        function calculateVertexCount(){\r\n            let count = (radialSegments + 1) * (heightSegments + 1 + capsBottomSegments + capsTopSegments);\r\n            return count;\r\n        }\r\n\r\n        function calculateIndexCount() {\r\n            let count = radialSegments * (heightSegments + capsBottomSegments + capsTopSegments) * 2 * 3;\r\n            return count;\r\n        }\r\n\r\n        function generateTorso() {\r\n            let x, y;\r\n            let normal = new THREE.Vector3();\r\n            let vertex = new THREE.Vector3();\r\n\r\n            let cosAlpha = Math.cos(alpha);\r\n            let sinAlpha = Math.sin(alpha);\r\n\r\n            let cone_length =\r\n                new THREE.Vector2(radiusTop * sinAlpha, halfHeight + radiusTop * cosAlpha)\r\n                    .sub(new THREE.Vector2(radiusBottom * sinAlpha, -halfHeight + radiusBottom * cosAlpha))\r\n                    .length();\r\n\r\n            // Total length for v texture coord\r\n            let vl = radiusTop * alpha\r\n                    + cone_length\r\n                    + radiusBottom * ((Math.PI / 2) - alpha);\r\n\r\n            let groupCount = 0;\r\n\r\n            // generate vertices, normals and uvs\r\n\r\n            let v = 0;\r\n            for (y = 0; y <= capsTopSegments; y++) {\r\n                let indexRow = [];\r\n                let a = (Math.PI / 2) - alpha * (y / capsTopSegments);\r\n                v += radiusTop * alpha / capsTopSegments;\r\n\r\n                let cosA = Math.cos(a);\r\n                let sinA = Math.sin(a);\r\n\r\n                // calculate the radius of the current row\r\n                let radius = cosA * radiusTop;\r\n\r\n                for (x = 0; x <= radialSegments; x++) {\r\n                    let u = x / radialSegments;\r\n                    let theta = u * thetaLength + thetaStart;\r\n                    let sinTheta = Math.sin(theta);\r\n                    let cosTheta = Math.cos(theta);\r\n\r\n                    // vertex\r\n                    vertex.x = radius * sinTheta;\r\n                    vertex.y = halfHeight + sinA * radiusTop;\r\n                    vertex.z = radius * cosTheta;\r\n                    vertices.setXYZ(index, vertex.x, vertex.y, vertex.z);\r\n\r\n                    // normal\r\n                    normal.set(cosA * sinTheta, sinA, cosA * cosTheta);\r\n                    normals.setXYZ(index, normal.x, normal.y, normal.z);\r\n\r\n                    // uv\r\n                    uvs.setXY(index, u, 1 - v/vl);\r\n\r\n                    // save index of vertex in respective row\r\n                    indexRow.push(index);\r\n\r\n                    // increase index\r\n                    index ++;\r\n                }\r\n\r\n                // now save vertices of the row in our index array\r\n                indexArray.push(indexRow);\r\n            }\r\n\r\n            let cone_height = height + cosAlpha * radiusTop - cosAlpha * radiusBottom;\r\n            let slope = sinAlpha * (radiusBottom - radiusTop) / cone_height;\r\n            for (y = 1; y <= heightSegments; y++) {\r\n                let indexRow = [];\r\n\r\n                v += cone_length / heightSegments;\r\n\r\n                // calculate the radius of the current row\r\n                let radius = sinAlpha * (y * (radiusBottom - radiusTop) / heightSegments + radiusTop);\r\n\r\n                for (x = 0; x <= radialSegments; x++) {\r\n                    let u = x / radialSegments;\r\n                    let theta = u * thetaLength + thetaStart;\r\n                    let sinTheta = Math.sin(theta);\r\n                    let cosTheta = Math.cos(theta);\r\n\r\n                    // vertex\r\n                    vertex.x = radius * sinTheta;\r\n                    vertex.y = halfHeight + cosAlpha * radiusTop - y * cone_height / heightSegments;\r\n                    vertex.z = radius * cosTheta;\r\n                    vertices.setXYZ(index, vertex.x, vertex.y, vertex.z);\r\n\r\n                    // normal\r\n                    normal.set(sinTheta, slope, cosTheta).normalize();\r\n                    normals.setXYZ(index, normal.x, normal.y, normal.z);\r\n\r\n                    // uv\r\n                    uvs.setXY(index, u, 1 - v / vl);\r\n\r\n                    // save index of vertex in respective row\r\n                    indexRow.push(index);\r\n\r\n                    // increase index\r\n                    index ++;\r\n                }\r\n\r\n                // now save vertices of the row in our index array\r\n                indexArray.push(indexRow);\r\n            }\r\n\r\n            for (y = 1; y <= capsBottomSegments; y++) {\r\n                let indexRow = [];\r\n                let a = ((Math.PI / 2) - alpha) - (Math.PI - alpha) * (y / capsBottomSegments);\r\n                v += radiusBottom * alpha / capsBottomSegments;\r\n                let cosA = Math.cos(a);\r\n                let sinA = Math.sin(a);\r\n\r\n                // calculate the radius of the current row\r\n                let radius = cosA * radiusBottom;\r\n\r\n                for (x = 0; x <= radialSegments; x++) {\r\n                    let u = x / radialSegments;\r\n                    let theta = u * thetaLength + thetaStart;\r\n                    let sinTheta = Math.sin(theta);\r\n                    let cosTheta = Math.cos(theta);\r\n\r\n                    // vertex\r\n                    vertex.x = radius * sinTheta;\r\n                    vertex.y = -halfHeight + sinA * radiusBottom;;\r\n                    vertex.z = radius * cosTheta;\r\n                    vertices.setXYZ(index, vertex.x, vertex.y, vertex.z);\r\n\r\n                    // normal\r\n                    normal.set(cosA * sinTheta, sinA, cosA * cosTheta);\r\n                    normals.setXYZ(index, normal.x, normal.y, normal.z);\r\n\r\n                    // uv\r\n                    uvs.setXY(index, u, 1 - v / vl);\r\n\r\n                    // save index of vertex in respective row\r\n                    indexRow.push(index);\r\n\r\n                    // increase index\r\n                    index++;\r\n                }\r\n\r\n                // now save vertices of the row in our index array\r\n                indexArray.push( indexRow );\r\n            }\r\n\r\n            // generate indices\r\n            for (x = 0; x < radialSegments; x++) {\r\n                for (y = 0; y < capsTopSegments + heightSegments + capsBottomSegments; y++) {\r\n\r\n                    // we use the index array to access the correct indices\r\n                    let i1 = indexArray[y][x];\r\n                    let i2 = indexArray[y + 1][x];\r\n                    let i3 = indexArray[y + 1][x + 1];\r\n                    let i4 = indexArray[y][x + 1];\r\n\r\n                    // face one\r\n                    indices.setX(indexOffset, i1); indexOffset++;\r\n                    indices.setX(indexOffset, i2); indexOffset++;\r\n                    indices.setX(indexOffset, i4); indexOffset++;\r\n\r\n                    // face two\r\n                    indices.setX(indexOffset, i2); indexOffset++;\r\n                    indices.setX(indexOffset, i3); indexOffset++;\r\n                    indices.setX(indexOffset, i4); indexOffset++;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromPoints(pointA, pointB, radiusA, radiusB, radialSegments, heightSegments,\r\n            capsTopSegments, capsBottomSegments, thetaStart, thetaLength) {\r\n        let cmin = null;\r\n        let cmax = null;\r\n        let rmin = null;\r\n        let rmax = null;\r\n\r\n        if(radiusA > radiusB){\r\n            cmax = pointA;\r\n            cmin = pointB;\r\n            rmax = radiusA;\r\n            rmin = radiusB;\r\n        }else{\r\n            cmax = pointA;\r\n            cmin = pointB;\r\n            rmax = radiusA;\r\n            rmin = radiusB;\r\n        }\r\n\r\n        const c0 = cmin;\r\n        const c1 = cmax;\r\n        const r0 = rmin;\r\n        const r1 = rmax;\r\n\r\n        const sphereCenterTop = new THREE.Vector3(c0.x, c0.y, c0.z);\r\n        const sphereCenterBottom = new THREE.Vector3(c1.x, c1.y, c1.z);\r\n\r\n        const radiusTop = r0;\r\n        const radiusBottom = r1;\r\n        let height = sphereCenterTop.distanceTo(sphereCenterBottom);\r\n\r\n        // If the big sphere contains the small one, return a SphereGeometry\r\n        if (height < Math.abs(r0 - r1)){\r\n            let g = new THREE.SphereGeometry(r1, radialSegments, capsBottomSegments, thetaStart, thetaLength);\r\n            g.translate(r1.x, r1.y, r1.z);\r\n            return g;\r\n        }\r\n\r\n        // useful values\r\n        const alpha = Math.acos((radiusBottom - radiusTop) / height);\r\n        const cosAlpha = Math.cos(alpha);\r\n\r\n        // compute rotation matrix\r\n        const rotationMatrix = new THREE.Matrix4();\r\n        const quaternion = new THREE.Quaternion();\r\n        const capsuleModelUnitVector = new THREE.Vector3(0, 1, 0);\r\n        const capsuleUnitVector = new THREE.Vector3();\r\n        capsuleUnitVector.subVectors(sphereCenterTop, sphereCenterBottom);\r\n        capsuleUnitVector.normalize();\r\n        quaternion.setFromUnitVectors(capsuleModelUnitVector, capsuleUnitVector);\r\n        rotationMatrix.makeRotationFromQuaternion(quaternion);\r\n\r\n        // compute translation matrix from center point\r\n        const translationMatrix = new THREE.Matrix4();\r\n        const cylVec = new THREE.Vector3();\r\n        cylVec.subVectors(sphereCenterTop, sphereCenterBottom);\r\n        cylVec.normalize();\r\n        let cylTopPoint = new THREE.Vector3();\r\n        cylTopPoint = sphereCenterTop;\r\n        cylTopPoint.addScaledVector(cylVec, cosAlpha * radiusTop);\r\n        let cylBottomPoint = new THREE.Vector3();\r\n        cylBottomPoint = sphereCenterBottom;\r\n        cylBottomPoint.addScaledVector(cylVec, cosAlpha * radiusBottom);\r\n\r\n        // computing lerp for color\r\n        const dir = new THREE.Vector3();\r\n        dir.subVectors(cylBottomPoint, cylTopPoint);\r\n        dir.normalize();\r\n\r\n        const middlePoint = new THREE.Vector3();\r\n        middlePoint.lerpVectors(cylBottomPoint, cylTopPoint, 0.5);\r\n        translationMatrix.makeTranslation(middlePoint.x, middlePoint.y, middlePoint.z);\r\n\r\n        // Instanciate a CylinderGeometry from three.js\r\n        let g = new CapsuleGeometry(radiusBottom, radiusTop, height, radialSegments, heightSegments, capsTopSegments, capsBottomSegments, thetaStart, thetaLength);\r\n\r\n        // applying transformations\r\n        g.applyMatrix(rotationMatrix);\r\n        g.applyMatrix(translationMatrix);\r\n\r\n        return g;\r\n    }\r\n\r\n}\r\n\r\nexport { CapsuleGeometry };\r\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description CylinderGeometry\n// @about       CylinderGeometry\n// @license     MIT - Copyright (c) 2010-2022 mrdoob and three.js authors\n// @source      https://github.com/mrdoob/three.js/blob/master/src/geometries/CylinderGeometry.js\n// @version     Jun 24, 2021\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Standard CylinderGeometry, modified by stevinz to not include zero sized triangles\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nclass CylinderGeometry extends THREE.BufferGeometry {\n\n    constructor(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n        super();\n        this.type = 'CylinderGeometry';\n\n        this.parameters = {\n            radiusTop: radiusTop,\n            radiusBottom: radiusBottom,\n            height: height,\n            radialSegments: radialSegments,\n            heightSegments: heightSegments,\n            openEnded: openEnded,\n            thetaStart: thetaStart,\n            thetaLength: thetaLength\n        };\n\n        const scope = this;\n\n        radialSegments = Math.floor(radialSegments);\n        heightSegments = Math.floor(heightSegments);\n\n        // buffers\n        const indices = [];\n        const vertices = [];\n        const normals = [];\n        const uvs = [];\n\n        // helper variables\n        let index = 0;\n        const indexArray = [];\n        const halfHeight = height / 2;\n        let groupStart = 0;\n\n        // generate geometry\n        generateTorso();\n\n        if (! openEnded) {\n            if (radiusTop > 0) generateCap(true);\n            if (radiusBottom > 0) generateCap(false);\n        }\n\n        // build geometry\n        this.setIndex(indices);\n        this.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));\n        this.setAttribute('normal', new THREE.Float32BufferAttribute(normals, 3));\n        this.setAttribute('uv', new THREE.Float32BufferAttribute(uvs, 2));\n\n        function generateTorso() {\n            const normal = new THREE.Vector3();\n            const vertex = new THREE.Vector3();\n\n            let groupCount = 0;\n\n            // this will be used to calculate the normal\n            const slope = (radiusBottom - radiusTop) / height;\n\n            // generate vertices, normals and uvs\n            for (let y = 0; y <= heightSegments; y++) {\n                const indexRow = [];\n                const v = y / heightSegments;\n\n                // calculate the radius of the current row\n                const radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n                for (let x = 0; x <= radialSegments; x++) {\n                    const u = x / radialSegments;\n\n                    const theta = u * thetaLength + thetaStart;\n\n                    const sinTheta = Math.sin(theta);\n                    const cosTheta = Math.cos(theta);\n\n                    // vertex\n                    vertex.x = radius * sinTheta;\n                    vertex.y = -v * height + halfHeight;\n                    vertex.z = radius * cosTheta;\n                    vertices.push(vertex.x, vertex.y, vertex.z);\n\n                    // normal\n                    normal.set(sinTheta, slope, cosTheta).normalize();\n                    normals.push(normal.x, normal.y, normal.z);\n\n                    // uv\n                    uvs.push(u, 1 - v);\n\n                    // save index of vertex in respective row\n                    indexRow.push(index++);\n                }\n\n                // now save vertices of the row in our index array\n                indexArray.push(indexRow);\n            }\n\n            // generate indices\n            for (let x = 0; x < radialSegments; x++) {\n                for (let y = 0; y < heightSegments; y++) {\n                    // we use the index array to access the correct indices\n                    const a = indexArray[y    ][x    ];\n                    const b = indexArray[y + 1][x    ];\n                    const c = indexArray[y + 1][x + 1];\n                    const d = indexArray[y    ][x + 1];\n\n                    const vecA = new THREE.Vector3(vertices[(a * 3) + 0], vertices[(a * 3) + 1], vertices[(a * 3) + 2]);\n                    const vecB = new THREE.Vector3(vertices[(b * 3) + 0], vertices[(b * 3) + 1], vertices[(b * 3) + 2]);\n                    const vecC = new THREE.Vector3(vertices[(c * 3) + 0], vertices[(c * 3) + 1], vertices[(c * 3) + 2]);\n                    const vecD = new THREE.Vector3(vertices[(d * 3) + 0], vertices[(d * 3) + 1], vertices[(d * 3) + 2]);\n                    const triangleABD = new THREE.Triangle(vecA, vecB, vecD);\n                    const triangleBCD = new THREE.Triangle(vecB, vecC, vecD);\n\n                    // faces\n                    if (triangleABD.getArea() > 0.0001) { indices.push(a, b, d); groupCount += 3; }\n                    if (triangleBCD.getArea() > 0.0001) { indices.push(b, c, d); groupCount += 3; }\n                }\n            }\n\n            // add a group to the geometry. this will ensure multi material support\n            scope.addGroup(groupStart, groupCount, 0);\n\n            // calculate new start value for groups\n            groupStart += groupCount;\n        }\n\n        function generateCap(top) {\n            // save the index of the first center vertex\n            const centerIndexStart = index;\n\n            const uv = new THREE.Vector2();\n            const vertex = new THREE.Vector3();\n\n            let groupCount = 0;\n\n            const radius = (top === true) ? radiusTop : radiusBottom;\n            const sign = (top === true) ? 1 : -1;\n\n            // first we generate the center vertex data of the cap.\n            // because the geometry needs one set of uvs per face,\n            // we must generate a center vertex per face/segment\n            for (let x = 1; x <= radialSegments; x++) {\n                // vertex\n                vertices.push(0, halfHeight * sign, 0);\n\n                // normal\n                normals.push(0, sign, 0);\n\n                // uv\n                uvs.push(0.5, 0.5);\n\n                // increase index\n                index++;\n            }\n\n            // save the index of the last center vertex\n            const centerIndexEnd = index;\n\n            // now we generate the surrounding vertices, normals and uvs\n            for ( let x = 0; x <= radialSegments; x ++ ) {\n                const u = x / radialSegments;\n                const theta = u * thetaLength + thetaStart;\n                const cosTheta = Math.cos(theta);\n                const sinTheta = Math.sin(theta);\n\n                // vertex\n                vertex.x = radius * sinTheta;\n                vertex.y = halfHeight * sign;\n                vertex.z = radius * cosTheta;\n                vertices.push(vertex.x, vertex.y, vertex.z);\n\n                // normal\n                normals.push(0, sign, 0);\n\n                // uv\n                uv.x = (cosTheta * 0.5) + 0.5;\n                uv.y = (sinTheta * 0.5 * sign) + 0.5;\n                uvs.push(uv.x, uv.y);\n\n                // increase index\n                index++;\n            }\n\n            // generate indices\n            for (let x = 0; x < radialSegments; x++) {\n                const c = centerIndexStart + x;\n                const i = centerIndexEnd + x;\n\n                if (top === true) {\n                    // face top\n                    indices.push(i, i + 1, c);\n                } else {\n                    // face bottom\n                    indices.push(i + 1, i, c);\n                }\n\n                groupCount += 3;\n            }\n\n            // add a group to the geometry. this will ensure multi material support\n            scope.addGroup(groupStart, groupCount, top === true ? 1 : 2);\n\n            // calculate new start value for groups\n            groupStart += groupCount;\n        }\n    }\n\n    static fromJSON(data) {\n        return new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n    }\n\n}\n\nexport { CylinderGeometry };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nimport * as THREE from 'three';\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   PrismGeometry\n/////////////////////////////////////////////////////////////////////////////////////\n\n/** Extrudes polygon 'vertices' into 3D by 'height' amount */\nclass PrismGeometry extends THREE.ExtrudeGeometry {\n\n    constructor(vertices, height) {\n\n        let shape = new THREE.Shape();\n\n        (function makeShapeFromVertices(s) {\n            s.moveTo(vertices[0].x, vertices[0].y);\n            for (let i = 1; i < vertices.length; i++) {\n                s.lineTo(vertices[i].x, vertices[i].y);\n            }\n            s.lineTo(vertices[0].x, vertices[0].y);\n        })(shape);\n\n        const extrudeSettings = {\n            steps: 2,\n            depth: height,\n            bevelEnabled: false,\n        };\n\n        super(shape, extrudeSettings);\n\n        this.vertices = vertices;\n        this.height = height;\n\n    } // end ctor\n\n    clone() {\n        return new this.constructor(this.vertices, this.height).copy(this);\n    }\n}\n\nexport { PrismGeometry };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nimport * as THREE from 'three';\n\nimport { Line2 } from 'three/addons/lines/Line2.js';\nimport { LineGeometry } from 'three/addons/lines/LineGeometry.js';\nimport { LineMaterial } from 'three/addons/lines/LineMaterial.js';\nimport { LineSegmentsGeometry } from 'three/addons/lines/LineSegmentsGeometry.js';\nimport { Wireframe } from 'three/addons/lines/Wireframe.js';\nimport { WireframeGeometry2 } from 'three/addons/lines/WireframeGeometry2.js';\n\nimport { ObjectUtils } from '../utils/ObjectUtils.js';\nimport { Vectors } from '../../core/Vectors.js';\n\n///// Local Functions\n\nfunction setWireframeMaterialDefaults(material) {\n    material.transparent = true;\n    // material.vertexColors = false;\n    // material.dashed = false;\n\n    material.resolution = new THREE.Vector2(1024, 1024);\n\n    material.depthTest = true;\n    material.depthWrite = false;\n    material.polygonOffset = true;\n    material.polygonOffsetFactor = 1; // positive value pushes polygon further away\n\n    material.side = THREE.DoubleSide;\n\n    material.alphaToCoverage = true;\n    //material.depthFunc = THREE.AlwaysDepth;\n}\n\n///// Local Variables\n\nconst _objQuaternion = new THREE.Quaternion();\nconst _objScale = new THREE.Vector3();\nconst _objPosition = new THREE.Vector3();\nconst _tempScale = new THREE.Vector3();\nconst _tempSize = new THREE.Vector3();\nconst _box = new THREE.Box3();\n\nconst _indices = new Uint16Array([ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ]);\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Simple Lines\n/////////////////////////////////////////////////////////////////////////////////////\n\n/** Basic single pixel width line between two points */\nclass BasicLine extends THREE.LineSegments {\n    constructor(x1, y1, z1, x2, y2, z2, boxColor = 0xffffff) {\n        // Geometry\n        const vertices = [\n            x1, y1, z1,\n            x2, y2, z2,\n        ];\n        const indices = [0, 1];\n        const lineGeometry = new THREE.BufferGeometry();\n        lineGeometry.setIndex(indices);\n        lineGeometry.setAttribute('position', new THREE.Float32BufferAttribute(vertices, 3));   // '3' is stride\n\n        // Material\n        const lineMaterial = new THREE.LineBasicMaterial({ color: boxColor });\n        setWireframeMaterialDefaults(lineMaterial);\n        lineMaterial.wireframe = true;\n\n        // Build Line\n        super(lineGeometry, lineMaterial);\n    }\n\n    clone() {\n        const array = this.geometry.attributes.position.array;\n        array[0] = point1.x; array[1] = point1.y; array[2] = point1.z;\n        array[3] = point2.x; array[4] = point2.y; array[5] = point2.z;\n        return new this.constructor(array[0], array[1], array[2], array[3], array[4], array[5]).copy(this, true);\n    }\n\n    setPoints(point1, point2) {\n        Vectors.sanity(point1);\n        Vectors.sanity(point2);\n        const array = this.geometry.attributes.position.array;\n        array[0] = point1.x; array[1] = point1.y; array[2] = point1.z;\n        array[3] = point2.x; array[4] = point2.y; array[5] = point2.z;\n        this.geometry.attributes.position.needsUpdate = true;\n        this.geometry.computeBoundingSphere();\n    }\n}\n\n/** Variable width line object between two points */\nclass FatLine extends Line2 {\n    constructor(x1, y1, z1, x2, y2, z2, lineWidth = 1, boxColor = 0xffffff) {\n        const lineGeometry = new LineGeometry();\n\n        const lineMaterial = new LineMaterial({\n            color: boxColor,\n            linewidth: lineWidth,       // in world units with size attenuation, pixels otherwise\n        });\n        setWireframeMaterialDefaults(lineMaterial);\n\n        const positions = [x1, y1, z1, x2, y2, z2];\n        lineGeometry.setPositions(positions);\n\n        super(lineGeometry, lineMaterial);\n\n        this.computeLineDistances();\n        this.scale.set(1, 1, 1);\n\n        this.point1 = new THREE.Vector3(x1, y1, z1);\n        this.point2 = new THREE.Vector3(x2, y2, z2);\n    }\n\n    clone() {\n        return new this.constructor(this.point1.x, this.point1.y, this.point1.z,\n            this.point2.x, this.point2.y, this.point2.z).copy(this, true);\n    }\n\n    setPoints(point1, point2) {\n        Vectors.sanity(point1);\n        Vectors.sanity(point2);\n        this.point1.copy(point1);\n        this.point2.copy(point2);\n        const positions = [point1.x, point1.y, point1.z, point2.x, point2.y, point2.z];\n        this.geometry.setPositions(positions);\n        this.computeLineDistances();\n    }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Wireframe Boxes (cubes with no cross lines)\n/////////////////////////////////////////////////////////////////////////////////////\n\n/** Single pixel width wireframe cube (used for 3d bounding box when calculating rubber band selection */\nclass BasicWireBox extends THREE.LineSegments {\n    constructor(object, boxColor = 0xffffff, opacity = 1.0, matchTransform = false) {\n        // Create new geomtry from lines\n        const lineGeometry = new THREE.WireframeGeometry();\n\n        // Material\n        const lineMaterial = new THREE.LineBasicMaterial({\n            color: boxColor,\n            opacity: opacity,\n        });\n        setWireframeMaterialDefaults(lineMaterial);\n\n        // Build line box\n        super(lineGeometry, lineMaterial);\n\n        // Members\n        this._positions = new Float32Array(8 * 3);      // Box data\n        this.points = [];                               // To store points\n        for (let i = 0; i < 8; i++) this.points.push(new THREE.Vector3());\n\n        // Apply geometry\n        if (object) this.updateFromObject(object, matchTransform);\n\n        // Clone function\n        this.clone = function() {\n            return new this.constructor(object, boxColor, opacity, matchTransform).copy(this, true);\n        }\n    }\n\n    disableDepthTest() {\n        this.material.depthTest = false;\n    }\n\n    updateFromObject(object, matchTransform) {\n        let updateObject = object.clone();\n\n        // Get object transform info, clear info to compute box\n        if (matchTransform) {\n            object.getWorldPosition(_objPosition);\n            object.getWorldQuaternion(_objQuaternion);\n            object.getWorldScale(_objScale);\n            updateObject.lookAtCamera = false;\n            updateObject.position.set(0, 0, 0);\n            updateObject.rotation.set(0, 0, 0);\n            updateObject.scale.set(1, 1, 1);\n            updateObject.updateMatrixWorld(true);\n        }\n\n        // Set points from Box3 bounding box\n        _box.setFromObject(updateObject);\n        const min = _box.min;\n        const max = _box.max;\n        Vectors.sanity(_box.min);\n        Vectors.sanity(_box.max);\n\n        // Assign points\n        let array = this._positions;\n        array[ 0] = max.x; array[ 1] = max.y; array[ 2] = max.z;\n        array[ 3] = min.x; array[ 4] = max.y; array[ 5] = max.z;\n        array[ 6] = min.x; array[ 7] = min.y; array[ 8] = max.z;\n        array[ 9] = max.x; array[10] = min.y; array[11] = max.z;\n        array[12] = max.x; array[13] = max.y; array[14] = min.z;\n        array[15] = min.x; array[16] = max.y; array[17] = min.z;\n        array[18] = min.x; array[19] = min.y; array[20] = min.z;\n        array[21] = max.x; array[22] = min.y; array[23] = min.z;\n\n        // * Copy lines from indices\n        const positions = [];\n        for (let i = _indices.length - 1; i > 0; i -= 2) {\n            const index1 = (_indices[i - 0]) * 3;\n            const index2 = (_indices[i - 1]) * 3;\n            positions.push(array[index1 + 0], array[index1 + 1], array[index1 + 2]);\n            positions.push(array[index2 + 0], array[index2 + 1], array[index2 + 2]);\n        }\n        this.geometry.setAttribute('position', new THREE.Float32BufferAttribute(positions, 3));\n\n        // Match box transform to object\n        if (matchTransform) {\n            this.setRotationFromQuaternion(_objQuaternion);\n            this.scale.set(_objScale.x, _objScale.y, _objScale.z);\n            this.position.set(_objPosition.x, _objPosition.y, _objPosition.z);\n        }\n\n        this.updateMatrixWorld(true);\n        ObjectUtils.clearObject(updateObject);\n    }\n\n    getPoints() {\n        for (let i = 0; i < 8; i++) {\n            const index = (i * 3);\n            this.points[i].x = this.geometry.attributes.position.array[index + 0];\n            this.points[i].y = this.geometry.attributes.position.array[index + 1];\n            this.points[i].z = this.geometry.attributes.position.array[index + 2];\n            this.localToWorld(this.points[i]);\n        }\n        return this.points;\n    }\n\n    getLocalPoints() {\n        for (let i = 0; i < 8; i++) {\n            const index = (i * 3);\n            this.points[i].x = this._positions[index + 0];\n            this.points[i].y = this._positions[index + 1];\n            this.points[i].z = this._positions[index + 2];\n        }\n        return this.points;\n    }\n\n    getBox3(targetBox3) {\n        //      Point 0: Right  Top     Front (z positive)\n        //      Point 1: Left   Top     Front\n        //      Point 2: Left   Down    Front\n        //      Point 3: Right  Down    Front\n        //      Point 4: Right  Top     Back (z negative)\n        //      Point 5: Left   Top     Back\n        //      Point 6: Left   Down    Back\n        //      Point 7: Right  Down    Back\n        const points = this.getLocalPoints();\n        targetBox3 = targetBox3 ?? new THREE.Box3();\n        targetBox3.min.x = points[6].x;\n        targetBox3.min.y = points[6].y;\n        targetBox3.min.z = points[6].z;\n        targetBox3.max.x = points[0].x;\n        targetBox3.max.y = points[0].y;\n        targetBox3.max.z = points[0].z;\n    }\n}\n\n/** Variable line width wireframe cube */\nclass FatWireBox extends Line2 {\n    constructor(object, lineWidth = 1, boxColor = 0xffffff, opacity = 1.0, matchTransform = false) {\n        // Create new geomtry from lines\n        const lineGeometry = new LineSegmentsGeometry();\n\n        // Material\n        const lineMaterial = new LineMaterial({\n            color: boxColor,\n            linewidth: lineWidth,       // in world units with size attenuation, pixels otherwise\n            opacity: opacity,\n        });\n        setWireframeMaterialDefaults(lineMaterial);\n        lineMaterial.depthTest = false;\n\n        // Build line box\n        super(lineGeometry, lineMaterial);\n\n        // Members\n        this._positions = new Float32Array(8 * 3);      // Box data\n        this.points = [];                               // To store points\n        for (let i = 0; i <  8; i++) this.points.push(new THREE.Vector3());\n\n        // Apply geometry\n        if (object) this.updateFromObject(object, matchTransform);\n\n        // Clone function\n        this.clone = function() {\n            return new this.constructor(object, lineWidth, boxColor, opacity, matchTransform).copy(this, true);\n        }\n    }\n\n    disableDepthTest() {\n        this.material.depthTest = false;\n    }\n\n    updateFromObject(object, matchTransform) {\n        let updateObject = object.clone();\n\n        // Get object transform info, clear info to compute box\n        if (matchTransform) {\n            object.getWorldPosition(_objPosition);\n            object.getWorldQuaternion(_objQuaternion);\n            object.getWorldScale(_objScale);\n            updateObject.lookAtCamera = false;\n            updateObject.position.set(0, 0, 0);\n            updateObject.rotation.set(0, 0, 0);\n            updateObject.scale.set(1, 1, 1);\n            updateObject.updateMatrixWorld(true);\n        }\n\n        // Set points from Box3 bounding box\n        _box.setFromObject(updateObject);\n        const min = _box.min;\n        const max = _box.max;\n        Vectors.sanity(_box.min);\n        Vectors.sanity(_box.max);\n\n        // Assign points\n        let array = this._positions;\n        array[ 0] = max.x; array[ 1] = max.y; array[ 2] = max.z;\n        array[ 3] = min.x; array[ 4] = max.y; array[ 5] = max.z;\n        array[ 6] = min.x; array[ 7] = min.y; array[ 8] = max.z;\n        array[ 9] = max.x; array[10] = min.y; array[11] = max.z;\n        array[12] = max.x; array[13] = max.y; array[14] = min.z;\n        array[15] = min.x; array[16] = max.y; array[17] = min.z;\n        array[18] = min.x; array[19] = min.y; array[20] = min.z;\n        array[21] = max.x; array[22] = min.y; array[23] = min.z;\n\n        // * Copy lines from indices\n        const positions = [];\n        for (let i = _indices.length - 1; i > 0; i -= 2) {\n            const index1 = (_indices[i - 0]) * 3;\n            const index2 = (_indices[i - 1]) * 3;\n            positions.push(array[index1 + 0], array[index1 + 1], array[index1 + 2]);\n            positions.push(array[index2 + 0], array[index2 + 1], array[index2 + 2]);\n        }\n        this.geometry.setPositions(positions);\n\n        // Match box transform to object\n        if (matchTransform) {\n            this.setRotationFromQuaternion(_objQuaternion);\n            this.scale.set(_objScale.x, _objScale.y, _objScale.z);\n            this.position.set(_objPosition.x, _objPosition.y, _objPosition.z);\n        }\n\n        this.updateMatrixWorld(true);\n        ObjectUtils.clearObject(updateObject);\n    }\n\n    getPoints() {\n        for (let i = 0; i < 8; i++) {\n            const index = (i * 3);\n            this.points[i].x = this.geometry.attributes.position.array[index + 0];\n            this.points[i].y = this.geometry.attributes.position.array[index + 1];\n            this.points[i].z = this.geometry.attributes.position.array[index + 2];\n            this.localToWorld(this.points[i]);\n        }\n        return this.points;\n    }\n\n    getLocalPoints() {\n        for (let i = 0; i < 8; i++) {\n            const index = (i * 3);\n            this.points[i].x = this._positions[index + 0];\n            this.points[i].y = this._positions[index + 1];\n            this.points[i].z = this._positions[index + 2];\n        }\n        return this.points;\n    }\n\n    getAbsoluteSize(target) {\n        this.getSize(target);\n        target.x = Math.abs(target.x);\n        target.y = Math.abs(target.y);\n        target.z = Math.abs(target.z);\n    }\n\n    getAverageSize() {\n        this.getSize(_tempSize);\n        return ((_tempSize.x + _tempSize.y + _tempSize.z) / 3.0);\n    }\n\n    getBox3(targetBox3) {\n        //\t\tPoint 0: Right\tTop\t\tFront (z positive)\n        //\t\tPoint 1: Left\tTop\t\tFront\n        //\t\tPoint 2: Left\tDown\tFront\n        //\t\tPoint 3: Right\tDown\tFront\n        //\t\tPoint 4: Right\tTop\t\tBack (z negative)\n        //\t\tPoint 5: Left\tTop\t\tBack\n        //\t\tPoint 6: Left\tDown\tBack\n        //\t\tPoint 7: Right\tDown\tBack\n        const points = this.getLocalPoints();\n        targetBox3 = targetBox3 ?? new THREE.Box3();\n        targetBox3.min.x = points[6].x;\n        targetBox3.min.y = points[6].y;\n        targetBox3.min.z = points[6].z;\n        targetBox3.max.x = points[0].x;\n        targetBox3.max.y = points[0].y;\n        targetBox3.max.z = points[0].z;\n    }\n\n    getSize(target) {\n        this.getWorldScale(_tempScale);\n        const points = this.getLocalPoints();\n        target.x = (points[0].x - points[6].x) * Math.abs(_tempScale.x);    // Width\n        target.y = (points[0].y - points[6].y) * Math.abs(_tempScale.y);    // Height\n        target.z = (points[0].z - points[6].z) * Math.abs(_tempScale.z);    // Depth\n        // console.info(`Width: ${target.x}, Height: ${target.y}, Depth: ${target.z}`);\n    }\n\n    getMaxSize() {\n        this.getSize(_tempSize);\n        return Math.max(Math.max(_tempSize.x, _tempSize.y), _tempSize.z);\n    }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Wireframes - clone of object geometry\n/////////////////////////////////////////////////////////////////////////////////////\n\n/** Basic (single pixel) wireframe */\nclass BasicWireframe extends THREE.LineSegments {\n    constructor(object, wireframeColor, opacity = 1.0, copyObjectTransform = false) {\n        // Using standard wireframe function\n        const wireframeGeometry = new THREE.WireframeGeometry(object.geometry);\n        const lineMaterial = new THREE.LineBasicMaterial({\n            color: wireframeColor,\n            opacity: opacity,\n        });\n        setWireframeMaterialDefaults(lineMaterial);\n\n        // Mesh\n        super(wireframeGeometry, lineMaterial);\n        if (copyObjectTransform) {\n            this.rotation.set(object.rotation.x, object.rotation.y, object.rotation.z);\n            this.scale.set(object.scale.x, object.scale.y, object.scale.z);\n            this.position.set(object.position.x, object.position.y, object.position.z);\n        }\n\n        // Clone function\n        this.clone = function() {\n            return new this.constructor(object, wireframeColor, opacity, copyObjectTransform).copy(this, true);\n        }\n    }\n}\n\n/** Variable line width wireframe */\nclass FatWireframe extends Wireframe {\n    constructor(object, lineWidth, wireframeColor, opacity = 1.0, copyObjectTransform = false) {\n        // Geometry - Using fat line functions\n        const wireframeGeometry = new WireframeGeometry2(object.geometry);\n        const lineMaterial = new LineMaterial({\n            color: wireframeColor,\n            linewidth: lineWidth,           // in world units with size attenuation, pixels otherwise\n            resolution: new THREE.Vector2(500, 500),\n            opacity: opacity,\n        });\n        setWireframeMaterialDefaults(lineMaterial);\n        lineMaterial.depthTest = false;\n\n        // Mesh\n        super(wireframeGeometry, lineMaterial);\n        if (copyObjectTransform) {\n            this.rotation.set(object.rotation.x, object.rotation.y, object.rotation.z);\n            this.scale.set(object.scale.x, object.scale.y, object.scale.z);\n            this.position.set(object.position.x, object.position.y, object.position.z);\n        }\n\n        // Clone function\n        this.clone = function() {\n            return new this.constructor(object, lineWidth, wireframeColor, opacity, copyObjectTransform).copy(this, true);\n        }\n    }\n}\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Exports\n/////////////////////////////////////////////////////////////////////////////////////\n\nexport {\n    // Lines\n    BasicLine,\n    FatLine,\n    // Boxes\n    BasicWireBox,\n    FatWireBox,\n    // Wireframe\n    BasicWireframe,\n    FatWireframe,\n};","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   HelperObject\n/////////////////////////////////////////////////////////////////////////////////////\n\n/** Returns proper helper object for given Object3D */\nclass HelperObject {\n\n    fromObject(object) {\n        let geometry = new THREE.SphereGeometry(2, 4, 2);\n        let material = new THREE.MeshBasicMaterial({ color: 0xff0000, visible: false });\n\n        let helper;\n        if (object.isCamera) {\n            helper = new THREE.CameraHelper(object);\n        } else if (object.isPointLight) {\n            helper = new THREE.PointLightHelper(object, 1);\n        } else if (object.isDirectionalLight) {\n            helper = new THREE.DirectionalLightHelper(object, 1);\n        } else if (object.isSpotLight) {\n            helper = new THREE.SpotLightHelper(object);\n        } else if (object.isHemisphereLight) {\n            helper = new THREE.HemisphereLightHelper(object, 1);\n        } else if (object.isSkinnedMesh) {\n            helper = new THREE.SkeletonHelper(object.skeleton.bones[0]);\n        } else {\n            // no helper for this object type\n            return undefined;\n        }\n\n        const picker = new THREE.Mesh(geometry, material);\n        picker.name = 'picker';\n        picker.userData.object = object;\n        helper.add(picker);\n\n        return helper;\n    }\n\n}\n\nexport { HelperObject };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/mrdoob/three.js/blob/master/examples/jsm/objects/Sky.js\n//      MIT     https://github.com/tentone/nunuStudio/blob/master/source/core/objects/misc/Sky.js\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\n///// Constants\n\nconst SCALE = 500;\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   SkyObject\n/////////////////////////////////////////////////////////////////////////////////////\n\nclass SkyObject extends THREE.Mesh {\n\n    constructor() {\n        const shader = SkyObject.SkyShader;\n\n        super(new THREE.SphereGeometry(1), new THREE.ShaderMaterial({\n            name:           'SkyShader',\n            fragmentShader: shader.fragmentShader,\n            vertexShader:   shader.vertexShader,\n            uniforms:       THREE.UniformsUtils.clone(shader.uniforms),\n            side:           THREE.BackSide,\n            depthTest:      false,\n            depthWrite:     false\n        }));\n\n        this.isSky = true;\n\n        this.baseScale = SCALE;\n        this.scale.setScalar(this.baseScale);\n    }\n\n    copy(source, recursive) {\n        super.copy(source, recursive);\n\n        this.baseScale = source.baseScale;\n        this.scale.setScalar(this.baseScale);\n\n        return this;\n    }\n\n}\n\n//////////////////// Shader\n\nSkyObject.SkyShader = {\n\n    uniforms: {\n        //'uSky':   { value: new THREE.Color(0.32, 0.51, 0.74) },   // sky blue\n        'uSky':     { value: new THREE.Color(0.00, 0.85, 0.80) },   // icon\n        //'uHorizon': { value: new THREE.Color(1.00, 1.00, 1.00) }, // white\n        'uHorizon': { value: new THREE.Color(1.00, 0.75, 0.50) },   // bright yellow\n        'uGround':  { value: new THREE.Color(0.90, 0.70, 0.50) },   // tan 230, 179, 128\n        'uScale':   { value: SCALE },\n    },\n\n    vertexShader: /* glsl */`\n        varying vec3 \tvWorldPosition;\n\n        void main() {\n            vec4 worldPosition = modelMatrix * vec4(position, 1.0);\n            vWorldPosition = worldPosition.xyz;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }`,\n\n    fragmentShader: /* glsl */`\n        uniform vec3    uSky;\n        uniform vec3    uHorizon;\n        uniform vec3    uGround;\n        uniform float   uScale;\n        varying vec3    vWorldPosition;\n\n        void main() {\n            float lowerGround =         0.0;\n            float h = normalize(vWorldPosition + lowerGround).y;\n\n            ///// Sky fade (brighten at horizon)\n            float skyFade = pow(vWorldPosition.y / (uScale * 0.25), 0.4);\n            skyFade = clamp(skyFade, 0.0, 1.0);\n            vec3 sky = mix(uHorizon, uSky, skyFade);\n\n            ///// Seperates ground and sky, solid horizon: clamp(h * uScale, 0.0, 1.0)\n            float blurHorizon =         0.05;\n            float compressHorizon =     5.0;\n            float skyMix = max(pow(max(h, 0.0), blurHorizon) * compressHorizon, 0.0);\n            skyMix = clamp(skyMix, 0.0, 1.0);\n            vec3 outColor = mix(uGround, sky, skyMix);\n\n            ///// Output Color\n            gl_FragColor = vec4(outColor, 1.0);\n        }`\n\n};\n\nexport { SkyObject };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  DepthShader\n//      Depth texture visualization shader\n//\n//  Additional Source(s)\n//      MIT     https://github.com/mrdoob/three.js/blob/master/examples/webgl_depth_texture.html\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nconst DepthShader = {\n\n    defines: {},\n\n    transparent: true,\n    depthTest: false,\n    depthWrite: false,\n\n    uniforms: {\n        'tDiffuse': { value: null },\n        'tDepth': { value: null },\n        'cameraNear': { value: 0.01 },\n        'cameraFar': { value: 1000 },\n        'weight': { value: 2.0 },\n    },\n\n    vertexShader: /* glsl */`\n        varying vec2 vUv;\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n        }`,\n\n    //\n    // Alternatively, look into depth packing functions:\n    //      https://github.com/mrdoob/three.js/blob/master/src/renderers/shaders/ShaderChunk/packing.glsl.js\n    //\n    // Starting Camera Properties\n    //      Perspective:    Near:  0.01, Far: 1000\n    //      Orthographic:   Near: -1000, Far: 1000\n    //\n    fragmentShader: /* glsl */`\n        varying vec2 vUv;\n        uniform sampler2D tDiffuse;\n        uniform sampler2D tDepth;\n        uniform float cameraNear;\n        uniform float cameraFar;\n        uniform float weight;\n\n        void main() {\n            vec4  diffuse   = texture2D(tDiffuse, vUv);\n            float depth     = texture2D(tDepth, vUv).x;\n\n            if (depth >= 0.999) {\n                gl_FragColor = texture2D(tDiffuse, vUv);        // discard unwritten depth\n            } else {\n                depth = ((depth - 0.5) * weight) + 0.5;         // add weight to objects in middle of camera range\n                gl_FragColor = vec4(vec3(1.0 - depth), 1.0);\n            }\n        }\n    `\n};\n\nexport { DepthShader };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/mrdoob/three.js/blob/master/examples/webgl_depth_texture.html\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { CopyShader } from 'three/addons/shaders/CopyShader.js';\nimport { FullScreenQuad, Pass } from 'three/addons/postprocessing/Pass.js';\nimport { ShaderPass } from 'three/addons/postprocessing/ShaderPass.js';\n\nimport { DepthShader } from '../shaders/DepthShader.js';\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Depth Pass\n/////////////////////////////////////////////////////////////////////////////////////\n\n/** Depth texture visualization render pass */\nclass DepthPass extends Pass {\n\n    constructor(camera) {\n        super();\n        this.camera = camera;\n        this.needsSwap = false;\n\n        this.copyPass = new ShaderPass(CopyShader);\n        this.copyPass.clear = true;\n        this.copyPass.clearDepth = false;\n        this.copyPass.renderToScreen = false;\n        this.copyPass.material.depthWrite = false;\n\n        this.depthMaterial = new THREE.ShaderMaterial(DepthShader);\n\n        this.fsQuad = new FullScreenQuad(this.depthMaterial);\n    }\n\n    dispose() {\n        this.depthMaterial.dispose();\n    }\n\n    render(renderer, writeBuffer, readBuffer, deltaTime,/* maskActive*/) {\n        // Save renderer values\n        const oldAutoClear = renderer.autoClear;\n        const oldAutoClearColor = renderer.autoClearColor;\n        const oldAutoClearDepth = renderer.autoClearDepth;\n        const oldAutoClearStencil = renderer.autoClearStencil;\n        renderer.autoClear = false;\n        renderer.autoClearColor = true;\n        renderer.autoClearDepth = false; // don't clear depth buffer!\n        renderer.autoClearStencil = false;\n\n        // Use current renderTarget info to draw with (we have been drawing on the readBuffer)\n        const uniforms = this.fsQuad.material.uniforms;\n        uniforms.tDiffuse.value = readBuffer.texture;\n        uniforms.tDepth.value = readBuffer.depthTexture;\n        uniforms.cameraNear.value = this.camera.near;\n        uniforms.cameraFar.value = this.camera.far;\n        uniforms.weight.value = (this.camera.isPerspectiveCamera) ? 1.0 : 7.0;\n\n        // Render to writeBuffer\n        renderer.setRenderTarget((this.renderToScreen) ? null : writeBuffer);\n        this.fsQuad.render(renderer);\n\n        // Copy writeBuffer back to readBuffer (keep original depth buffer)\n        this.copyPass.render(renderer, readBuffer, writeBuffer, deltaTime);\n\n        // Restore renderer values\n        renderer.autoClear = oldAutoClear;\n        renderer.autoClearColor = oldAutoClearColor;\n        renderer.autoClearDepth = oldAutoClearDepth;\n        renderer.autoClearStencil = oldAutoClearStencil;\n    }\n}\n\nexport { DepthPass };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      CC0     https://github.com/bzztbomb/three_js_gpu_picking - Dec 29, 2021\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { Pass } from 'three/addons/postprocessing/Pass.js';\n\nimport { ObjectUtils } from '../utils/ObjectUtils.js';\n\n///// Local Variables\n\nconst _clearColor = new THREE.Color(0xffffff);\nconst _materialCache = [];\nconst _currClearColor = new THREE.Color();\n\nlet _emptyScene;\nlet _renderer;\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Gpu Picker Pass\n/////////////////////////////////////////////////////////////////////////////////////\n\n/** For performing gpu picking */\nclass GpuPickerPass extends Pass {\n\n    constructor(scene, camera) {\n        super();\n        const self = this;\n\n        this.scene = scene;\n        this.camera = camera;\n\n        this.overrideMaterial = undefined;\n        this.clearColor = undefined;\n        this.clearAlpha = 0;\n        this.clear = false;\n        this.clearDepth = false;\n        this.needsSwap = false;\n\n        this.renderDebugView = false;               // Set to true to render gpu picker scene for debugging\n        this.needPick = false;                      // Set this to true when we need to perform a gpu mouse pick\n        this.x = 0;                                 // Mouse x location to perform pick\n        this.y = 0;                                 // Mouse y location to perform pick\n        this.pickedId = -1;                         // Returns object id\n\n        // We need to be inside of .render in order to call renderBufferDirect in renderList() so,\n        // create empty scene and use the onAfterRender callback to actually render geometry for picking\n        _emptyScene = new THREE.Scene();\n        _emptyScene.onAfterRender = renderList;\n\n        // This is the 1x1 pixel render target we use to do the picking\n        this.pickingTarget = new THREE.WebGLRenderTarget(1, 1, {\n            minFilter: THREE.NearestFilter, magFilter: THREE.NearestFilter,\n            format: THREE.RGBAFormat, encoding: THREE.LinearEncoding\n        });\n        this.pixelBuffer = new Uint8Array(4 * this.pickingTarget.width * this.pickingTarget.height); // RGBA is 4 channels\n\n        // This is the magic, these render lists are still filled with valid data. Because of this\n        // we can submit them again for picking and save lots of work!\n        function renderList() {\n            const renderList = _renderer.renderLists.get(self.scene, 0);\n            renderList.opaque.forEach(processItem);\n            renderList.transmissive.forEach(processItem);\n            renderList.transparent.forEach(processItem);\n        }\n\n        function processItem(renderItem) {\n            let object = renderItem.object;\n\n            if (! object || ! object.isObject3D) return;\n            if (! object.visible) return;\n            if (! ObjectUtils.allowSelection(object)) return;\n\n            let objId = object.id;\n            let material = object.material; // renderItem.material;\n            let geometry = object.geometry; // renderItem.geometry;\n\n            let useMorphing = 0;\n            if (material.morphTargets === true) {\n                if (geometry.isBufferGeometry === true) {\n                    useMorphing = (geometry.morphAttributes?.position?.length > 0) ? 1 : 0;\n                } else if (geometry.isGeometry === true) {\n                    useMorphing = (geometry.morphTargets?.length > 0) ? 1 : 0;\n                }\n            }\n\n            let useSkinning = object.isSkinnedMesh ? 1 : 0;\n            let useInstancing = object.isInstancedMesh === true ? 1 : 0;\n            let frontSide = material.side === THREE.FrontSide ? 1 : 0;\n            let backSide = material.side === THREE.BackSide ? 1 : 0;\n            let doubleSide = material.side === THREE.DoubleSide ? 1 : 0;\n            let index = (useMorphing << 0) |\n                (useSkinning << 1) |\n                (useInstancing << 2) |\n                (frontSide << 3) |\n                (backSide << 4) |\n                (doubleSide << 5);\n            let renderMaterial = _materialCache[index];\n            if (! renderMaterial) {\n                renderMaterial = new THREE.ShaderMaterial({\n                    defines: { USE_MAP: '', USE_UV: '', USE_LOGDEPTHBUF: '', },\n\n                    // For common Three.js shader uniforms, see:\n                    //      https://github.com/mrdoob/three.js/blob/master/src/renderers/shaders/UniformsLib.js\n\n                    vertexShader: THREE.ShaderChunk.meshbasic_vert,\n\n                    //\n                    // * Alternative: Basic Vertex Shader\n                    //\n                    // vertexShader: `\n                    //  varying vec2 vUv;\n                    //  void main() {\n                    //      vUv = uv;\n                    //      vec4 mvPosition = modelViewMatrix * vec4(position, 1.0);\n                    //      gl_Position = projectionMatrix * mvPosition;\n                    //  }\n                    // `,\n\n                    // shader reference\n                    // \t\thttps://github.com/mrdoob/three.js/blob/master/src/renderers/shaders/ShaderLib/meshbasic.glsl.js\n\n                    fragmentShader: `\n                        #include <common>\n\n                        varying vec2 vUv;\n\n                        uniform float opacity;\n                        uniform sampler2D map;\n                        uniform vec4 objectId;\n                        uniform float useMap;\n\n                        #include <logdepthbuf_pars_fragment>\n\n                        void main() {\n                            #include <logdepthbuf_fragment>\n\n                            gl_FragColor = objectId;\n\n                            if (opacity < 0.05) discard;\n\n                            if (useMap > 0.0) {\n                                vec4 texelColor = texture2D(map, vUv);\n                                if (texelColor.a < 0.05) discard;\n\n                                ///// To just render normal texture color:\n                                // gl_FragColor = texelColor;\n                            }\n                        }\n                    `,\n\n                    fog: false,\n                    lights: false,\n                });\n\n                // Material Settings\n                renderMaterial.side = material.side;\n                renderMaterial.skinning = useSkinning > 0;\n                renderMaterial.morphTargets = useMorphing > 0;\n\n                renderMaterial.uniforms = {\n                    opacity: { value: 1.0 },\n                    map: { value: undefined },\n                    uvTransform: { value: new THREE.Matrix3() },\n                    objectId: { value: [1.0, 1.0, 1.0, 1.0] },\n                    useMap: { value: 0.0 },\n                };\n                _materialCache[index] = renderMaterial;\n            }\n\n            // Uniforms\n            renderMaterial.uniforms.objectId.value = [\n                (objId >> 24 & 255) / 255,\n                (objId >> 16 & 255) / 255,\n                (objId >> 8 & 255) / 255,\n                (objId & 255) / 255,\n            ];\n            // // Render fully transparent objects to gpu picker\n            // renderMaterial.uniforms.opacity.value = (material.opacity) ? material.opacity : 1.0;\n            renderMaterial.uniforms.useMap.value = 0.0;\n            if (material.map) {\n                renderMaterial.uniforms.useMap.value = 1.0;\n                renderMaterial.uniforms.map.value = material.map;\n            }\n            renderMaterial.uniformsNeedUpdate = true;\n\n            // Render Object\n            _renderer.renderBufferDirect(self.camera, null, geometry, renderMaterial, object, null);\n        }\n\n    } // end ctor\n\n    dispose() {\n        this.pickingTarget.dispose();\n    }\n\n    render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n        if (this.needPick === false && this.renderDebugView === false) return;\n\n        _renderer = renderer;\n\n        const camWidth = renderer.domElement.width;\n        const camHeight = renderer.domElement.height;\n\n        // Set the projection matrix to only look at the pixel we are interested in.\n        this.camera.setViewOffset(camWidth, camHeight, this.x, this.y, 1, 1);\n\n        // Store current renderer state info\n        const currRenderTarget = renderer.getRenderTarget();\n        const currAlpha = renderer.getClearAlpha();\n        renderer.getClearColor(_currClearColor);\n\n        // Render, get pixel from target\n        renderer.setRenderTarget(this.pickingTarget);\n        renderer.setClearColor(_clearColor);\n        renderer.clear();\n        renderer.render(_emptyScene, this.camera);\n        renderer.readRenderTargetPixels(this.pickingTarget, 0, 0, this.pickingTarget.width, this.pickingTarget.height, this.pixelBuffer);\n\n        // Restore renderer state info\n        renderer.setRenderTarget(currRenderTarget);\n        this.camera.clearViewOffset();\n        if (this.renderDebugView) renderer.render(_emptyScene, this.camera);\n        renderer.setClearColor(_currClearColor, currAlpha);\n\n        // Store picked ID\n        if (this.needPick) {\n            this.pickedId = (this.pixelBuffer[0] << 24) + (this.pixelBuffer[1] << 16) + (this.pixelBuffer[2] << 8) + this.pixelBuffer[3];\n            this.needPick = false;\n        }\n    }\n\n    // !!!!! DEBUG: For debugging, render picker scene\n    renderPickScene(renderer, camera) {\n        _renderer = renderer;\n\n        // Store current renderer state info\n        const currAlpha = renderer.getClearAlpha();\n        renderer.getClearColor(_currClearColor);\n\n        // Render, get pixel from target\n        renderer.setClearColor(_clearColor);\n        renderer.clear();\n        renderer.render(_emptyScene, camera);\n\n        // Restore renderer state info\n        renderer.setClearColor(_currClearColor, currAlpha);\n    }\n\n}\n\nexport { GpuPickerPass };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/mrdoob/three.js/blob/dev/examples/jsm/postprocessing/OutlinePass.js - v03/07/2022\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { Pass, FullScreenQuad } from 'three/addons/postprocessing/Pass.js';\nimport { CopyShader } from 'three/addons/shaders/CopyShader.js';\n\nimport { ObjectUtils } from '../utils/ObjectUtils.js';\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Outline Pass\n/////////////////////////////////////////////////////////////////////////////////////\n\n/** For drawing glowing outlines around selected objects */\nclass OutlinePass extends Pass {\n\n    constructor(resolution, scene, camera, selectedObjects) {\n\n        super();\n\n        this.renderScene = scene;\n        this.renderCamera = camera;\n        this.selectedObjects = selectedObjects !== undefined ? selectedObjects : [];\n        this.visibleEdgeColor = new THREE.Color( 1, 1, 1 );\n        this.hiddenEdgeColor = new THREE.Color( 0.1, 0.04, 0.02 );\n        this.edgeGlow = 0.0;\n        this.usePatternTexture = false;\n        this.edgeThickness = 1.0;\n        this.edgeStrength = 3.0;\n        this.downSampleRatio = 2;\n        this.pulsePeriod = 0;\n\n        this._visibilityCache = new Map();\n\n        ///// added by stevinz\n        this._materialCache = new Map();\n        this._castShadowCache = new Map();\n        this._receiveShadowCache = new Map();\n        /////\n\n        this.resolution = (resolution !== undefined) ? new THREE.Vector2(resolution.x, resolution.y) : new THREE.Vector2(256, 256);\n\n        const resx = Math.round(this.resolution.x / this.downSampleRatio);\n        const resy = Math.round(this.resolution.y / this.downSampleRatio);\n\n        this.renderTargetMaskBuffer = new THREE.WebGLRenderTarget( this.resolution.x, this.resolution.y );\n        this.renderTargetMaskBuffer.texture.name = 'OutlinePass.mask';\n        this.renderTargetMaskBuffer.texture.generateMipmaps = false;\n\n        this.depthMaterial = new THREE.MeshDepthMaterial();\n        this.depthMaterial.side = THREE.DoubleSide;\n        this.depthMaterial.depthPacking = THREE.RGBADepthPacking;\n        this.depthMaterial.blending = THREE.NoBlending;\n\n        ///// added by stevinz\n        this.invisibleMaterial = new THREE.MeshBasicMaterial({ visible: false });\n        /////\n\n        this.prepareMaskMaterial = this.getPrepareMaskMaterial();\n        this.prepareMaskMaterial.side = THREE.DoubleSide;\n        this.prepareMaskMaterial.fragmentShader = replaceDepthToViewZ( this.prepareMaskMaterial.fragmentShader, this.renderCamera );\n\n        this.renderTargetDepthBuffer = new THREE.WebGLRenderTarget( this.resolution.x, this.resolution.y );\n        this.renderTargetDepthBuffer.texture.name = 'OutlinePass.depth';\n        this.renderTargetDepthBuffer.texture.generateMipmaps = false;\n\n        this.renderTargetMaskDownSampleBuffer = new THREE.WebGLRenderTarget( resx, resy );\n        this.renderTargetMaskDownSampleBuffer.texture.name = 'OutlinePass.depthDownSample';\n        this.renderTargetMaskDownSampleBuffer.texture.generateMipmaps = false;\n\n        this.renderTargetBlurBuffer1 = new THREE.WebGLRenderTarget( resx, resy );\n        this.renderTargetBlurBuffer1.texture.name = 'OutlinePass.blur1';\n        this.renderTargetBlurBuffer1.texture.generateMipmaps = false;\n        this.renderTargetBlurBuffer2 = new THREE.WebGLRenderTarget( Math.round( resx / 2 ), Math.round( resy / 2 ) );\n        this.renderTargetBlurBuffer2.texture.name = 'OutlinePass.blur2';\n        this.renderTargetBlurBuffer2.texture.generateMipmaps = false;\n\n        this.edgeDetectionMaterial = this.getEdgeDetectionMaterial();\n        this.renderTargetEdgeBuffer1 = new THREE.WebGLRenderTarget( resx, resy );\n        this.renderTargetEdgeBuffer1.texture.name = 'OutlinePass.edge1';\n        this.renderTargetEdgeBuffer1.texture.generateMipmaps = false;\n        this.renderTargetEdgeBuffer2 = new THREE.WebGLRenderTarget( Math.round( resx / 2 ), Math.round( resy / 2 ) );\n        this.renderTargetEdgeBuffer2.texture.name = 'OutlinePass.edge2';\n        this.renderTargetEdgeBuffer2.texture.generateMipmaps = false;\n\n        const MAX_EDGE_THICKNESS = 4;\n        const MAX_EDGE_GLOW = 4;\n\n        this.separableBlurMaterial1 = this.getSeperableBlurMaterial( MAX_EDGE_THICKNESS );\n        this.separableBlurMaterial1.uniforms[ 'texSize' ].value.set( resx, resy );\n        this.separableBlurMaterial1.uniforms[ 'kernelRadius' ].value = 1;\n        this.separableBlurMaterial2 = this.getSeperableBlurMaterial( MAX_EDGE_GLOW );\n        this.separableBlurMaterial2.uniforms[ 'texSize' ].value.set( Math.round( resx / 2 ), Math.round( resy / 2 ) );\n        this.separableBlurMaterial2.uniforms[ 'kernelRadius' ].value = MAX_EDGE_GLOW;\n\n        // Overlay material\n        this.overlayMaterial = this.getOverlayMaterial();\n\n        // copy material\n        if ( CopyShader === undefined ) console.error( 'THREE.OutlinePass relies on CopyShader' );\n\n        const copyShader = CopyShader;\n\n        this.copyUniforms = THREE.UniformsUtils.clone(copyShader.uniforms);\n        this.copyUniforms[ 'opacity' ].value = 1.0;\n\n        this.materialCopy = new THREE.ShaderMaterial( {\n            uniforms: this.copyUniforms,\n            vertexShader: copyShader.vertexShader,\n            fragmentShader: copyShader.fragmentShader,\n            blending: THREE.NoBlending,\n            depthTest: false,\n            depthWrite: false,\n            transparent: true\n        } );\n\n        this.enabled = true;\n        this.needsSwap = false;\n\n        this._oldClearColor = new THREE.Color();\n        this.oldClearAlpha = 1;\n\n        this.fsQuad = new FullScreenQuad( null );\n\n        this.tempPulseColor1 = new THREE.Color();\n        this.tempPulseColor2 = new THREE.Color();\n        this.textureMatrix = new THREE.Matrix4();\n\n        function replaceDepthToViewZ( string, camera ) {\n\n            const type = camera.isPerspectiveCamera ? 'perspective' : 'orthographic';\n\n            return string.replace( /DEPTH_TO_VIEW_Z/g, type + 'DepthToViewZ' );\n\n        }\n\n    } // end ctor\n\n    dispose() {\n\n        this.renderTargetMaskBuffer.dispose();\n        this.renderTargetDepthBuffer.dispose();\n        this.renderTargetMaskDownSampleBuffer.dispose();\n        this.renderTargetBlurBuffer1.dispose();\n        this.renderTargetBlurBuffer2.dispose();\n        this.renderTargetEdgeBuffer1.dispose();\n        this.renderTargetEdgeBuffer2.dispose();\n\n        this.invisibleMaterial.dispose();\n\n        this.depthMaterial.dispose();\n        this.prepareMaskMaterial.dispose();\n        this.edgeDetectionMaterial.dispose();\n        this.separableBlurMaterial1.dispose();\n        this.separableBlurMaterial2.dispose();\n        this.overlayMaterial.dispose();\n        this.materialCopy.dispose();\n\n        this.fsQuad.dispose();\n    }\n\n    setSize( width, height ) {\n\n        this.renderTargetMaskBuffer.setSize( width, height );\n        this.renderTargetDepthBuffer.setSize( width, height );\n\n        let resx = Math.round( width / this.downSampleRatio );\n        let resy = Math.round( height / this.downSampleRatio );\n        this.renderTargetMaskDownSampleBuffer.setSize( resx, resy );\n        this.renderTargetBlurBuffer1.setSize( resx, resy );\n        this.renderTargetEdgeBuffer1.setSize( resx, resy );\n        this.separableBlurMaterial1.uniforms[ 'texSize' ].value.set( resx, resy );\n\n        resx = Math.round( resx / 2 );\n        resy = Math.round( resy / 2 );\n\n        this.renderTargetBlurBuffer2.setSize( resx, resy );\n        this.renderTargetEdgeBuffer2.setSize( resx, resy );\n\n        this.separableBlurMaterial2.uniforms[ 'texSize' ].value.set( resx, resy );\n\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////\n    /////   !!!!! NOTE: Added support to allow children to stay visible, Apr 7, 20222\n    /////\n    ////////////////////\n\n    changeVisibilityOfSelectedObjects(isVisible) {\n        const visibilityCache = this._visibilityCache;\n\n        function gatherSelectedMeshesCallBack(object) {\n            if (object.isMesh) {\n                if (isVisible === true) {\n                    object.visible = visibilityCache.get(object.id);\n                } else {\n                    visibilityCache.set(object.id, object.visible);\n                    object.visible = isVisible;\n                }\n            }\n        }\n\n        for (let i = 0; i < this.selectedObjects.length; i++) {\n            const selectedObject = this.selectedObjects[i];\n            selectedObject.traverse(gatherSelectedMeshesCallBack);\n        }\n    }\n\n    changeVisibilityOfNonSelectedObjects(isVisible) {\n        const self = this;\n        const materialCache = this._materialCache;\n        const visibilityCache = this._visibilityCache;\n        const selectedMeshes = [];\n\n        // Gather Selected Meshes\n        for (let i = 0; i < this.selectedObjects.length; i++) {\n            this.selectedObjects[i].traverse((object) => {\n                if (object.isMesh) selectedMeshes.push(object);\n            });\n        }\n\n        // Change Visibility\n        this.renderScene.traverse((object) => {\n\n            // Object is not selected\n            let isSelected = ObjectUtils.containsObject(selectedMeshes, object);\n            if (! isSelected) {\n\n                if (isVisible === true) {\n\n                    if (object.isMesh) object.material = materialCache.get(object.id);\n                    object.visible = visibilityCache.get(object.id);\n\n                } else {\n\n                    // If holds a selected object, want to keep visible (with invisible Material)\n                    let holdsSelected = false\n                    object.traverse((child) => {\n                        if (ObjectUtils.containsObject(selectedMeshes, child)) {\n                            holdsSelected = true;\n                        }\n                    });\n\n                    // Save material / visibility\n                    if (object.isMesh) materialCache.set(object.id, object.material);\n                    visibilityCache.set(object.id, object.visible);\n\n                    // Set non-visible / invisibleMaterial\n                    if (holdsSelected) {\n                        if (object.isMesh) object.material = self.invisibleMaterial;\n                    } else {\n                        object.visible = false;\n                    }\n                }\n\n            }\n\n        });\n    }\n\n    disableShadows() {\n        const castCache = this._castShadowCache;\n        const receiveCache = this._receiveShadowCache;\n\n        this.renderScene.traverse((object) => {\n            castCache.set(object.id, object.castShadow);\n            receiveCache.set(object.id, object.receiveShadow);\n            object.castShadow = false;\n            object.receiveShadow = false;\n        });\n    }\n\n    enableShadows() {\n        const castCache = this._castShadowCache;\n        const receiveCache = this._receiveShadowCache;\n\n        this.renderScene.traverse((object) => {\n            object.castShadow = castCache.get(object.id);\n            object.receiveShadow = receiveCache.get(object.id);\n        });\n    }\n\n    /////////////////////////////////////////////////////////////////////////////////////\n    /////////////////////////////////////////////////////////////////////////////////////\n\n    updateTextureMatrix() {\n\n        this.textureMatrix.set(\n            0.5, 0.0, 0.0, 0.5,\n            0.0, 0.5, 0.0, 0.5,\n            0.0, 0.0, 0.5, 0.5,\n            0.0, 0.0, 0.0, 1.0\n        );\n        this.textureMatrix.multiply( this.renderCamera.projectionMatrix );\n        this.textureMatrix.multiply( this.renderCamera.matrixWorldInverse );\n\n    }\n\n    render( renderer, writeBuffer, readBuffer, deltaTime, maskActive ) {\n\n        if ( this.selectedObjects.length > 0 ) {\n\n            /////\n            this.disableShadows();\n            /////\n\n            renderer.getClearColor( this._oldClearColor );\n            this.oldClearAlpha = renderer.getClearAlpha();\n            const oldAutoClear = renderer.autoClear;\n            const oldOverrideMaterial = this.renderScene.overrideMaterial;\n\n            renderer.autoClear = false;\n\n            if ( maskActive ) renderer.state.buffers.stencil.setTest( false );\n\n            renderer.setClearColor( 0xffffff, 1 );\n\n            // Make selected objects invisible\n            this.changeVisibilityOfSelectedObjects( false );\n\n            const currentBackground = this.renderScene.background;\n            this.renderScene.background = null;\n\n            // 1. Draw Non Selected objects in the depth buffer\n            this.renderScene.overrideMaterial = this.depthMaterial;\n            renderer.setRenderTarget( this.renderTargetDepthBuffer );\n            renderer.clear();\n            renderer.render( this.renderScene, this.renderCamera );\n\n            // Make selected objects visible\n            this.changeVisibilityOfSelectedObjects( true );\n\n            // Update Texture Matrix for Depth compare\n            this.updateTextureMatrix();\n\n            // Make non selected objects invisible, and draw only the selected objects, by comparing the depth buffer of non selected objects\n            this.changeVisibilityOfNonSelectedObjects( false );\n            this.renderScene.overrideMaterial = this.prepareMaskMaterial;\n            this.prepareMaskMaterial.uniforms[ 'cameraNearFar' ].value.set( this.renderCamera.near, this.renderCamera.far );\n            this.prepareMaskMaterial.uniforms[ 'depthTexture' ].value = this.renderTargetDepthBuffer.texture;\n            this.prepareMaskMaterial.uniforms[ 'textureMatrix' ].value = this.textureMatrix;\n            renderer.setRenderTarget( this.renderTargetMaskBuffer );\n            renderer.clear();\n            renderer.render( this.renderScene, this.renderCamera );\n            this.renderScene.overrideMaterial = oldOverrideMaterial;\n            this.changeVisibilityOfNonSelectedObjects( true );\n\n            this.renderScene.background = currentBackground;\n\n            // 2. Downsample to Half resolution\n            this.fsQuad.material = this.materialCopy;\n            this.copyUniforms[ 'tDiffuse' ].value = this.renderTargetMaskBuffer.texture;\n            renderer.setRenderTarget( this.renderTargetMaskDownSampleBuffer );\n            renderer.clear();\n            this.fsQuad.render( renderer );\n\n            this.tempPulseColor1.copy( this.visibleEdgeColor );\n            this.tempPulseColor2.copy( this.hiddenEdgeColor );\n\n            if ( this.pulsePeriod > 0 ) {\n\n                const scalar = ( 1 + 0.25 ) / 2 + Math.cos( performance.now() * 0.01 / this.pulsePeriod ) * ( 1.0 - 0.25 ) / 2;\n                this.tempPulseColor1.multiplyScalar( scalar );\n                this.tempPulseColor2.multiplyScalar( scalar );\n\n            }\n\n            // 3. Apply Edge Detection Pass\n            this.fsQuad.material = this.edgeDetectionMaterial;\n            this.edgeDetectionMaterial.uniforms[ 'maskTexture' ].value = this.renderTargetMaskDownSampleBuffer.texture;\n            this.edgeDetectionMaterial.uniforms[ 'texSize' ].value.set( this.renderTargetMaskDownSampleBuffer.width, this.renderTargetMaskDownSampleBuffer.height );\n            this.edgeDetectionMaterial.uniforms[ 'visibleEdgeColor' ].value = this.tempPulseColor1;\n            this.edgeDetectionMaterial.uniforms[ 'hiddenEdgeColor' ].value = this.tempPulseColor2;\n            renderer.setRenderTarget( this.renderTargetEdgeBuffer1 );\n            renderer.clear();\n            this.fsQuad.render( renderer );\n\n            // 4. Apply Blur on Half res\n            this.fsQuad.material = this.separableBlurMaterial1;\n            this.separableBlurMaterial1.uniforms[ 'colorTexture' ].value = this.renderTargetEdgeBuffer1.texture;\n            this.separableBlurMaterial1.uniforms[ 'direction' ].value = OutlinePass.BlurDirectionX;\n            this.separableBlurMaterial1.uniforms[ 'kernelRadius' ].value = this.edgeThickness;\n            renderer.setRenderTarget( this.renderTargetBlurBuffer1 );\n            renderer.clear();\n            this.fsQuad.render( renderer );\n            this.separableBlurMaterial1.uniforms[ 'colorTexture' ].value = this.renderTargetBlurBuffer1.texture;\n            this.separableBlurMaterial1.uniforms[ 'direction' ].value = OutlinePass.BlurDirectionY;\n            renderer.setRenderTarget( this.renderTargetEdgeBuffer1 );\n            renderer.clear();\n            this.fsQuad.render( renderer );\n\n            // Apply Blur on quarter res\n            this.fsQuad.material = this.separableBlurMaterial2;\n            this.separableBlurMaterial2.uniforms[ 'colorTexture' ].value = this.renderTargetEdgeBuffer1.texture;\n            this.separableBlurMaterial2.uniforms[ 'direction' ].value = OutlinePass.BlurDirectionX;\n            renderer.setRenderTarget( this.renderTargetBlurBuffer2 );\n            renderer.clear();\n            this.fsQuad.render( renderer );\n            this.separableBlurMaterial2.uniforms[ 'colorTexture' ].value = this.renderTargetBlurBuffer2.texture;\n            this.separableBlurMaterial2.uniforms[ 'direction' ].value = OutlinePass.BlurDirectionY;\n            renderer.setRenderTarget( this.renderTargetEdgeBuffer2 );\n            renderer.clear();\n            this.fsQuad.render( renderer );\n\n            // Blend it additively over the input texture\n            this.fsQuad.material = this.overlayMaterial;\n            this.overlayMaterial.uniforms[ 'maskTexture' ].value = this.renderTargetMaskBuffer.texture;\n            this.overlayMaterial.uniforms[ 'edgeTexture1' ].value = this.renderTargetEdgeBuffer1.texture;\n            this.overlayMaterial.uniforms[ 'edgeTexture2' ].value = this.renderTargetEdgeBuffer2.texture;\n            this.overlayMaterial.uniforms[ 'patternTexture' ].value = this.patternTexture;\n            this.overlayMaterial.uniforms[ 'edgeStrength' ].value = this.edgeStrength;\n            this.overlayMaterial.uniforms[ 'edgeGlow' ].value = this.edgeGlow;\n            this.overlayMaterial.uniforms[ 'usePatternTexture' ].value = this.usePatternTexture;\n\n            if ( maskActive ) renderer.state.buffers.stencil.setTest( true );\n\n            renderer.setRenderTarget( readBuffer );\n            this.fsQuad.render( renderer );\n\n            renderer.setClearColor( this._oldClearColor, this.oldClearAlpha );\n            renderer.autoClear = oldAutoClear;\n\n            /////\n\n            this.enableShadows();\n\n            this._materialCache.clear();\n            this._castShadowCache.clear();\n            this._receiveShadowCache.clear();\n            this._visibilityCache.clear();\n\n            /////\n\n        }\n\n        if ( this.renderToScreen ) {\n\n            this.fsQuad.material = this.materialCopy;\n            this.copyUniforms[ 'tDiffuse' ].value = readBuffer.texture;\n            renderer.setRenderTarget( null );\n            this.fsQuad.render( renderer );\n\n        }\n\n    }\n\n    getPrepareMaskMaterial() {\n\n        return new THREE.ShaderMaterial( {\n\n            uniforms: {\n                'depthTexture': { value: null },\n                'cameraNearFar': { value: new THREE.Vector2( 0.5, 0.5 ) },\n                'textureMatrix': { value: null }\n            },\n\n            vertexShader:\n                `\n                #include <morphtarget_pars_vertex>\n                #include <skinning_pars_vertex>\n                varying vec4 projTexCoord;\n                varying vec4 vPosition;\n                uniform mat4 textureMatrix;\n                void main() {\n                    #include <skinbase_vertex>\n                    #include <begin_vertex>\n                    #include <morphtarget_vertex>\n                    #include <skinning_vertex>\n                    #include <project_vertex>\n\n                    vPosition = mvPosition;\n\n                    vec4 worldPosition = vec4( transformed, 1.0 );\n                    #ifdef USE_INSTANCING\n                        worldPosition = instanceMatrix * worldPosition;\n                    #endif\n                    worldPosition = modelMatrix * worldPosition;\n\n                    projTexCoord = textureMatrix * worldPosition;\n                }`,\n\n            fragmentShader:\n                `\n                #include <packing>\n                varying vec4 vPosition;\n                varying vec4 projTexCoord;\n                uniform sampler2D depthTexture;\n                uniform vec2 cameraNearFar;\n                void main() {\n                    float depth = unpackRGBAToDepth(texture2DProj( depthTexture, projTexCoord ));\n                    float viewZ = - DEPTH_TO_VIEW_Z( depth, cameraNearFar.x, cameraNearFar.y );\n                    float depthTest = (-vPosition.z > viewZ) ? 1.0 : 0.0;\n                    gl_FragColor = vec4(0.0, depthTest, 1.0, 1.0);\n                }`\n\n        } );\n\n    }\n\n    getEdgeDetectionMaterial() {\n\n        return new THREE.ShaderMaterial( {\n\n            uniforms: {\n                'maskTexture': { value: null },\n                'texSize': { value: new THREE.Vector2( 0.5, 0.5 ) },\n                'visibleEdgeColor': { value: new THREE.Vector3( 1.0, 1.0, 1.0 ) },\n                'hiddenEdgeColor': { value: new THREE.Vector3( 1.0, 1.0, 1.0 ) },\n            },\n\n            vertexShader:\n                `varying vec2 vUv;\n                void main() {\n                    vUv = uv;\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n                }`,\n\n            fragmentShader:\n                `varying vec2 vUv;\n                uniform sampler2D maskTexture;\n                uniform vec2 texSize;\n                uniform vec3 visibleEdgeColor;\n                uniform vec3 hiddenEdgeColor;\n                void main() {\n                    vec2 invSize = 1.0 / texSize;\n                    vec4 uvOffset = vec4(1.0, 0.0, 0.0, 1.0) * vec4(invSize, invSize);\n                    vec4 c1 = texture2D( maskTexture, vUv + uvOffset.xy);\n                    vec4 c2 = texture2D( maskTexture, vUv - uvOffset.xy);\n                    vec4 c3 = texture2D( maskTexture, vUv + uvOffset.yw);\n                    vec4 c4 = texture2D( maskTexture, vUv - uvOffset.yw);\n                    float diff1 = (c1.r - c2.r)*0.5;\n                    float diff2 = (c3.r - c4.r)*0.5;\n                    float d = length( vec2(diff1, diff2) );\n                    float a1 = min(c1.g, c2.g);\n                    float a2 = min(c3.g, c4.g);\n                    float visibilityFactor = min(a1, a2);\n                    vec3 edgeColor = 1.0 - visibilityFactor > 0.001 ? visibleEdgeColor : hiddenEdgeColor;\n                    gl_FragColor = vec4(edgeColor, 1.0) * vec4(d);\n                }`\n        } );\n\n    }\n\n    getSeperableBlurMaterial( maxRadius ) {\n\n        return new THREE.ShaderMaterial( {\n\n            defines: {\n                'MAX_RADIUS': maxRadius,\n            },\n\n            uniforms: {\n                'colorTexture': { value: null },\n                'texSize': { value: new THREE.Vector2( 0.5, 0.5 ) },\n                'direction': { value: new THREE.Vector2( 0.5, 0.5 ) },\n                'kernelRadius': { value: 1.0 }\n            },\n\n            vertexShader:\n                `varying vec2 vUv;\n                void main() {\n                    vUv = uv;\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n                }`,\n\n            fragmentShader:\n                `#include <common>\n                varying vec2 vUv;\n                uniform sampler2D colorTexture;\n                uniform vec2 texSize;\n                uniform vec2 direction;\n                uniform float kernelRadius;\n                float gaussianPdf(in float x, in float sigma) {\n                    return 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\n                }\n                void main() {\n                    vec2 invSize = 1.0 / texSize;\n                    float weightSum = gaussianPdf(0.0, kernelRadius);\n                    vec4 diffuseSum = texture2D( colorTexture, vUv) * weightSum;\n                    vec2 delta = direction * invSize * kernelRadius/float(MAX_RADIUS);\n                    vec2 uvOffset = delta;\n                    for( int i = 1; i <= MAX_RADIUS; i ++ ) {\n                        float w = gaussianPdf(uvOffset.x, kernelRadius);\n                        vec4 sample1 = texture2D( colorTexture, vUv + uvOffset);\n                        vec4 sample2 = texture2D( colorTexture, vUv - uvOffset);\n                        diffuseSum += ((sample1 + sample2) * w);\n                        weightSum += (2.0 * w);\n                        uvOffset += delta;\n                    }\n                    gl_FragColor = diffuseSum/weightSum;\n                }`\n        } );\n\n    }\n\n    getOverlayMaterial() {\n\n        return new THREE.ShaderMaterial( {\n\n            uniforms: {\n                'maskTexture': { value: null },\n                'edgeTexture1': { value: null },\n                'edgeTexture2': { value: null },\n                'patternTexture': { value: null },\n                'edgeStrength': { value: 1.0 },\n                'edgeGlow': { value: 1.0 },\n                'usePatternTexture': { value: 0.0 }\n            },\n\n            vertexShader:\n                `varying vec2 vUv;\n                void main() {\n                    vUv = uv;\n                    gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n                }`,\n\n            fragmentShader:\n                `varying vec2 vUv;\n                uniform sampler2D maskTexture;\n                uniform sampler2D edgeTexture1;\n                uniform sampler2D edgeTexture2;\n                uniform sampler2D patternTexture;\n                uniform float edgeStrength;\n                uniform float edgeGlow;\n                uniform bool usePatternTexture;\n                void main() {\n                    vec4 edgeValue1 = texture2D(edgeTexture1, vUv);\n                    vec4 edgeValue2 = texture2D(edgeTexture2, vUv);\n                    vec4 maskColor = texture2D(maskTexture, vUv);\n                    vec4 patternColor = texture2D(patternTexture, 6.0 * vUv);\n                    float visibilityFactor = 1.0 - maskColor.g > 0.0 ? 1.0 : 0.5;\n                    vec4 edgeValue = edgeValue1 + edgeValue2 * edgeGlow;\n                    vec4 finalColor = edgeStrength * maskColor.r * edgeValue;\n                    if(usePatternTexture)\n                        finalColor += + visibilityFactor * (1.0 - maskColor.r) * (1.0 - patternColor.r);\n                    gl_FragColor = finalColor;\n                }`,\n            blending: THREE.AdditiveBlending,\n            depthTest: false,\n            depthWrite: false,\n            transparent: true\n        } );\n\n    }\n\n}\n\nOutlinePass.BlurDirectionX = new THREE.Vector2(1.0, 0.0);\nOutlinePass.BlurDirectionY = new THREE.Vector2(0.0, 1.0);\n\nexport { OutlinePass };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\nimport * as THREE from 'three';\n\nimport { Pass } from 'three/addons/postprocessing/Pass.js';\n\nimport { ObjectUtils } from '../utils/ObjectUtils.js';\n\n///// Local Variables\n\nconst _oldClearColor = new THREE.Color();\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Wireframe Pass\n/////////////////////////////////////////////////////////////////////////////////////\n\n/** For drawing selected scene items as wireframe */\nclass WireframePass extends Pass {\n\n    constructor(scene, camera, wireColor = 0xffffff, opacity = 0.25) {\n        super();\n\n        // Public Properties\n        this.scene = scene;\n        this.camera = camera;\n        this.selectedObjects = [];\n\n        // Local Properties\n        this.clearColor = undefined;\n        this.clearAlpha = 0.0;\n        this.clear = false;\n        this.clearDepth = false;\n        this.needsSwap = false;\n        this.enabled = true;\n\n        // Local variables\n        this._visibilityCache = new Map();\n        this._materialMap = new Map();\n\n        this.overrideMaterial = new THREE.MeshBasicMaterial({\n            color: 0xff0000, //wireColor,\n            wireframe: true,\n            opacity: opacity,\n            transparent: true,\n            vertexColors: false,\n\n            depthTest: true,\n            depthWrite: false,\n\n            polygonOffset: true,\n            polygonOffsetFactor: 1, // positive value pushes polygon further away\n\n            alphaToCoverage: false,\n        });\n\n        this.invisibleMaterial = new THREE.MeshBasicMaterial({ visible: false });\n\n    } // end ctor\n\n    dispose() {\n        this.overrideMaterial.dispose();\n        this.invisibleMaterial.dispose();\n    }\n\n    render(renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n        if (this.selectedObjects.length < 1) return;\n\n        // Store current renderer state info\n        renderer.getClearColor(_oldClearColor);\n        const oldClearAlpha = renderer.getClearAlpha();\n        const oldAutoClear = renderer.autoClear;\n        const oldOverrideMaterial = this.scene.overrideMaterial;\n        const oldSceneBackground = this.scene.background;\n\n        // Set renderer state info\n        renderer.setClearColor(0x000000, 0);\n        renderer.autoClear = false;\n        this.scene.overrideMaterial = this.overrideMaterial;\n        this.scene.background = null;\n\n        // Make non selected objects invisible\n        this.changeVisibilityOfNonSelectedObjects(false);\n\n        // Render\n        if (this.clearDepth) renderer.clearDepth();\n        renderer.setRenderTarget((this.renderToScreen || (! readBuffer)) ? null : readBuffer);\n        renderer.render(this.scene, this.camera);\n\n        // Restore object visibility\n        this.changeVisibilityOfNonSelectedObjects(true);\n        this._visibilityCache.clear();\n\n        // Restore state info\n        renderer.setClearColor(_oldClearColor, oldClearAlpha);\n        renderer.autoClear = oldAutoClear;\n        this.scene.overrideMaterial = oldOverrideMaterial;\n        this.scene.background = oldSceneBackground;\n    }\n\n    //\n\n    setObjects(objects) {\n        if (Array.isArray(objects)) {\n            this.selectedObjects = objects;\n        } else {\n            this.selectedObjects = [ objects ];\n        }\n    }\n\n    setWireColor(wireColor) {\n        this.overrideMaterial.color.setHex(wireColor);\n    }\n\n    //\n\n    changeVisibilityOfNonSelectedObjects(isVisible) {\n        const self = this;\n        const cache = this._visibilityCache;\n        const materials = this._materialMap;\n        const selectedMeshes = [];\n\n        function gatherSelectedMeshesCallBack(object) {\n            if (object.isMesh) selectedMeshes.push(object);\n        }\n\n        for (let i = 0; i < this.selectedObjects.length; i++) {\n            const selectedObject = this.selectedObjects[i];\n            selectedObject.traverse(gatherSelectedMeshesCallBack);\n        }\n\n        function VisibilityChangeCallBack(object) {\n\n            // Only meshes are supported by WireframePass\n            if (object.isMesh) {\n                if (ObjectUtils.containsObject(selectedMeshes, object) === false) {\n                    if (isVisible === true) {\n                        object.material = materials.get(object.id);\n                    } else {\n                        materials.set(object.id, object.material);\n                        object.material = self.invisibleMaterial;\n                    }\n                }\n            }\n\n        }\n\n        this.scene.traverse(VisibilityChangeCallBack);\n    }\n\n}\n\nexport { WireframePass };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  TexturedShader\n//      Super basic texture map material shader\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nconst TexturedShader = {\n\n    defines: { USE_LOGDEPTHBUF: '' },\n\n    transparent: true,\n\n    uniforms: {\n        'map': { value: null },\n        'opacity': { value: 1.0 },\n    },\n\n    vertexShader: /* glsl */`\n        #include <common>\n        #include <logdepthbuf_pars_vertex>\n\n        varying vec2 vUv;\n\n        void main() {\n            vUv = uv;\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n            #include <logdepthbuf_vertex>\n        }`,\n\n    fragmentShader: /* glsl */`\n        #include <common>\n\n        uniform sampler2D map;\n        uniform float opacity;\n        varying vec2 vUv;\n\n        #include <logdepthbuf_pars_fragment>\n\n        void main() {\n            #include <logdepthbuf_fragment>\n\n            vec4 texel = texture2D(map, vUv);\n            if (texel.a < 0.01) discard;\n\n            gl_FragColor = opacity * texel;\n        }`\n\n};\n\nexport { TexturedShader };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Reference(s)\n//      https://stackoverflow.com/questions/26336585/three-js-webgl-x-ray-effect\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nconst XRayShader = {\n\n    defines: { USE_LOGDEPTHBUF: '' },\n\n    side: THREE.DoubleSide,\n    blending: THREE.AdditiveBlending,\n    transparent: true,\n    depthTest: false,\n    depthWrite: false,\n    polygonOffset: true,\n    polygonOffsetFactor: 1, // positive value pushes polygon further away\n\n    uniforms: {\n        'xrayColor': { value: new THREE.Color(0x88ccff) },\n    },\n\n    vertexShader: /* glsl */`\n        #include <common>\n        #include <logdepthbuf_pars_vertex>\n\n        varying float intensity;\n\n        void main() {\n            // Normal calculation\n            vec3  norm      = normalize(normalMatrix * normal);\n            vec3  cam       = normalize(normalMatrix * cameraPosition);     // vec3(0.0, 0.0, 1.0);\n            float angle     = dot(norm, cam);                               // brighter from the front\n            float inverse   = 1.0 - abs(angle);                             // brighter from the sides\n\n            float scaled    = 0.5 + (inverse * 0.5);                        // scaled from 0.5 to 1.0\n\n            intensity       = mix(inverse, scaled, 1.0 - inverse);\n            intensity       = clamp(intensity, 0.5, 1.0);\n\n            // Shader chunk: #include <project_vertex>\n            gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);\n\n            #include <logdepthbuf_vertex>\n        }`,\n\n    fragmentShader: /* glsl */`\n        #include <common>\n\n        uniform vec3 xrayColor;\n        varying float intensity;\n\n        #include <logdepthbuf_pars_fragment>\n\n        void main() {\n            #include <logdepthbuf_fragment>\n\n            float inverse   = 1.0 - intensity;\n            float opacity   = intensity * sqrt(intensity);\n\n            gl_FragColor = vec4(opacity * xrayColor, opacity);\n        }`\n\n};\n\nexport { XRayShader };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Reference(s)\n//      https://stackoverflow.com/questions/20774648/three-js-generate-uv-coordinate\n//      https://stackoverflow.com/questions/34958072/programmatically-generate-simple-uv-mapping-for-models\n//      https://discourse.threejs.org/t/can-i-make-a-uv-unwrapping-of-a-model-programmatically-with-three-js/2421/6\n//      https://codepen.io/knee-cola/pen/XMVBwQ\n//\n/////////////////////////////////////////////////////////////////////////////////////\n//\n//  Geometry Utility Functions\n//      addAttribute                Adds attribute to geometry\n//      coloredMesh                 Converts mesh to be able to used custom colored triangles (painting)\n//      modelSize                   Finds max / min geometry Size\n//      repeatTexture               Multiplies uv coordinates in geometry to repeat texture\n//      uvMapCube                   Maps UV coordinates onto an object that fits inside a cube\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { Vectors } from '../../core/Vectors.js';\n\n///// Local Variables\n\nconst _uv = [ new THREE.Vector2(), new THREE.Vector2(), new THREE.Vector2() ];\nconst _vertex = [ new THREE.Vector3(), new THREE.Vector3(), new THREE.Vector3() ];\nconst _temp = new THREE.Vector3();\n\n//////////////////// Class\n\nclass GeometryUtils {\n\n    static addAttribute(geometry, attributeName = 'color', stride = 3, fill = 0) {\n        if (! geometry.getAttribute(attributeName)) {\n            let array = new Float32Array(geometry.attributes.position.count * stride).fill(fill)\n\t        const attribute = new THREE.BufferAttribute(array, stride, true).setUsage(THREE.DynamicDrawUsage);\n\t        geometry.setAttribute(attributeName, attribute);\n        }\n        return geometry;\n    }\n\n    /** Converts mesh to be able to used custom colored triangles (painting) */\n    static coloredMesh(mesh) {\n        if (! mesh.geometry) return mesh;\n        if (! mesh.material) return mesh;\n\n        ///// MATERIAL\n\n        // Enable Vertex Colors\n        let material = mesh.material;\n        if (Array.isArray(material) !== true) material = [ mesh.material ];\n        for (let i = 0; i < material.length; i++) {\n            if (material[i].vertexColors !== true) {\n                material[i].vertexColors = true;\n                material[i].needsUpdate = true;\n            }\n        }\n\n        ///// GEOMETRY\n\n        // Add Color Attribute (if not already)\n        GeometryUtils.addAttribute(mesh.geometry, 'color', 3, 1.0);\n\n        // Return Altered Mesh\n        return mesh;\n    }\n\n    /** Finds max / min geometry Size */\n    static modelSize(geometry, type = 'max') {\n        let boxSize = new THREE.Vector3();\n        geometry.computeBoundingBox();\n        geometry.boundingBox.getSize(boxSize);\n        // !!!!! OPTION: Maximum size\n        if (type === 'max') {\n            return Math.max(boxSize.x, boxSize.y, boxSize.z);\n        } else /* 'min' */ {\n            return Math.min(boxSize.x, boxSize.y, boxSize.z);\n        }\n    }\n\n    /** Multiplies uv coordinates in geometry to repeat texture */\n    static repeatTexture(geometry, s, t) {\n        if (! geometry) return;\n        if (geometry.attributes && geometry.attributes.uv && geometry.attributes.uv.array) {\n            for (let i = 0; i < geometry.attributes.uv.array.length; i += 2) {\n                geometry.attributes.uv.array[i + 0] *= s;\n                geometry.attributes.uv.array[i + 1] *= t;\n            }\n            geometry.attributes.uv.needsUpdate = true;\n        }\n    }\n\n    /** Maps UV coordinates onto an object that fits inside a cube */\n    static uvMapCube(geometry, transformMatrix, frontFaceOnly = false) {\n\n        // Ensure non-indexed geometry for front face only\n        if (frontFaceOnly) {\n            if (geometry.index !== null) {\n                const nonIndexed = geometry.toNonIndexed();\n                geometry.dispose();\n                geometry = nonIndexed;\n            }\n        }\n\n        // Make sure we have a transform matrix\n        if (transformMatrix === undefined) transformMatrix = new THREE.Matrix4();\n\n        // Find Geometry Size\n        let geometrySize = GeometryUtils.modelSize(geometry);\n\n        // Create Cube based on Geometry Size\n        let size = (geometrySize / 2);\n        let bbox = new THREE.Box3(new THREE.Vector3(- size, - size, - size), new THREE.Vector3(size, size, size));\n        let boxCenter = new THREE.Vector3();\n        geometry.boundingBox.getCenter(boxCenter);\n\n        // Align cube center with geometry center\n        const centerMatrix = new THREE.Matrix4().makeTranslation(- boxCenter.x, - boxCenter.y, - boxCenter.z);\n\n        // Prepare UV Coordinates\n        const coords = [];\n        coords.length = 2 * geometry.attributes.position.array.length / 3;\n\n        // Vertex Positions\n        const pos = geometry.attributes.position.array;\n\n        // Indexed BufferGeometry\n        if (geometry.index) {\n            for (let vi = 0; vi < geometry.index.array.length; vi += 3) {\n                const idx0 = geometry.index.array[vi + 0];\n                const idx1 = geometry.index.array[vi + 1];\n                const idx2 = geometry.index.array[vi + 2];\n                const v0 = new THREE.Vector3(pos[(3 * idx0) + 0], pos[(3 * idx0) + 1], pos[(3 * idx0) + 2]);\n                const v1 = new THREE.Vector3(pos[(3 * idx1) + 0], pos[(3 * idx1) + 1], pos[(3 * idx1) + 2]);\n                const v2 = new THREE.Vector3(pos[(3 * idx2) + 0], pos[(3 * idx2) + 1], pos[(3 * idx2) + 2]);\n                calculateUVs(v0, v1, v2);\n                coords[2 * idx0 + 0] = _uv[0].x;\n                coords[2 * idx0 + 1] = _uv[0].y;\n                coords[2 * idx1 + 0] = _uv[1].x;\n                coords[2 * idx1 + 1] = _uv[1].y;\n                coords[2 * idx2 + 0] = _uv[2].x;\n                coords[2 * idx2 + 1] = _uv[2].y;\n            }\n\n        // Non-Indexed Geometry\n        } else {\n            for (let vi = 0; vi < geometry.attributes.position.array.length; vi += 9) {\n                const v0 = new THREE.Vector3(pos[vi + 0], pos[vi + 1], pos[vi + 2]);\n                const v1 = new THREE.Vector3(pos[vi + 3], pos[vi + 4], pos[vi + 5]);\n                const v2 = new THREE.Vector3(pos[vi + 6], pos[vi + 7], pos[vi + 8]);\n                calculateUVs(v0, v1, v2);\n                const idx0 = vi / 3;\n                const idx1 = idx0 + 1;\n                const idx2 = idx0 + 2;\n                coords[2 * idx0 + 0] = _uv[0].x;\n                coords[2 * idx0 + 1] = _uv[0].y;\n                coords[2 * idx1 + 0] = _uv[1].x;\n                coords[2 * idx1 + 1] = _uv[1].y;\n                coords[2 * idx2 + 0] = _uv[2].x;\n                coords[2 * idx2 + 1] = _uv[2].y;\n            }\n        }\n\n        // Assign Coordinates\n        if (geometry.attributes.uv === undefined) {\n            geometry.addAttribute('uv', new THREE.Float32BufferAttribute(coords, 2));\n        }\n        geometry.attributes.uv.array = new Float32Array(coords);\n        geometry.attributes.uv.needsUpdate = true;\n        return geometry;\n\n        /////\n\n        function calcNormal(target, vec1, vec2, vec3) {\n            _temp.subVectors(vec1, vec2);\n            target.subVectors(vec2, vec3);\n            target.cross(_temp).normalize();\n            Vectors.round(target, 5);\n        }\n\n        // Maps 3 vertices of 1 triangle on the better side of the cube, sides of the cube can be XY, XZ or YZ\n        function calculateUVs(v0, v1, v2) {\n\n            // Pre-rotate the model so that cube sides match world axis\n            v0.applyMatrix4(centerMatrix).applyMatrix4(transformMatrix);\n            v1.applyMatrix4(centerMatrix).applyMatrix4(transformMatrix);\n            v2.applyMatrix4(centerMatrix).applyMatrix4(transformMatrix);\n\n            // Get normal of the triangle, to know into which cube side it maps better\n            const n = new THREE.Vector3();\n            calcNormal(n, v0, v1, v2);\n\n            _uv[0].set(0, 0, 0);\n            _uv[1].set(0, 0, 0);\n            _uv[2].set(0, 0, 0);\n\n            // Front Face Only\n            if (frontFaceOnly) {\n                let frontFace = (n.z < 0);\n                frontFace = frontFace && (Math.abs(n.y) < 0.866); // i.e. ~30°\n                frontFace = frontFace && (Math.abs(n.x) < 0.866); // i.e. ~30°\n\n                if (frontFace) {\n                    _uv[0].x = (v0.x - bbox.min.x) / geometrySize; _uv[0].y = (v0.y - bbox.min.y) / geometrySize;\n                    _uv[1].x = (v1.x - bbox.min.x) / geometrySize; _uv[1].y = (v1.y - bbox.min.y) / geometrySize;\n                    _uv[2].x = (v2.x - bbox.min.x) / geometrySize; _uv[2].y = (v2.y - bbox.min.y) / geometrySize;\n                }\n\n            // All Six Sides\n            } else {\n                n.x = Math.abs(n.x);\n                n.y = Math.abs(n.y);\n                n.z = Math.abs(n.z);\n\n                // XZ mapping\n                if (n.y > n.x && n.y > n.z) {\n                    _uv[0].x = (v0.x - bbox.min.x) / geometrySize; _uv[0].y = (bbox.max.z - v0.z) / geometrySize;\n                    _uv[1].x = (v1.x - bbox.min.x) / geometrySize; _uv[1].y = (bbox.max.z - v1.z) / geometrySize;\n                    _uv[2].x = (v2.x - bbox.min.x) / geometrySize; _uv[2].y = (bbox.max.z - v2.z) / geometrySize;\n\n                // XY Mapping\n                } else if (n.x > n.y && n.x > n.z) {\n                    _uv[0].x = (v0.z - bbox.min.z) / geometrySize; _uv[0].y = (v0.y - bbox.min.y) / geometrySize;\n                    _uv[1].x = (v1.z - bbox.min.z) / geometrySize; _uv[1].y = (v1.y - bbox.min.y) / geometrySize;\n                    _uv[2].x = (v2.z - bbox.min.z) / geometrySize; _uv[2].y = (v2.y - bbox.min.y) / geometrySize;\n\n                // XZ Mapping\n                } else if (n.z > n.y && n.z > n.x) {\n                    _uv[0].x = (v0.x - bbox.min.x) / geometrySize; _uv[0].y = (v0.y - bbox.min.y) / geometrySize;\n                    _uv[1].x = (v1.x - bbox.min.x) / geometrySize; _uv[1].y = (v1.y - bbox.min.y) / geometrySize;\n                    _uv[2].x = (v2.x - bbox.min.x) / geometrySize; _uv[2].y = (v2.y - bbox.min.y) / geometrySize;\n                }\n            }\n        }\n\n    } // end uvMapCube\n\n    /** Maps UV coordinates onto an object that fits inside a sphere */\n    static uvMapSphere(geometry, setCoords = 'uv') {\n\n        // Convert to Non-Indexed\n        if (geometry.index !== null) {\n            const nonIndexed = geometry.toNonIndexed();\n            nonIndexed.uuid = geometry.uuid;\n            nonIndexed.name = geometry.name;\n            geometry.dispose();\n            geometry = nonIndexed;\n        }\n\n        // UV Coordinate Array\n        const coords = [];\n        coords.length = 2 * geometry.attributes.position.array.length / 3;\n\n        // Check for Existing UV Array\n        const hasUV = ! (geometry.attributes.uv === undefined);\n        if (! hasUV) geometry.addAttribute('uv', new THREE.Float32BufferAttribute(coords, 2));\n\n        // Should we set, u, v, or both\n        const setU = (! hasUV || setCoords === 'u' || setCoords === 'uv');\n        const setV = (! hasUV || setCoords === 'v' || setCoords === 'uv');\n\n        // Vertex Positions\n        const pos = geometry.attributes.position.array;\n\n        // Non-Indexed Geometry\n        for (let vi = 0; vi < geometry.attributes.position.array.length; vi += 9) {\n            _vertex[0].set(pos[vi + 0], pos[vi + 1], pos[vi + 2]);\n            _vertex[1].set(pos[vi + 3], pos[vi + 4], pos[vi + 5]);\n            _vertex[2].set(pos[vi + 6], pos[vi + 7], pos[vi + 8]);\n\n            let index = vi / 3;\n            for (let i = 0; i < 3; i++) {\n                const polar = cartesian2polar(_vertex[i]);\n\n                // Top / Bottom Vertex.x Coordinate is 0, points are alligned a little differently on top / bottom.\n                if (polar.theta === 0 && (polar.phi === 0 || polar.phi === Math.PI)) {\n                    const alignedVertex = (polar.phi === 0) ? '1' : '0';\n                    polar.theta = cartesian2polar(_vertex[alignedVertex]).theta;\n                }\n\n                setUV(polar, index, i);\n                index++;\n            }\n\n            // To check for overwrap, compare x values\n            let overwrap = false;\n            if (Math.abs(_uv[0].x - _uv[1].x) > 0.75) overwrap = true;\n            if (Math.abs(_uv[0].x - _uv[2].x) > 0.75) overwrap = true;\n            if (Math.abs(_uv[1].x - _uv[0].x) > 0.75) overwrap = true;\n            if (Math.abs(_uv[1].x - _uv[2].x) > 0.75) overwrap = true;\n            if (Math.abs(_uv[2].x - _uv[0].x) > 0.75) overwrap = true;\n            if (Math.abs(_uv[2].x - _uv[1].x) > 0.75) overwrap = true;\n\n            if (overwrap) {\n                let index = vi / 3;\n                for (let i = 0; i < 3; i++) {\n                    const x = coords[2 * index]\n                    if (x > 0.75) coords[2 * index] = 0;\n                    index++;\n                }\n            }\n        }\n\n        // Assign Coordinates\n        geometry.attributes.uv.array = new Float32Array(coords);\n        geometry.attributes.uv.needsUpdate = true;\n        return geometry;\n\n        //////////\n\n        function setUV(polarVertex, index, i) {\n            const canvasPoint = polar2canvas(polarVertex);\n            const uv = new THREE.Vector2(1 - canvasPoint.x, 1 - canvasPoint.y);\n            const indexU = 2 * index + 0;\n            const indexV = 2 * index + 1;\n            coords[indexU] = (setU) ? uv.x : geometry.attributes.uv.array[indexU];\n            coords[indexV] = (setV) ? uv.y : geometry.attributes.uv.array[indexV];\n            _uv[i].x = coords[indexU];\n            _uv[i].y = coords[indexV];\n        }\n\n        function cartesian2polar(position) {\n            let sqrd = (position.x * position.x) + (position.y * position.y) + (position.z * position.z);\n            let radius = Math.sqrt(sqrd);\n\n            return({\n                r: radius,\n                theta: Math.atan2(position.z, position.x),          // x\n                phi: Math.acos(position.y / radius)                 // y\n            });\n        }\n\n        function polar2canvas(polarPoint) {\n            return({\n                x: (polarPoint.theta + Math.PI) / (2 * Math.PI),    // theta\n                y: (polarPoint.phi / Math.PI)                       // phi\n            });\n        }\n\n    } // end uvMapShere\n\n}\n\nexport { GeometryUtils };","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Render Utility Functions\n//      offscreenRenderer           Offscreen renderer to be shared across the app\n//      renderGeometryToCanvas      Render geometry to canvas, camera centered on geometry\n//      renderTextureToCanvas       Render texture to canvas\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { CameraUtils } from './CameraUtils.js';\n\n///// Local Variables\n\nlet _renderer;\n\n///// Class\n\nclass RenderUtils {\n\n    static offscreenRenderer(width = 512, height = 512) {\n        if (_renderer === undefined) {\n            _renderer = new THREE.WebGLRenderer({ alpha: true /* transparent background */});\n        }\n        _renderer.setClearColor(0xffffff, 0);\n        _renderer.setSize(width, height, false);\n        return _renderer;\n    }\n\n    /** Render geometry, camera centered on geometry */\n    static renderGeometryToCanvas(canvas, geometry, geometryColor = 0xffffff) {\n        const scene = new THREE.Scene();\n        scene.add(new THREE.HemisphereLight(0xffffff, 0x202020, 1.5));\n        const camera = new THREE.PerspectiveCamera(50, canvas.width / canvas.height);\n        camera.position.set(0, 0, 1);\n\n        // Mesh\n        const material = new THREE.MeshLambertMaterial({ color: geometryColor });\n        const mesh = new THREE.Mesh(geometry, material);\n        scene.add(mesh);\n\n        // Fit Camera\n        CameraUtils.fitCameraToObject(camera, mesh);\n\n        // Render\n        const renderer = RenderUtils.offscreenRenderer(canvas.width, canvas.height);\n        renderer.render(scene, camera);\n\n        // Cleanup\n        material.dispose();\n\n        const context = canvas.getContext('2d');\n        if (context) {\n            context.clearRect(0, 0, canvas.width, canvas.height);\n            context.drawImage(renderer.domElement, 0, 0, canvas.width, canvas.height);\n        }\n    }\n\n    /** Render texture to canvas */\n    static renderTextureToCanvas(canvas, texture) {\n        const scene = new THREE.Scene();\n        const camera = new THREE.OrthographicCamera(-1, 1, 1, -1, 0, 1);\n        const material = new THREE.MeshBasicMaterial({ map: texture, alphaTest: true });\n        const quad = new THREE.PlaneGeometry(2, 2);\n        const mesh = new THREE.Mesh(quad, material);\n        scene.add(mesh);\n\n        const image = texture.image;\n        const renderer = RenderUtils.offscreenRenderer(image.width, image.height);\n        renderer.render(scene, camera);\n        material.dispose();\n\n        const context = canvas.getContext('2d');\n        if (context) {\n            const sAspect = image.width / image.height;\n            const dAspect = canvas.width / canvas.height;\n            let dx, dy, dw, dh, shrink;\n            if (sAspect < dAspect) {\n                dh = (image.height > canvas.height) ? canvas.height : image.height;\n                shrink = Math.min(1, canvas.height / image.height);\n                dw = image.width * shrink;\n            } else {\n                dw = (image.width > canvas.width) ? canvas.width : image.width;\n                shrink = Math.min(1, canvas.width / image.width);\n                dh = image.height * shrink;\n            }\n            dx = (canvas.width - dw) / 2;\n            dy = (canvas.height - dh) / 2;\n            context.clearRect(0, 0, canvas.width, canvas.height);\n            context.drawImage(renderer.domElement, 0, 0, image.width, image.height, dx, dy, dw, dh);\n        }\n    }\n\n}\n\nexport { RenderUtils };\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/Cloud9c/taro/blob/main/src/components/Camera.js\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { ComponentManager } from '../../ComponentManager.js';\n\nexport const CAMERA_START_DISTANCE = 5;\nexport const CAMERA_START_HEIGHT = 0;\n\n///// Local Variables\n\nconst _renderSize = new THREE.Vector2(1, 1);\n\n///// Component\n\nclass Camera {\n\n    init(data) {\n\n        ///// Generate Backend\n\n        let camera = undefined;\n\n        switch (data.style) {\n            case 'perspective':\n                // Private Properties\n                this._tanFOV = Math.tan(((Math.PI / 180) * data.fov / 2));\n                this._windowHeight = (data.fixedSize) ? 1000 : 0;\n\n                camera = new THREE.PerspectiveCamera(data.fov, 1 /* data.aspect */, data.nearPersp, data.farPersp);\n                break;\n\n            case 'orthographic':\n                camera = new THREE.OrthographicCamera(data.left, data.right, data.top, data.bottom, data.nearOrtho, data.farOrtho);\n                break;\n\n            default:\n                console.error(`Camera.init: Invalid camera type '${data.style}'`);\n        }\n\n        ///// Modifiy Camera\n\n        if (camera && camera.isCamera) {\n\n            // Set Starting Location\n            camera.position.set(0, CAMERA_START_HEIGHT, CAMERA_START_DISTANCE);\n            camera.lookAt(0, CAMERA_START_HEIGHT, 0);\n\n        } else {\n            console.log('Error with camera!');\n        }\n\n        ///// Save Data / Backend\n\n        this.backend = camera;\n        this.data = data;\n        this.style = data.style;\n    }\n\n    dispose() {\n\n    }\n\n    enable() {\n        if (this.entity && this.backend) this.entity.add(this.backend);\n    }\n\n    disable() {\n        if (this.entity && this.backend) this.entity.remove(this.backend);\n    }\n\n    updateProjectionMatrix() {\n        if (! window.getRenderer()) return;\n\n        if (this.backend && this.backend.isCamera) {\n            window.getRenderer().getSize(_renderSize);\n            let width = _renderSize.x;\n            let height = _renderSize.y;\n\n            if (this.backend.isPerspectiveCamera) {\n                if (this.data.fixedSize) this.backend.fov = (360 / Math.PI) * Math.atan(this._tanFOV * (height / this._windowHeight));\n                this.backend.aspect = width / height;\n\n            } else if (this.backend.isOrthographicCamera) {\n                let aspectWidth = 1.0;\n                let aspectHeight = 1.0;\n\n                // Calculate new frustum, update camera\n                this.backend.left =   - width / aspectWidth / 2;\n                this.backend.right =    width / aspectWidth / 2;\n                this.backend.top =      height * aspectHeight / 2;\n                this.backend.bottom = - height * aspectHeight / 2;\n            }\n\n            this.backend.updateProjectionMatrix();\n        }\n    }\n\n    toJSON() {\n        let data = this.defaultData('style', this.style);\n\n        // Copy Existing 'data' Properties\n        for (let key in data) {\n            if (this.data[key] !== undefined) {\n                data[key] = this.data[key];\n            }\n        }\n\n        // Copy values from THREE.Camera\n        if (this.backend) {\n            for (let key in data) {\n                let value = this.backend[key];\n                if (value !== undefined) {\n                    data[key] = value;\n                }\n            }\n        }\n\n        return data;\n    }\n\n}\n\nCamera.config = {\n    schema: {\n        style: { type: 'select', default: 'perspective', select: [ 'perspective', 'orthographic' ] },\n\n        nearPersp: { type: 'number', default: 1, if: { style: [ 'perspective' ] } },\n        farPersp: { type: 'number', default: 100000, if: { style: [ 'perspective' ] } },\n        nearOrtho: { type: 'number', default: -50000, if: { style: [ 'orthographic' ] } },\n        farOrtho: { type: 'number', default: 50000, if: { style: [ 'orthographic' ] } },\n\n        fov: { type: 'number', default: 58.10, if: { style: [ 'perspective' ] } },\n        fixedSize: { type: 'boolean', default: true, if: { style: [ 'perspective' ] } },\n        // aspect: { type: 'number', default: 1, if: { style: [ 'perspective' ], fixedSize: [ false ] } },\n\n        left: { type: 'number', default: -1, if: { style: [ 'orthographic' ] } },\n        right: { type: 'number', default: 1, if: { style: [ 'orthographic' ] } },\n        top: { type: 'number', default: 1, if: { style: [ 'orthographic' ] } },\n        bottom: { type: 'number', default: -1, if: { style: [ 'orthographic' ] } },\n    },\n    icon: ``,\n    color: '#4B4886',\n};\n\nComponentManager.register('camera', Camera);\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/Cloud9c/taro/blob/main/src/components/Geometry.js\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { RoundedBoxGeometry } from 'three/addons/geometries/RoundedBoxGeometry.js';\nimport { SimplifyModifier } from 'three/addons/modifiers/SimplifyModifier.js';\nimport { SVGLoader } from 'three/addons/loaders/SVGLoader.js';\n\nimport { LoopSubdivision } from 'three-subdivide';\n\nimport { AssetManager } from '../../../app/AssetManager.js';\nimport { CapsuleGeometry } from '../../../three/geometry/CapsuleGeometry.js';\nimport { ComponentManager } from '../../ComponentManager.js';\nimport { CylinderGeometry } from '../../../three/geometry/CylinderGeometry.js';\nimport { GeometryUtils } from '../../../three/utils/GeometryUtils.js';\nimport { Maths } from '../../../core/Maths.js';\n\n///// Local Variables\n\nlet _x = 0;\nlet _y = 0;\n\n///// Component\n\nclass Geometry {\n\n    init(data) {\n\n        // Copy / Clear Backend\n        if (this.backend && this.backend.isBufferGeometry) {\n            this.backend.dispose();\n            this.backend = undefined;\n        }\n\n        // Passed in Geometry\n        if (data.isBufferGeometry) {\n            const assetUUID = data.uuid;\n            AssetManager.addGeometry(data);\n\n            // Build 'data'\n            data = this.defaultData('style', 'asset');\n            data.asset = assetUUID;\n        }\n\n        ///// Generate Backend\n\n        let geometry = undefined;\n\n        switch (data.style) {\n            case 'asset':\n                let assetGeometry = AssetManager.getGeometry(data.asset);\n                if (assetGeometry && assetGeometry.isBufferGeometry) {\n                    geometry = assetGeometry.clone();\n                }\n                break;\n\n            case 'box':\n                geometry = new THREE.BoxGeometry(data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n                break;\n\n            case 'capsule':\n                // // THREE.CapsuleGeometry\n                // let capHeight = data.height / 2;\n                // let capRadius = data.radius / 1.5;\n                // geometry = new THREE.CapsuleGeometry(capRadius, capHeight, data.capSegments, data.radialSegments);\n\n                // Custom CapsuleGeometry\n                let capRadiusTop = Maths.clamp(data.radiusTop, 0.1, data.height) / 1.5;\n                let capRadiusBottom = Maths.clamp(data.radiusBottom, 0.1, data.height) / 1.5;\n                let capHeight = data.height / 1.5;\n                geometry = new CapsuleGeometry(\n                    capRadiusTop, capRadiusBottom, capHeight,\n                    data.radialSegments, data.heightSegments,\n                    data.capSegments, data.capSegments,\n                    data.thetaStart, data.thetaLength);\n\n                // Texture Mapping\n                geometry = GeometryUtils.uvMapSphere(geometry, 'v');\n                break;\n\n            case 'circle':\n                geometry = new THREE.CircleGeometry(data.radius, data.segments, data.thetaStart, data.thetaLength);\n                break;\n\n            case 'cone':\n                geometry = new CylinderGeometry(0, data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n                break;\n\n            case 'cylinder':\n                geometry = new CylinderGeometry(data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n                break;\n\n            case 'lathe':\n                //\n                // !!!!! TODO: CUSTOM LINE\n                //\n                //const points = data.points;\n\n                /// SVG\n                let svgLoader = new SVGLoader();\n                // Create Paths\n                let svgData = svgLoader.parse(`\n                    <g transform=\"matrix(1,0,0,1,-62,77.5)\">\n                        <path d=\"M125,59C151.284,141.301 106.947,164.354 84,158L83,263C100.017,285.361 110.282,295.752 143,298\" style=\"fill:none;stroke:black;stroke-width:1px;\"/>\n                    </g>\n                `);\n                // Create Shapes\n                let path = svgData.paths[Object.keys(svgData.paths)[0]];\n                let svgShapes = SVGLoader.createShapes(path);\n                let svgPoints = svgShapes[0].extractPoints(30);\n\n                // Flip Y from SVG (and reverse point CW --> CCW)\n                const points = [];\n                for (let i = svgPoints.shape.length - 1; i >= 0; i--) {\n                    points.push(new THREE.Vector2(svgPoints.shape[i].x * 0.005, svgPoints.shape[i].y * -0.005));\n                }\n\n                // Create Lathe\n                geometry = new THREE.LatheGeometry(points, data.segments, 0, data.phiLength);\n                geometry.center();\n                break;\n\n            case 'plane':\n                geometry = new THREE.PlaneGeometry(data.width, data.height, data.widthSegments, data.heightSegments);\n                break;\n\n            case 'platonicSolid':\n                switch (data.polyhedron) {\n                    case 'dodecahedron': geometry = new THREE.DodecahedronGeometry(data.radius, data.detail); break;\n                    case 'icosahedron': geometry = new THREE.IcosahedronGeometry(data.radius, data.detail); break;\n                    case 'octahedron': geometry = new THREE.OctahedronGeometry(data.radius, data.detail); break;\n                    case 'tetrahedron': geometry = new THREE.TetrahedronGeometry(data.radius, data.detail); break;\n                    default: geometry = new THREE.DodecahedronGeometry(data.radius, data.detail); break;\n                }\n                break;\n\n            case 'ring':\n                geometry = new THREE.RingGeometry(data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n                break;\n\n            case 'roundedBox':\n                geometry = new RoundedBoxGeometry(data.width, data.height, data.depth, data.segments, data.radius);\n                break;\n\n            case 'shape':\n                // PENTAGON\n                let shape = data.shapes ?? new THREE.Shape([\n                    new THREE.Vector2( 64,   8),\n                    new THREE.Vector2(  0,  64),\n                    new THREE.Vector2(-64,   8),\n                    new THREE.Vector2(-32, -64),\n                    new THREE.Vector2( 32, -64)\n                ]);\n\n                // CALIFORNIA\n                const californiaPts = [];\n                californiaPts.push(new THREE.Vector2(610, 320));\n                californiaPts.push(new THREE.Vector2(450, 300));\n                californiaPts.push(new THREE.Vector2(392, 392));\n                californiaPts.push(new THREE.Vector2(266, 438));\n                californiaPts.push(new THREE.Vector2(190, 570));\n                californiaPts.push(new THREE.Vector2(190, 600));\n                californiaPts.push(new THREE.Vector2(160, 620));\n                californiaPts.push(new THREE.Vector2(160, 650));\n                californiaPts.push(new THREE.Vector2(180, 640));\n                californiaPts.push(new THREE.Vector2(165, 680));\n                californiaPts.push(new THREE.Vector2(150, 670));\n                californiaPts.push(new THREE.Vector2( 90, 737));\n                californiaPts.push(new THREE.Vector2( 80, 795));\n                californiaPts.push(new THREE.Vector2( 50, 835));\n                californiaPts.push(new THREE.Vector2( 64, 870));\n                californiaPts.push(new THREE.Vector2( 60, 945));\n                californiaPts.push(new THREE.Vector2(300, 945));\n                californiaPts.push(new THREE.Vector2(300, 743));\n                californiaPts.push(new THREE.Vector2(600, 473));\n                californiaPts.push(new THREE.Vector2(626, 425));\n                californiaPts.push(new THREE.Vector2(600, 370));\n                californiaPts.push(new THREE.Vector2(610, 320));\n                for (let i = 0; i < californiaPts.length; i++) californiaPts[i].multiplyScalar(0.001);\n                const californiaShape = new THREE.Shape(californiaPts);\n\n                const circleShape = new THREE.Shape();\n                circleShape.absarc(0, 0, 1 /* radius */);\n\n                // Set Options\n                let options = {\n                    depth: data.depth,\n                    curveSegments: data.curveSegments,\n                    steps: data.steps,\n                    bevelEnabled: data.bevelEnabled,\n                    bevelThickness: data.bevelThickness,\n                    bevelSize: data.bevelSize,\n                    bevelSegments: data.bevelSegments,\n                };\n\n                ///// Create Geometry\n                // geometry = new TeapotGeometry(15, 18).scale(5, 5, 5);\n                // geometry = new THREE.SphereGeometry(128, 32, 32);\n                geometry = new THREE.ExtrudeGeometry(circleShape, options);\n                // geometry.translate(0, 0, data.depth / -2);\n                geometry.center();\n                break;\n\n            case 'sphere':\n                geometry = new THREE.SphereGeometry(data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n                break;\n\n            case 'torus':\n                geometry = new THREE.TorusGeometry(data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n                break;\n\n            case 'torusKnot':\n                geometry = new THREE.TorusKnotGeometry(data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n                break;\n\n            case 'tube':\n                // HEART\n                const heartShape = new THREE.Shape()\n                    .moveTo(_x + 25, _y + 25)\n                    .bezierCurveTo(_x + 25, _y + 25, _x + 20, _y, _x, _y)\n                    .bezierCurveTo(_x - 30, _y, _x - 30, _y + 35, _x - 30, _y + 35)\n                    .bezierCurveTo(_x - 30, _y + 55, _x - 10, _y + 77, _x + 25, _y + 95)\n                    .bezierCurveTo(_x + 60, _y + 77, _x + 80, _y + 55, _x + 80, _y + 35)\n                    .bezierCurveTo(_x + 80, _y + 35, _x + 80, _y, _x + 50, _y)\n                    .bezierCurveTo(_x + 35, _y, _x + 25, _y + 25, _x + 25, _y + 25);\n\n                // Convert 2D Lines to 3D Lines\n                const arcPoints = heartShape.getPoints(256);\n                const lines = [];\n                for (let i = 0; i < arcPoints.length; i += 2) {\n                    const pointA = arcPoints[i];\n                    const pointB = arcPoints[i + 1] || pointA;\n                    lines.push(\n                        new THREE.LineCurve3(\n                            new THREE.Vector3(pointA.x * 0.01, pointA.y * -0.01, 0),\n                            new THREE.Vector3(pointB.x * 0.01, pointB.y * -0.01, 0),\n                        ),\n                    );\n                }\n                const path3D = new THREE.CurvePath();\n                path3D.curves.push(...lines);\n\n                // Create Geometry\n                geometry = new THREE.TubeGeometry(path3D, data.tubularSegments, data.radius, data.radialSegments, data.closed);\n                geometry.center();\n                break;\n\n            default:\n                console.error('Geometry: Invalid geometry type ' + data.style);\n        }\n\n        ///// Modifiy Geometry\n\n        if (geometry && geometry.isBufferGeometry) {\n\n            // Saved geometry type as Name\n            const geometryName = geometry.constructor.name;\n\n            // // Simplify, TODO: Three.js/Addon is Buggy\n            // if (data.simplify < 1) {\n            //     const simplifyModifier = new SimplifyModifier()\n            //     const count = Math.max(3.0, Math.floor(geometry.attributes.position.count * data.simplify));\n\t\t\t//     let simplifiedGeometry = simplifyModifier.modify(geometry, count);\n            //     if (simplifiedGeometry) {\n            //         geometry.dispose();\n            //         geometry = simplifiedGeometry;\n            //     }\n            // }\n\n            // Subdivision\n            const subdivideParams = {\n                split: data.edgeSplit ?? false,\n                uvSmooth: data.uvSmooth ?? false,\n                flatOnly: data.flatOnly ?? false,\n                preserveEdges: false,\n                maxTriangles: 50000,\n            };\n\n            if (subdivideParams.split || data.subdivide > 0) {\n                let subdividedGeometry = LoopSubdivision.modify(geometry, data.subdivide, subdivideParams);\n                if (subdividedGeometry) {\n                    geometry.dispose();\n                    geometry = subdividedGeometry;\n                }\n            }\n\n            // Map UV Coordinates\n            if (data.textureMapping === 'cube') {\n                geometry = GeometryUtils.uvMapCube(geometry);\n            } else if (data.textureMapping === 'sphere') {\n                geometry = GeometryUtils.uvMapSphere(geometry);\n            }\n\n            // Texture Wrapping Performed on Geometry\n            if (data.wrapS !== 1 || data.wrapT !== 1) {\n                const s = Math.max(data.wrapS, 0);\n                const t = Math.max(data.wrapT, 0);\n                GeometryUtils.repeatTexture(geometry, s, t);\n            }\n\n            // Set Name to Modified Geometry\n            geometry.name = geometryName;\n\n        } else {\n            // console.log('Error with geometry!');\n        }\n\n        ///// Save Data / Backend\n\n        this.backend = geometry;\n        this.data = data;\n        this.style = data.style;\n    }\n\n    dispose() {\n        if (this.backend && this.backend.dispose) this.backend.dispose();\n    }\n\n    enable() {\n        if (! this.entity) return;\n        const materialComponent = this.entity.getComponent('material');\n        if (materialComponent !== undefined) materialComponent.refreshMesh();\n    }\n\n    disable() {\n        if (! this.entity) return;\n        const materialComponent = this.entity.getComponent('material');\n        if (materialComponent !== undefined) materialComponent.refreshMesh();\n    }\n\n    toJSON() {\n        let data = this.defaultData('style', this.style);\n\n        // Copy Existing 'data' Properties\n        for (let key in data) {\n            if (this.data[key] !== undefined) {\n                data[key] = this.data[key];\n            }\n        }\n\n        return data;\n    }\n\n}\n\nGeometry.config = {\n    schema: {\n        style: [ { type: 'select', default: 'box', select: [ 'asset', 'box', 'capsule', 'circle', 'cone', 'cylinder', 'lathe', 'plane', 'platonicSolid', 'ring', 'roundedBox', 'shape', 'sphere', 'torus', 'torusKnot', 'tube' ] } ],\n\n        // Asset UUID\n        asset: { type: 'asset', if: { style: [ 'asset' ] } },\n\n        ///// DIVIDER\n        styleDivider: { type: 'divider' },\n        /////\n\n        polyhedron: [ { type: 'select', default: 'dodecahedron', select: [ 'dodecahedron', 'icosahedron', 'octahedron', 'tetrahedron' ], if: { style: [ 'platonicSolid' ] } } ],\n\n        points: { type: 'shape', alias: 'points', default: null, if: { style: [ 'lathe' ] } },\n        shapes: { type: 'shape', alias: 'shape', default: null, if: { style: [ 'shape' ] } },\n        path: { type: 'shape', alias: 'curve', default: null, if: { style: [ 'tube' ] } },\n\n        depth: [\n            { type: 'number', default: 1.0, min: 0, step: 'grid', if: { style: [ 'box', 'roundedBox' ] } },\n            { type: 'number', default: 0.4, min: 0, step: 'grid', if: { style: [ 'shape' ] } },\n        ],\n        height: [\n            { type: 'number', default: 1.0, min: 0, step: 'grid', if: { style: [ 'box', 'capsule', 'cone', 'cylinder', 'plane', 'roundedBox' ] } },\n        ],\n        width: [\n            { type: 'number', default: 1.0, min: 0, step: 'grid', if: { style: [ 'box', 'plane', 'roundedBox' ] } },\n        ],\n\n        widthSegments: [\n            { type: 'int', default: 1, min: 1, max: 1024, promode: true, if: { style: [ 'box', 'plane' ] } },\n            { type: 'int', default: 24, min: 4, max: 1024, if: { style: [ 'sphere' ] } }\n        ],\n        heightSegments: [\n            { type: 'int', default: 1, min: 1, max: 1024, promode: true, if: { style: [ 'box', 'plane' ] } },\n            { type: 'int', default: 1, min: 1, max: 1024, if: { style: [ 'cone', 'cylinder' ] } },\n            { type: 'int', default: 24, min: 1, max: 1024, if: { style: [ 'sphere' ] } },\n        ],\n        depthSegments: [\n            { type: 'int', default: 1, min: 1, max: 1024, promode: true, if: { style: [ 'box' ] } },\n        ],\n\n        radius: [\n            { type: 'number', default: 0.25, min: 0, step: 0.01, if: { style: [ 'roundedBox' ] } },\n            { type: 'number', default: 0.50, min: 0, step: 0.01, if: { style: [ 'circle', 'cone', 'platonicSolid', 'sphere' ] } },\n            { type: 'number', default: 0.50, min: 0, step: 0.01, if: { style: [ 'torus' ] } },\n            { type: 'number', default: 0.40, min: 0, step: 0.01, if: { style: [ 'torusKnot' ] } },\n            { type: 'number', default: 0.20, min: 0, step: 0.01, if: { style: [ 'tube' ] } },\n        ],\n        radiusTop: [\n            { type: 'number', default: 0.5, min: 0, step: 0.01, if: { style: [ 'capsule' ] } },\n            { type: 'number', default: 0.5, min: 0, step: 0.01, if: { style: [ 'cylinder' ] } },\n        ],\n        radiusBottom: [\n            { type: 'number', default: 0.5, min: 0, step: 0.01, if: { style: [ 'capsule' ] } },\n            { type: 'number', default: 0.5, min: 0, step: 0.01, if: { style: [ 'cylinder' ] } },\n        ],\n\n        segments: [\n            { type: 'int', default: 36, min: 3, max: 64, if: { style: [ 'circle' ] } },\n            { type: 'int', default: 16, min: 1, max: 64, if: { style: [ 'lathe' ] } },\n            { type: 'int', default: 4, min: 1, max: 10, if: { style: [ 'roundedBox' ] } },\n        ],\n\n        thetaLength: [\n            { type: 'angle', default: 2 * Math.PI, min: 0, max: 360, if: { style: [ 'circle', 'ring' ] } },\n            { type: 'angle', default: 2 * Math.PI, min: 0, max: 360, promode: true, if: { style: [ 'capsule', 'cone', 'cylinder' ] } },\n            { type: 'angle', default: Math.PI, min: 0, max: 720, promode: true, if: { style: [ 'sphere' ] } }\n        ],\n        thetaStart: [\n            { type: 'angle', default: 0, if: { style: [ 'circle', 'ring', 'sphere' ] } },\n            { type: 'angle', default: 0, promode: true, if: { style: [ 'capsule', 'cone', 'cylinder' ] } },\n        ],\n        phiLength: { type: 'angle', default: 2 * Math.PI, max: 360, if: { style: [ 'lathe', 'sphere' ] } },\n        phiStart: { type: 'angle', default: 0, if: { style: [ 'sphere' ] } },\n\n        capSegments: { type: 'int', default: 6, min: 1, max: 36, if: { style: [ 'capsule' ] } },\n        radialSegments: [\n            { type: 'int', default: 24, min: 2, max: 64, if: { style: [ 'capsule', 'cone', 'cylinder', 'torus', 'torusKnot', 'tube' ] } },\n        ],\n\n        openEnded: { type: 'boolean', default: false, if: { style: [ 'cone', 'cylinder' ] } },\n\n        detail: { type: 'slider', default: 0, min: 0, max: 9, step: 1, precision: 0, if: { style: [ 'platonicSolid' ] } },\n\n        // Ring\n        innerRadius: { type: 'number', default: 0.25, min: 0, step: 0.01, if: { style: [ 'ring' ] } },\n        outerRadius: { type: 'number', default: 0.50, min: 0, step: 0.01, if: { style: [ 'ring' ] } },\n        phiSegments: { type: 'int', default: 10, min: 1, max: 64, promode: true, if: { style: [ 'ring' ] } },\n        thetaSegments: { type: 'int', default: 36, min: 3, max: 128, if: { style: [ 'ring' ] } },\n\n        // Shape (Extrude)\n        steps: { type: 'int', alias: 'Depth Segments', default: 8, min: 1, max: 128, promode: true, if: { style: [ 'shape' ] } },\n        bevelEnabled: { type: 'boolean', alias: 'bevel', default: true, if: { style: [ 'shape' ] } },\n        bevelThickness: { type: 'number', default: 0.2, min: 0, step: 0.01, if: { style: [ 'shape' ], bevelEnabled: [ true ] } },\n        bevelSize: { type: 'number', default: 0.2, min: 0, step: 0.01, if: { style: [ 'shape' ], bevelEnabled: [ true ] } },\n        bevelSegments: { type: 'int', default: 4, min: 0, max: 64, promode: true, if: { style: [ 'shape' ], bevelEnabled: [ true ] } },\n        curveSegments: { type: 'int', default: 16, min: 1, max: 128, promode: true, if: { style: [ 'shape' ] } },\n        // ... more\n        // extrudePath — THREE.Curve - 3D spline path along which the shape should be extruded. Bevels not supported for path extrusion\n        // UVGenerator — Object. object that provides UV generator functions\n\n        // Torus / Torus Knot\n        tube: [\n            { type: 'number', default: 0.2, min: 0, step: 0.01, if: { style: [ 'torus' ] } },\n            { type: 'number', default: 0.1, min: 0, step: 0.01, if: { style: [ 'torusKnot' ] } },\n        ],\n        tubularSegments: [\n            { type: 'int', default: 32, min: 3, max: 128, if: { style: [ 'torus' ] } },\n            { type: 'int', default: 64, min: 3, max: 128, if: { style: [ 'torusKnot' ] } },\n            { type: 'int', default: 64, min: 2, if: { style: [ 'tube' ] } },\n        ],\n        arc: { type: 'angle', default: 2 * Math.PI, min: 0, max: 360, if: { style: [ 'torus' ] } },\n\n        p: { type: 'number', default: 2, min: 1, max: 128, if: { style: [ 'torusKnot' ] } },\n        q: { type: 'number', default: 3, min: 1, max: 128, if: { style: [ 'torusKnot' ] } },\n\n        // Tube\n        closed: { type: 'boolean', default: true, if: { style: [ 'tube' ] } },\n\n        ///// DIVIDER\n        modifierDivider: { type: 'divider' },\n        /////\n\n        // // Simplify\n        // simplify: { type: 'slider', default: 1, min: 0, max: 1 },\n\n        // Subdivision\n        subdivide: { type: 'slider', default: 0, min: 0, max: 5, step: 1, precision: 0 },\n        edgeSplit: { type: 'boolean', default: false, hide: { subdivide: [ 0 ] } },\n        uvSmooth: { type: 'boolean', default: false, promode: true, hide: { subdivide: [ 0 ] } },\n        flatOnly: { type: 'boolean', default: false, promode: true, hide: { subdivide: [ 0 ] } },\n        // maxTriangles: { type: 'number', default: 25000, min: 1, promode: true },\n\n        ///// DIVIDER\n        textureDivider: { type: 'divider' },\n        /////\n\n        // Texture Mapping\n        textureMapping: [\n            { type: 'select', default: 'cube', select: [ 'none', 'cube', 'sphere' ], if: { style: [ 'shape' ] } },\n            { type: 'select', default: 'none', select: [ 'none', 'cube', 'sphere' ], if: { style: [ 'asset', 'box', 'capsule', 'circle', 'cone', 'cylinder', 'lathe', 'plane', 'platonicSolid', 'ring', 'roundedBox', 'sphere', 'torus', 'torusKnot', 'tube' ] } },\n        ],\n\n        // Texture Wrapping\n        wrapS: { type: 'number', alias: 'wrapX', default: 1, min: 0, step: 0.2, precision: 2 },\n        wrapT: { type: 'number', alias: 'wrapY', default: 1, min: 0, step: 0.2, precision: 2 },\n\n    },\n    ///// EXAMPLE: Svg Icon for Inspector Tab (built in components have images built into Editor)\n    // icon: `<svg width=\"100%\" height=\"100%\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\"></svg>`,\n    icon: ``,\n    color: 'rgb(255, 113, 0)',\n    dependencies: [ 'material' ],\n};\n\nComponentManager.register('geometry', Geometry);","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/Cloud9c/taro/blob/main/src/components/Light.js\n//\n/////////////////////////////////////////////////////////////////////////////////////\n//\n//          Three.js Light Types\n//          --------------------\n//\n// \tLight       Shadow      Description\n//\t-----       -------     -----------\n//\tAmbient     -           Globally illuminates all objects in the scene equally\n//\tDirectional YES         Light whose rays are parallel and emitted in a specific direction (Sun)\n//\tHemisphere  -           Light above the scene, with color fading from sky color to ground color\n//\tPoint       YES, SLOW   Light emitted from a single point in all directions (Lightbulb)\n//\tRectangle   -           Emits light uniformly across the face a rectangular plane (Window, Strip Light)\n//\tSpot        YES         Light gets emitted from a single point in one direction, along a cone\n//\n//\tBasic Scene\n//      'Sky' -\tHemisphere light\n//      'Sun' - Directional light\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { ComponentManager } from '../../ComponentManager.js';\n\nclass Light {\n\n    init(data) {\n\n        ///// Generate Backend\n\n        let light = undefined;\n\n        switch (data.style) {\n            case 'ambient':\n                light = new THREE.AmbientLight(data.color, data.intensity);\n                // NO SHADOWS\n                break;\n\n            case 'directional':\n                light = new THREE.DirectionalLight(data.color, data.intensity);\n                light.castShadow = true;\n                light.shadow.mapSize.width = 2048;      // default:     512\n                light.shadow.mapSize.height = 2048;     // default:     512\n\n                const SD = 5;\n\n                light.shadow.camera.near = 1;           // default:     0.5\n                light.shadow.camera.far = 500;          // default:     500\n                light.shadow.camera.left = -SD;         // default:     -5\n                light.shadow.camera.right = SD;         // default:     5\n                light.shadow.camera.top = SD;           // default:     5\n                light.shadow.camera.bottom = -SD;       // default:     -5\n\n                light.shadow.camera.updateProjectionMatrix();\n                light.shadow.bias = data.shadowBias;\n                break;\n\n            case 'hemisphere':\n                light = new THREE.HemisphereLight(data.color, data.groundColor, data.intensity);\n                // NO SHADOWS\n                break;\n\n            case 'point':\n                light = new THREE.PointLight(data.color, data.intensity, data.distance, data.decay);\n                light.castShadow = true;\n                light.shadow.bias = data.shadowBias;\n                break;\n\n            case 'spot':\n                light = new THREE.SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n                light.castShadow = true;\n                light.shadow.bias = data.shadowBias;\n                break;\n\n            default:\n                console.error(`Light: Invalid light type '${data.style}'`);\n        }\n\n        ///// Modify Light\n\n        if (light && light.isLight) {\n\n            // NOTHING\n\n        } else {\n            console.log('Error with light!');\n        }\n\n        ///// Save Data / Backend\n\n        this.backend = light;\n        this.data = data;\n        this.style = data.style;\n    }\n\n    dispose() {\n        if (this.backend && this.backend.isLight) this.backend.dispose();\n    }\n\n    enable() {\n        if (this.entity && this.backend) this.entity.add(this.backend);\n    }\n\n    disable() {\n        if (this.entity && this.backend) this.entity.remove(this.backend);\n    }\n\n    toJSON() {\n        let data = this.defaultData('style', this.style);\n\n        // Copy Existing 'data' Properties\n        for (let key in data) {\n            if (this.data[key] !== undefined) {\n                data[key] = this.data[key];\n            }\n        }\n\n        // Copy values from THREE.Light\n        if (this.backend) {\n            for (let key in data) {\n                let value = this.backend[key];\n                if (value !== undefined) {\n                    if (value && value.isColor) data[key] = value.getHex();\n                    else data[key] = value;\n                }\n            }\n\n            // Manually include shadow properties\n            if (this.backend.shadow) {\n                data['shadowBias'] = this.backend.shadow.bias;\n            }\n        }\n\n        return data;\n    }\n\n}\n\nLight.config = {\n    schema: {\n        style: { type: 'select', default: 'ambient', select: [ 'ambient', 'directional', 'hemisphere', 'point', 'spot' ] },\n\n        ///// DIVIDER\n        styleDivider: { type: 'divider' },\n        /////\n\n        color: [\n            { type: 'color', default: 0xffffff, if: { style: [ 'ambient', 'directional', 'point', 'spot' ] } },\n            { type: 'color', alias: 'skyColor', default: 0x80ffff, if: { style: [ 'hemisphere' ] } },\n        ],\n        groundColor: { type: 'color', default: 0x806040, if: { style: [ 'hemisphere' ] } },\n        intensity: [\n            { type: 'slider', default: 0.25 /* 0.5 */, step: 0.1, min: 0, max: 2, if: { style: [ 'ambient' ] } },\n            { type: 'slider', default: 0.50 /* 0.5 */, step: 0.1, min: 0, max: 2, if: { style: [ 'hemisphere' ] } },\n            { type: 'slider', default: 1.00 /* 0.5 */, step: 0.1, min: 0, max: 2, if: { style: [ 'directional' ] } },\n            { type: 'slider', default: 1.00 /* 1.0 */, step: 0.1, min: 0, max: 2, if: { style: [ 'point', 'spot' ] } },\n        ],\n        distance: { type: 'number', default: 0, if: { style: [ 'point', 'spot' ] } },\n        decay: { type: 'number', default: 1, if: { style: [ 'point', 'spot' ] } },\n        angle: { type: 'number', default: Math.PI / 3, unit: '°', if: { style: [ 'spot' ] } },\n        penumbra: { type: 'number', default: 0, if: { style: [ 'spot' ] } },\n\n        shadowBias: { type: 'number', default: 0, precision: 6, promode: true, if: { style: [ 'directional', 'point', 'spot' ] } }\n    },\n    icon: ``,\n    color: '#222222',\n};\n\nComponentManager.register('light', Light);\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/Cloud9c/taro/blob/main/src/components/Material.js\n//\n/////////////////////////////////////////////////////////////////////////////////////\n//\n// Three.js materials, in order of quality\n//      MeshBasicMaterial,          // not affected by lights\n//      MeshLambertMaterial,        // non-physically based material for non-shiny surfaces, without specular highlights\n//      MeshPhongMaterial,          // non-physically based material for shiny surfaces with specular highlights\n//      MeshStandardMaterial,       // standard physically based material, using Metallic-Roughness workflow\n//      MeshPhysicalMaterial,       // extension of MeshStandardMaterial, providing even more advanced physically-based rendering\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n// import { RGBELoader } from 'three/addons/loaders/RGBELoader.js';\n\nimport { AssetManager } from '../../../app/AssetManager.js';\nimport { ComponentManager } from '../../ComponentManager.js';\nimport { GeometryUtils } from '../../../three/utils/GeometryUtils.js';\nimport { Maths } from '../../../core/Maths.js';\nimport { System } from '../../../core/System.js';\n\n///// Types\n\nconst blendingModes = [ 'NoBlending', 'NormalBlending', 'AdditiveBlending', 'SubstractiveBlending', 'MultiplyBlending', 'CustomBlending' ];\nconst sides = [ 'FrontSide', 'BackSide', 'DoubleSide' ];\nconst depthPacking = [ 'BasicDepthPacking', 'RGBADepthPacking' ];\n\n// const hdrEquirect = new RGBELoader().setPath('../scene3d/components/textures/')\n// .load('royal_esplanade_1k.hdr', () => hdrEquirect.mapping = THREE.EquirectangularReflectionMapping);\n\n///// Component\n\nclass Material {\n\n    init(data) {\n\n        // Copy / Clear Backend\n        if (this.backend && this.backend.isMaterial) {\n            this.backend.dispose();\n            this.backend = undefined;\n        }\n\n        const parameters = {};\n\n        // Passed in Material\n        if (data.isMaterial) {\n            const assetUUID = data.uuid;\n            AssetManager.addMaterial(data);\n\n            // Build 'data'\n            data = this.defaultData('style', 'asset');\n            data.asset = assetUUID;\n\n        // Need to Build Material from data\n        } else {\n\n            // Copy data to THREE material 'parameters'\n            for (const key in data) {\n                const value = data[key];\n                parameters[key] = value;\n\n                // Check if wants map (texture)\n                let checkType = Material.config.schema[key];\n                if (System.isIterable(checkType) && checkType.length > 0) checkType = checkType[0];\n                if (value && checkType && checkType.type === 'image') {\n\n                    // Make sure texture is in AssetManager\n                    if (value.isTexture) {\n                        AssetManager.addTexture(value);\n\n                    // If no texture was provided, could be UUID\n                    } else {\n\n                        // Check AssetManager for Texture\n                        const textureCheck = AssetManager.getTexture(value);\n                        if (textureCheck && textureCheck.isTexture === true) {\n                            parameters[key] = textureCheck;\n\n                        // No such texture found, set to null\n                        } else {\n                            parameters[key] = null;\n                        }\n\n                    }\n\n                }\n            }\n\n            // Remove data not used in THREE materials\n            delete parameters['base'];\n            delete parameters['style'];\n            delete parameters['edgeSize'];\n            delete parameters['gradientSize'];\n            delete parameters['premultiplyAlpha'];\n\n            // Convert 'string' data to 'int'\n            if (typeof parameters.blending === 'string') parameters.blending = blendingModes.indexOf(parameters.blending);\n            if (typeof parameters.side === 'string') parameters.side = sides.indexOf(parameters.side);\n            if (parameters.depthPacking === 'BasicDepthPacking') parameters.depthPacking = THREE.BasicDepthPacking;\n            if (parameters.depthPacking === 'RGBADepthPacking') parameters.depthPacking = THREE.RGBADepthPacking;\n        }\n\n        ///// Generate Backend\n\n        let material = undefined;\n\n        switch (data.style) {\n            case 'asset':\n                let assetMaterial = AssetManager.getMaterial(data.asset);\n                if (assetMaterial && assetMaterial.isMaterial) {\n                    material = assetMaterial.clone();\n                }\n                break;\n            case 'basic': material = new THREE.MeshBasicMaterial(parameters); break;\n            case 'depth': material = new THREE.MeshDepthMaterial(parameters); break;\n            case 'lambert': material = new THREE.MeshLambertMaterial(parameters); break;\n            case 'matcap': material = new THREE.MeshMatcapMaterial(parameters); break;\n            case 'normal': material = new THREE.MeshNormalMaterial(parameters); break;\n            case 'phong': material = new THREE.MeshPhongMaterial(parameters); break;\n            case 'physical': material = new THREE.MeshPhysicalMaterial(parameters); break;\n            case 'points': material = new THREE.PointsMaterial(parameters); break;\n            case 'shader': material = new THREE.ShaderMaterial(parameters); break;\n            case 'standard': material = new THREE.MeshStandardMaterial(parameters); break;\n            case 'toon':\n                material = new THREE.MeshToonMaterial(parameters);\n                data.gradientSize = Math.min(Math.max(data.gradientSize, 1), 16);\n                const format = (getRenderer().capabilities.isWebGL2) ? THREE.RedFormat : THREE.LuminanceFormat;\n                const colors = new Uint8Array(data.gradientSize + 2);\n                for (let c = 0; c <= colors.length; c++) colors[c] = (c / colors.length) * 256;\n                material.gradientMap = new THREE.DataTexture(colors, colors.length, 1, format);\n                material.gradientMap.needsUpdate = true;\n                break;\n            default:\n                console.error(`Material: Invalid material type '${data.style}'`);\n        }\n\n        ///// Modifiy Material\n\n        if (material && material.isMaterial) {\n\n            // NOTHING\n\n        } else {\n            console.log('Error with material!');\n        }\n\n        ///// Save Data / Backend\n\n        this.backend = material;\n        this.data = data;\n        this.style = data.style;\n    }\n\n    dispose() {\n        if (this.backend && this.backend.dispose) this.backend.dispose();\n    }\n\n    enable() {\n        this.refreshMesh();\n    }\n\n    disable() {\n        this.refreshMesh();\n    }\n\n    refreshMesh() {\n        // Remove current Mesh\n        if (this.entity && this.mesh) this.entity.remove(this.mesh);\n        if (this.enabled !== true) return;\n\n        // Get material and geometry (if present)\n        if (! this.backend || ! this.backend.isMaterial) return;\n        const material = this.backend.clone();\n        extendMaterial(material, this.toJSON());\n\n        const geometryComponent = this.entity.getComponent('geometry');\n        if (! geometryComponent) return;\n        if (! geometryComponent.enabled) return;\n        const geometry = geometryComponent.backend;\n        if (! geometry) return;\n\n        // Create mesh\n        if (this.style === 'points') {\n            this.mesh = new THREE.Points(geometry, material);\n        } else {\n            // Create Mesh\n            this.mesh = new THREE.Mesh(geometry, material);\n            this.mesh.castShadow = this.entity.castShadow;\n            this.mesh.receiveShadow = this.entity.receiveShadow;\n        }\n        this.mesh.name = `Backend Object3D for ${this.entity.name}`;\n\n        // Glass\n        const isGlass = this.backend.isMeshPhysicalMaterial === true && this.backend.transmission > 0;\n        if (isGlass) this.backend.envMap = hdrEquirect;\n\n        // Show invisible objects as wireframe\n        if (this.backend.opacity < 0.05) {\n            if (window.activeCamera && window.editor && window.editor.viewport) {\n                if (activeCamera.uuid === editor.viewport.camera.uuid) {\n                    material.map = null;\n                    material.opacity = 0.25;\n                    material.wireframe = true;\n                    this.mesh.castShadow = false;\n                }\n            }\n        }\n\n        // !!!!! NOTE:  Adding backend mesh into Project as Object3D only.\n        //              Mesh will not be exported, shown in SceneTree, etc.\n        if (this.entity && this.mesh) this.entity.add(this.mesh);\n    }\n\n    toJSON() {\n        let data = this.defaultData('style', this.style);\n\n        // Copy Existing 'data' Properties\n        for (let key in data) {\n            if (this.data[key] !== undefined) {\n                // Save 'map' types (textures) as uuid only\n                if (this.data[key] && this.data[key].isTexture) {\n                    data[key] = this.data[key].uuid;\n\n                // Normal Data\n                } else {\n                    data[key] = this.data[key];\n                }\n            }\n        }\n\n        return data;\n    }\n\n}\n\n//////////////////// Extend Material\n\nfunction extendMaterial(material, data = { style: 'basic', premultiplyAlpha: true }) {\n    if (! material || ! material.isMaterial) return;\n\n    let wantsOpaque = (data && data.opacity === 1.0 && data.map === undefined);\n\n    // Standard Values\n    material.transparent = ! wantsOpaque;               // Opaque? Auto adjust 'transparent' (speeds rendering)\n    material.alphaTest = 0.01;                          // Save time rendering transparent pixels\n    material.polygonOffset = true;                      // Helps Z-Fighting\n    material.polygonOffsetFactor = 1;                   // Positive value pushes polygon further away\n\n    // On Before Compile\n    material.onBeforeCompile = function(shader) {\n\n        // Toon Bit Depth / Rounding Improvements\n        if (data.style === 'toon') {\n            shader.uniforms = THREE.UniformsUtils.merge([\n                shader.uniforms, {\n                    uBitDepth: { value: data.gradientSize ?? 4},\n                    uEdgeSize: { value: data.edgeSize ?? 6 },\n                    uTextureWidth: { value: 100.0 },\n                    uTextureHeight: { value: 100.0 },\n                },\n            ]);\n\n            if (material.map && material.map.isTexture) {\n                shader.uniforms.uTextureWidth.value = material.map.image.width;\n                shader.uniforms.uTextureHeight.value = material.map.image.height;\n            }\n\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <common>',\n                [ \t'#include <common>',\n                    '',\n                    'uniform float uBitDepth;',\n                    'uniform float uEdgeSize;',\n                    'uniform float uTextureWidth;',\n                    'uniform float uTextureHeight;',\n                    '',\n                    // ---------- Adding Below ----------\n                    // Convert red/green/blue to hue/saturation/vibrance\n                    'vec3 rgbToHsv(vec3 c) {',\n                    '   vec4  K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);',\n                    '   vec4  p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));',\n                    '   vec4  q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));',\n                    '   float d = q.x - min(q.w, q.y);',\n                    '   float e = 1.0e-10;',\n                    '   return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);',\n                    '}',\n                    // Convert hue/saturation/vibrance to red/green/blue'\n                    'vec3 hsvToRgb(vec3 c) {',\n                    '   vec4  K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);',\n                    '   vec3  p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);',\n                    '   return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);',\n                    '}',\n                    '',\n                    // Averaged pixel intensity from 3 color channels\n                    'float avgIntensity(vec4 pix) {',\n                    '   return (pix.r + pix.g + pix.b) / 3.0;',\n                    '}',\n                ].join('\\n')\n            );\n\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <color_fragment>',\n                [\t'#include <color_fragment>',\n                    // ---------- Adding Below ----------\n                    // Cartoon RgbToHsv\n                    'vec3 original_color = diffuseColor.rgb;',\n                    'vec3 v_hsv = rgbToHsv(original_color.rgb);',\n                    'float amt = 1.0 / (uBitDepth + 8.0);',\n                    'float hueIncrease = 1.05;',\n                    'float satIncrease = 1.10;',\n                    'float vibIncrease = 1.75;',\n                    'v_hsv.x = clamp(amt * (floor(v_hsv.x / amt) * hueIncrease), 0.0, 1.0);',\n                    'v_hsv.y = clamp(amt * (floor(v_hsv.y / amt) * satIncrease), 0.0, 1.0);',\n                    'v_hsv.z = clamp(amt * (floor(v_hsv.z / amt) * vibIncrease), 0.0, 1.0);',\n\n                    // Check for Edge\n                    '#ifdef USE_MAP',\n                    '   vec2 coords = vUv;',\n                    '   float dxtex = 1.0 / uTextureWidth;',\n                    '   float dytex = 1.0 / uTextureHeight;',\n                    '   float edge_thres  = 0.15;',\n                    '   float edge_thres2 = uEdgeSize;',\n                    '   float pix[9];',\n                    '   int   k = -1;',\n                    '   float delta;',\n                        // Read neighboring pixel intensities\n                    '   for (int i = -1; i < 2; i++) {',\n                    '       for (int j = -1; j < 2; j++) {',\n                    '           k++;',\n                    '           vec2 sampleCoords = vec2(coords.x + (float(i) * dxtex), coords.y + (float(j) * dytex));',\n                    '           vec4 texSample = texture2D(map, sampleCoords);',\n                    '           pix[k] = avgIntensity(texSample);',\n                    '       }',\n                    '   }',\n                        // Average color differences around neighboring pixels\n                    '   delta = (abs(pix[1] - pix[7]) + abs(pix[5] - pix[3]) + abs(pix[0] - pix[8]) + abs(pix[2] - pix[6]) ) / 4.0;',\n                    '   float edg = clamp(edge_thres2 * delta, 0.0, 1.0);',\n                    '   vec3 v_rgb = (edg >= edge_thres) ? vec3(0.0) : hsvToRgb(v_hsv.xyz);',\n                    '#else',\n                    '   vec3 v_rgb = hsvToRgb(v_hsv.xyz);',\n                    '#endif',\n\n                    // Hsv Color\n                    'diffuseColor.rgb = vec3(v_rgb.x, v_rgb.y, v_rgb.z);',\n\n                    // Bit Depth\n                    'float bit_depth = uBitDepth;',\n                    'float bitR = floor(diffuseColor.r * bit_depth);',\n                    'float bitG = floor(diffuseColor.g * bit_depth);',\n                    'float bitB = floor(diffuseColor.b * bit_depth);',\n                    'diffuseColor.rgb = vec3(bitR, bitG, bitB) / bit_depth;',\n                ].join('\\n')\n            );\n        }\n\n        // Premuliply / Premultiplied Alphas Shader Fix, replaces code from:\n        // https://github.com/mrdoob/three.js/blob/master/src/renderers/shaders/ShaderChunk/premultiplied_alpha_fragment.glsl.js\n        //\n        // Replaces     \"gl_FragColor.rgb *= gl_FragColor.a;\"\n        // With         \"gl_FragColor.rgba *= gl_FragColor.a;\"\n        //\n        if (data.premultiplyAlpha && shader.fragmentShader) {\n            shader.fragmentShader = shader.fragmentShader.replace(\n                '#include <premultiplied_alpha_fragment>',\n                'gl_FragColor.rgba *= gl_FragColor.a;'\n            );\n        }\n    };\n\n    // Premuliply / Premultiplied Alphas Blend Equations\n    if (data.premultiplyAlpha) {\n        material.blending = THREE.CustomBlending;\n        material.blendEquation = THREE.AddEquation;\n        material.blendSrc = THREE.OneFactor;\n        material.blendDst = THREE.OneMinusSrcAlphaFactor;\n        material.blendEquationAlpha = THREE.AddEquation;\n        material.blendSrcAlpha = THREE.OneFactor;\n        material.blendDstAlpha = THREE.OneMinusSrcAlphaFactor;\n    }\n\n    // Needs Update\n    material.needsUpdate = true;\n    return material;\n}\n\n//////////////////// Schema\n\nMaterial.config = {\n    schema: {\n\n        style: [\n            { type: 'select', default: 'standard', promode: true, select: [ 'asset', 'basic', 'depth', 'lambert', 'matcap', 'normal', 'phong', 'physical', 'points', 'shader', 'standard', 'toon' ] },\n            { type: 'select', default: 'standard', select: [ 'basic', 'points', 'standard', 'toon' ] },\n        ],\n\n        ///// DIVIDER\n        styleDivider: { type: 'divider' },\n        /////\n\n        asset: { type: 'asset', if: { style: [ 'asset' ] } },\n\n        color: { type: 'color', if: { style: [ 'basic', 'lambert', 'matcap', 'phong', 'physical', 'points', 'standard', 'toon' ] } },\n        emissive: { type: 'color', default: 0x000000, if: { style: [ 'lambert', 'phong', 'physical', 'standard', 'toon' ] } },\n        emissiveIntensity: { type: 'slider', default: 1, min: 0, max: 2, promode: true, if: { style: [ 'lambert', 'phong', 'physical', 'standard', 'toon' ] } },\n\n        opacity: { type: 'slider', default: 1.0, min: 0.0, max: 1.0, if: { style: [ 'basic', 'depth', 'lambert', 'matcap', 'normal', 'phong', 'physical', 'points', 'standard', 'toon' ] } },\n\n        depthTest: { type: 'boolean', default: true, promode: true, if: { style: [ 'basic', 'depth', 'lambert', 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n        depthWrite: { type: 'boolean', default: true, promode: true, if: { style: [ 'basic', 'depth', 'lambert', 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n        flatShading: { type: 'boolean', default: false, if: { style: [ 'phong', 'physical', 'standard', 'normal', 'matcap' ] } },\n        premultiplyAlpha: { type: 'boolean', default: true, promode: true, if: { style: [ 'basic', 'depth', 'lambert', 'matcap', 'normal', 'phong', 'physical', 'points', 'standard', 'toon' ] } },\n        wireframe: { type: 'boolean', default: false, if: { style: [ 'basic', 'depth', 'lambert', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n        vertexColors: { type: 'boolean', default: false, promode: true, if: { style: [ 'basic', 'depth', 'lambert', 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n\n        size: { type: 'slider', default: 0.05, min: 0, max: 1, if: { style: [ 'points' ] } },\n        sizeAttenuation: { type: 'boolean', default: true, if: { style: [ 'points' ] } },\n\n        edgeSize: { type: 'slider', default: 6, min: 0, max: 10, step: 1, precision: 0, if: { style: [ 'toon' ] } },\n        gradientSize: { type: 'slider', default: 4, min: 1, max: 16, step: 1, precision: 0, if: { style: [ 'toon' ] } },\n        // gradientMap: { type: 'image', if: { style: [ 'toon' ] } },\n\n        metalness: { type: 'slider', default: 0.1, min: 0.0, max: 1.0, if: { style: [ 'physical', 'standard' ] } },\n        roughness: { type: 'slider', default: 1.0, min: 0.0, max: 1.0, if: { style: [ 'physical', 'standard' ] } },\n\n        specular: { type: 'color', default: 0x111111, if: { style: [ 'phong' ] } },\n        shininess: { type: 'number', default: 30, if: { style: [ 'phong' ] } },\n\n        clearcoat: { type: 'slider', default: 0.0, min: 0.0, max: 1.0, if: { style: [ 'physical' ] } },\n        clearcoatRoughness: { type: 'slider', default: 0.0, min: 0.0, max: 1.0, if: { style: [ 'physical' ] } },\n        ior: { type: 'slider', default: 1.5, min: 1.0, max: 2.0, if: { style: [ 'physical' ] } },\n        sheen: { type: 'slider', default: 0.0, min: 0.0, max: 1.0, if: { style: [ 'physical' ] } },\n        sheenRoughness: { type: 'slider', default: 0.0, min: 0.0, max: 1.0, if: { style: [ 'physical' ] } },\n        sheenColor: { type: 'color', if: { style: [ 'physical' ] } },\n        specularColor: { type: 'color', promode: true, if: { style: [ 'physical' ] } },\n        specularIntensity: { type: 'slider', default: 1, min: 0, max: 2, promode: true, if: { style: [ 'physical' ] } },\n        thickness: { type: 'slider', default: 0.0, min: 0.0, max: 5.0, if: { style: [ 'physical' ] } },\n        transmission: { type: 'slider', default: 0.0, min: 0.0, max: 1.0, if: { style: [ 'physical' ] } },\n\n        depthPacking: { type: 'select', default: 'BasicDepthPacking', select: depthPacking, if: { style: [ 'depth' ] } },\n\n        ///// Standard Maps\n        map: [\n            { type: 'image', if: { style: [ 'basic', 'depth', 'lambert', 'matcap', 'phong', 'physical', 'standard', 'toon' ] } },\n            { type: 'image', if: { style: [ 'points' ] } },\n        ],\n\n        matcap: { type: 'image', if: { style: [ 'matcap' ] } },\n\n        ///// Surface Maps (see: https://market.pmnd.rs/material/stylized-crystal)\n        alphaMap: { type: 'image', promode: true, if: { style: [ 'basic', 'depth', 'lambert', 'matcap', 'phong', 'physical', 'points', 'standard', 'toon' ] } },\n        bumpMap: { type: 'image', promode: true, if: { style: [ 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n        bumpScale: { type: 'slider', default: 1, min: 0, max: 2, promode: true, if: { style: [ 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n        clearcoatNormalMap: { type: 'image', promode: true, if: { style: [ 'physical' ] } },\n        clearcoatNormalScale: { type: 'vector2', default: [ 1, 1 ], promode: true, if: { style: [ 'physical' ] } },\n        displacementMap: { type: 'image', promode: true, if: { style: [ 'depth', 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n        displacementScale: { type: 'slider', default: 1, min: 0, max: 2, promode: true, if: { style: [ 'depth', 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n        emissiveMap: { type: 'image', promode: true, if: { style: [ 'lambert', 'phong', 'physical', 'standard', 'toon' ] } },\n        metalnessMap: { type: 'image', promode: true, if: { style: [ 'physical', 'standard' ] } },\n        roughnessMap: { type: 'image', promode: true, if: { style: [ 'physical', 'standard' ] } },\n        specularMap: { type: 'image', promode: true, if: { style: [ 'basic', 'lambert', 'phong' ] } },\n        thicknessMap: { type: 'image', promode: true, if: { style: [ 'physical' ] } },\n        transmissionMap: { type: 'image', promode: true, if: { style: [ 'physical' ] } },\n\n        ///// Light Maps\n        aoMap: { type: 'image', promode: true, if: { style: [ 'basic', 'lambert', 'phong', 'physical', 'standard', 'toon' ] } },\n        // aoMapIntensity: { type: 'slider', promode: true, default: 1, min: 0, max: 100, if: { style: [ 'basic', 'lambert', 'phong', 'physical', 'standard', 'toon' ] } },\n        envMap: { type: 'image', promode: true, if: { style: [ 'basic', 'lambert', 'phong', 'physical', 'standard' ] } },\n        // envMapIntensity: { type: 'slider', default: 1, min: 0, max: 2, promode: true, if: { style: [ 'physical', 'standard' ] } },\n        lightMap: { type: 'image', promode: true, if: { style: [ 'basic', 'lambert', 'phong', 'physical', 'standard', 'toon' ] } },\n        // lightMapIntensity: { type: 'number', default: 1, if: { style: [ 'basic', 'lambert', 'phong', 'physical', 'standard', 'toon' ] } },\n        normalMap: { type: 'image', if: { style: [ 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n        // normalScale: { type: 'vector2', default: [ 1, 1 ], promode: true, if: { style: [ 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n\n        ///// Front / Back / Double\n        side: { type: 'select', default: 'FrontSide', select: sides, if: { style: [ 'basic', 'depth', 'lambert', 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n\n        ////////// The following Material parameters are handled internally\n        // transparent: { type: 'boolean', promode: true, default: true },\n        // blending: { type: 'select', default: 'NormalBlending', select: blendingModes, if: { style: [ 'basic', 'depth', 'lambert', 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n        // alphaTest: { type: 'number', default: 0.05, min: 0, max: 1, if: { style: [ 'basic', 'depth', 'lambert', 'matcap', 'normal', 'phong', 'physical', 'standard', 'toon' ] } },\n    },\n    icon: ``,\n    color: 'rgb(165, 243, 0)',\n    dependencies: [ 'geometry' ],\n};\n\nComponentManager.register('material', Material);\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n//\n//  Additional Source(s)\n//      MIT     https://github.com/Cloud9c/taro/blob/main/src/components/Renderable.js\n//\n/////////////////////////////////////////////////////////////////////////////////////\n\nimport * as THREE from 'three';\n\nimport { ComponentManager } from '../../ComponentManager.js';\n\n///// Component\n\nclass Mesh {\n\n    //\n    //\n    //          NEEDS WORK!!!!\n    //\n    //\n\n    init(data) {\n        // Reference to Backend\n        this.backend = (data.isObject3D) ? data : new THREE.Object3D();\n        this.backend.traverse((child) => { child.castShadow = this.entity.castShadow; });\n        this.backend.traverse((child) => { child.receiveShadow = this.entity.receiveShadow; });\n    }\n\n    dispose() {\n\n    }\n\n    enable() {\n        if (this.entity && this.backend) this.entity.add(this.backend);\n    }\n\n    disable() {\n        if (this.entity && this.backend) this.entity.remove(this.backend);\n    }\n\n    toJSON() {\n\n    }\n\n}\n\nMesh.config = {\n    multiple: true,\n    icon: ``,\n    color: '#F7DB63',\n};\n\nComponentManager.register('mesh', Mesh);\n","/** /////////////////////////////////////////////////////////////////////////////////\n//\n// @description Onsight Engine\n// @about       Powerful, easy-to-use JavaScript video game and application creation engine.\n// @author      Stephens Nunnally <@stevinz>\n// @license     MIT - Copyright (c) 2021-2022 Stephens Nunnally and Scidian Software\n// @source      https://github.com/onsightengine/onsight\n//\n///////////////////////////////////////////////////////////////////////////////////*/\n\n///// General\n\nexport const NAME = 'Onsight';\nexport const REVISION = '0.0.1';\nexport const BACKEND3D = 'THREE';\n\n///// Project Types\n\nexport const ENTITY_TYPES = {\n    Entity3D:       'Entity3D',\n};\n\nexport const SCENE_TYPES = {\n    Scene3D:        'Scene3D',\n};\n\nexport const WORLD_TYPES = {\n    World3D:        'World3D',\n};\n\n///// Flags\n\nexport const ENTITY_FLAGS = {\n    LOCKED:         'flagLocked',\n    TEMP:           'flagTemp',\n}\n\n///// App States\n\nexport const APP_STATES = {\n    PLAYING:        'playing',\n    PAUSED:         'paused',\n    STOPPED:        'stopped',\n}\n\n///// Camera Constants\n\nexport { CAMERA_SCALE, CAMERA_START_DISTANCE, CAMERA_START_HEIGHT } from './three/utils/CameraUtils.js'\n\n/////////////////////////////////////////////////////////////////////////////////////\n/////   Onsight Classes\n/////////////////////////////////////////////////////////////////////////////////////\n\n///// App\n\nexport { App } from './app/App.js';\nexport { AssetManager } from './app/AssetManager.js';\nexport { EntityPool } from './app/EntityPool.js';\n\n///// Core\n\nexport { ColorEye } from './core/ColorEye.js';\nexport { Maths } from './core/Maths.js';\nexport { Strings } from './core/Strings.js';\nexport { System } from './core/System.js';\nexport { Vectors } from './core/Vectors.js';\n\n///// Project\n\nexport { ComponentManager } from './project/ComponentManager.js';\nexport { Project } from './project/Project.js';\n\n///// Project - Scene3D\n\nexport { Entity3D } from './project/scene3d/Entity3D.js';\nexport { Object3D } from './project/scene3d/Object3D.js';\nexport { Scene3D } from './project/scene3d/Scene3D.js';\nexport { World3D } from './project/scene3d/World3D.js';\n\nexport { SVGBuilder } from './project/scene3d/builders/SVGBuilder.js';\n\n///// Three - Geometry\n\nexport { CapsuleGeometry } from './three/geometry/CapsuleGeometry.js';\nexport { CylinderGeometry } from './three/geometry/CylinderGeometry.js';\nexport { PrismGeometry } from './three/geometry/PrismGeometry.js';\nexport { BasicLine, BasicWireBox, BasicWireframe } from './three/geometry/Wireframe.js';\nexport { FatLine, FatWireBox, FatWireframe } from './three/geometry/Wireframe.js';\n\n///// Three - Objects\n\nexport { HelperObject } from './three/objects/HelperObject.js';\nexport { SkyObject } from './three/objects/SkyObject.js';\n\n///// Three - Passes\n\nexport { DepthPass } from './three/passes/DepthPass.js';\nexport { GpuPickerPass } from './three/passes/GpuPickerPass.js';\nexport { OutlinePass } from './three/passes/OutlinePass.js';\nexport { WireframePass } from './three/passes/WireframePass.js';\n\n///// Three - Shaders\n\nexport { DepthShader } from './three/shaders/DepthShader.js';\nexport { TexturedShader } from './three/shaders/TexturedShader.js';\nexport { XRayShader } from './three/shaders/XRayShader.js';\n\n///// Three - Utils\n\nexport { CameraUtils } from './three/utils/CameraUtils.js';\nexport { EntityUtils } from './three/utils/EntityUtils.js';\nexport { GeometryUtils } from './three/utils/GeometryUtils.js';\nexport { ObjectUtils } from './three/utils/ObjectUtils.js';\nexport { RenderUtils } from './three/utils/RenderUtils.js';\n\n///// Register Components (files self register w/Component Manager on import)\n\nimport './project/scene3d/components/Camera.js';\nimport './project/scene3d/components/Geometry.js';\nimport './project/scene3d/components/Light.js';\nimport './project/scene3d/components/Material.js';\nimport './project/scene3d/components/Mesh.js';\n\n///// Single Import\n\nif (typeof window !== 'undefined') {\n    if (window.__ONSIGHT__) {\n        console.warn('Multiple instances of Onsight being imported');\n    } else {\n        window.__ONSIGHT__ = REVISION;\n    }\n}\n"],"names":["CAMERA_START_DISTANCE","CAMERA_START_HEIGHT","THREE","_objPosition","_objQuaternion","_objScale","mergeBufferGeometries","SVGLoader","Line2","LineGeometry","LineMaterial","LineSegmentsGeometry","Wireframe","WireframeGeometry2","Pass","ShaderPass","CopyShader","FullScreenQuad","_renderer","RoundedBoxGeometry","LoopSubdivision"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAAA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAmBA;IACA;AACA;AACY,UAAC,YAAY,GAAG,KAAK;AACrB,UAACA,uBAAqB,GAAG,EAAE;AAC3B,UAACC,qBAAmB,GAAG,EAAE;AACrC;IACA;AACA;IACA,MAAM,UAAU,GAAG,IAAIC,gBAAK,CAAC,SAAS,EAAE,CAAC;AACzC;IACA;AACA;IACA,MAAM,WAAW,CAAC;AAClB;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAO,kBAAkB,CAAC,QAAQ,EAAE,SAAS,EAAE,OAAO,GAAG,MAAM,EAAE,WAAW,GAAG,CAAC,EAAE;IACtF;IACA,QAAQ,MAAM,MAAM,GAAG,IAAIA,gBAAK,CAAC,kBAAkB,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;AAC7E;IACA;IACA,QAAQ,MAAM,CAAC,WAAW,GAAG,WAAW,CAAC;IACzC,QAAQ,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC;AACjC;IACA;IACA,QAAQ,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAED,qBAAmB,EAAED,uBAAqB,CAAC,CAAC;IAC3E,QAAQ,MAAM,CAAC,MAAM,CAAC,CAAC,EAAEC,qBAAmB,EAAE,CAAC,CAAC,CAAC;AACjD;IACA,QAAQ,WAAW,CAAC,kBAAkB,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IACpE,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,OAAO,iBAAiB,CAAC,QAAQ,EAAE,SAAS,EAAE,SAAS,GAAG,IAAI,EAAE;IACpE;IACA,QAAQ,MAAM,MAAM,GAAG,IAAIC,gBAAK,CAAC,iBAAiB;IAClD,YAAY,KAAK;IACjB,YAAY,CAAC;IACb,YAAY,IAAI;IAChB,YAAY,IAAI;IAChB,SAAS,CAAC;AACV;IACA;IACA,QAAQ,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,MAAM,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC;IACrE,QAAQ,MAAM,CAAC,YAAY,GAAG,CAAC,SAAS,IAAI,IAAI,kDAAkD,CAAC,CAAC;IACpG,QAAQ,MAAM,CAAC,SAAS,GAAG,SAAS,CAAC;AACrC;IACA;IACA,QAAQ,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAED,qBAAmB,EAAED,uBAAqB,CAAC,CAAC;IAC3E,QAAQ,MAAM,CAAC,MAAM,CAAC,CAAC,EAAEC,qBAAmB,EAAE,CAAC,CAAC,CAAC;AACjD;IACA,QAAQ,WAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IACnE,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK;AACL;IACA;AACA;IACA,IAAI,OAAO,YAAY,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;IACrD,QAAQ,IAAI,MAAM,CAAC,mBAAmB,EAAE,WAAW,CAAC,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IACnG,QAAQ,IAAI,MAAM,CAAC,oBAAoB,EAAE,WAAW,CAAC,kBAAkB,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IACrG,KAAK;AACL;IACA;IACA,IAAI,OAAO,iBAAiB,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC1D,QAAQ,IAAI,MAAM,CAAC,SAAS,EAAE;IAC9B,YAAY,MAAM,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,CAAC,EAAE,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,IAAI,SAAS,GAAG,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;IACxG,SAAS;AACT;IACA,QAAQ,MAAM,CAAC,MAAM,GAAG,QAAQ,GAAG,SAAS,CAAC;IAC7C,QAAQ,MAAM,CAAC,sBAAsB,EAAE,CAAC;IACxC,KAAK;AACL;IACA;IACA,IAAI,OAAO,kBAAkB,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,EAAE;IAC3D;IACA,QAAQ,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC;IACjC,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC;IACrB,QAAQ,IAAI,MAAM,CAAC,WAAW,EAAE;IAChC,YAAY,IAAI,GAAG,MAAM,CAAC,WAAW,CAAC;IACtC,SAAS,MAAM;IACf,YAAY,GAAG,GAAG,MAAM,CAAC;IACzB,SAAS;AACT;IACA;IACA,QAAQ,IAAI,WAAW,GAAG,GAAG,CAAC;IAC9B,QAAQ,IAAI,YAAY,GAAG,GAAG,CAAC;IAC/B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC;IAC1B,QAAQ,IAAI,GAAG,KAAK,MAAM,EAAE;IAC5B,YAAY,KAAK,GAAG,QAAQ,GAAG,YAAY,GAAG,GAAG,CAAC;IAClD,YAAY,MAAM,GAAG,SAAS,GAAG,YAAY,GAAG,GAAG,CAAC;IACpD,SAAS,MAAM,IAAI,GAAG,KAAK,OAAO,EAAE;IACpC,YAAY,YAAY,GAAG,SAAS,GAAG,QAAQ,CAAC;IAChD,SAAS,MAAM,IAAI,GAAG,KAAK,QAAQ,EAAE;IACrC,YAAY,WAAW,GAAG,QAAQ,GAAG,SAAS,CAAC;IAC/C,SAAS;AACT;IACA;IACA,QAAQ,MAAM,CAAC,IAAI,MAAM,EAAE,KAAK,GAAG,WAAW,GAAG,CAAC,CAAC;IACnD,QAAQ,MAAM,CAAC,KAAK,OAAO,KAAK,GAAG,WAAW,GAAG,CAAC,CAAC;IACnD,QAAQ,MAAM,CAAC,GAAG,SAAS,MAAM,GAAG,YAAY,GAAG,CAAC,CAAC;IACrD,QAAQ,MAAM,CAAC,MAAM,IAAI,EAAE,MAAM,GAAG,YAAY,GAAG,CAAC,CAAC;IACrD,QAAQ,MAAM,CAAC,sBAAsB,EAAE,CAAC;IACxC,KAAK;AACL;IACA;AACA;IACA;IACA,IAAI,OAAO,WAAW,CAAC,YAAY,EAAE,MAAM,EAAE;IAC7C,QAAQ,IAAI,EAAE,MAAM,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE;IAC3C,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,4CAA4C,CAAC,CAAC,CAAC;IACzE,YAAY,OAAO,IAAIC,gBAAK,CAAC,OAAO,EAAE,CAAC;IACvC,SAAS;IACT,QAAQ,OAAO,IAAIA,gBAAK,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACpE,KAAK;AACL;IACA;IACA,IAAI,OAAO,UAAU,CAAC,aAAa,EAAE,MAAM,EAAE,UAAU,GAAG,IAAIA,gBAAK,CAAC,OAAO,EAAE,EAAE,WAAW,GAAG,IAAI,EAAE;IACnG,QAAQ,IAAI,EAAE,MAAM,IAAI,EAAE,MAAM,CAAC,QAAQ,EAAE;IAC3C,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,2CAA2C,CAAC,CAAC,CAAC;IACxE,YAAY,OAAO,IAAIA,gBAAK,CAAC,OAAO,EAAE,CAAC;IACvC,SAAS;AACT;IACA;AACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;AACA;IACA;IACA,QAAQ,MAAM,aAAa,GAAG,IAAIA,gBAAK,CAAC,aAAa,CAAC,SAAS,EAAE,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClF,QAAQ,QAAQ,WAAW,CAAC,WAAW,EAAE;IACzC,YAAY,KAAK,IAAI,EAAE,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;IACjE,YAAY,KAAK,IAAI,EAAE,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;IAEjE,SAAS;IACT,QAAQ,aAAa,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1E;IACA;IACA,QAAQ,MAAM,aAAa,GAAG,IAAIA,gBAAK,CAAC,iBAAiB,CAAC,EAAE,IAAI,EAAEA,gBAAK,CAAC,UAAU,EAAE,CAAC,CAAC;IACtF,QAAQ,MAAM,KAAK,GAAG,IAAIA,gBAAK,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;AACnE;IACA;IACA,QAAQ,UAAU,CAAC,aAAa,CAAC,aAAa,EAAE,MAAM,CAAC,CAAC;IACxD,QAAQ,IAAI,MAAM,CAAC,oBAAoB,EAAE;IACzC,YAAY,UAAU,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,EAAE,aAAa,CAAC,CAAC,EAAE,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACxG,SAAS;IACT,QAAQ,MAAM,eAAe,GAAG,UAAU,CAAC,eAAe,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;AACxE;IACA;IACA,QAAQ,aAAa,CAAC,OAAO,EAAE,CAAC;IAChC,QAAQ,aAAa,CAAC,OAAO,EAAE,CAAC;AAChC;IACA,QAAQ,OAAO,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/E,KAAK;AACL;IACA;AACA;IACA,IAAI,OAAO,mBAAmB,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,GAAG,IAAI,EAAE;AAC9D;IACA,KAAK;AACL;IACA;IACA,IAAI,OAAO,iBAAiB,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,GAAG,IAAI,EAAE,MAAM,GAAG,IAAI,EAAE;IAC7E,QAAQ,MAAM,WAAW,GAAG,IAAIA,gBAAK,CAAC,IAAI,EAAE,CAAC;IAC7C,QAAQ,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IAC1C,QAAQ,MAAM,MAAM,GAAG,WAAW,CAAC,SAAS,CAAC,IAAIA,gBAAK,CAAC,OAAO,EAAE,CAAC,CAAC;IAClE,QAAQ,MAAM,IAAI,GAAG,WAAW,CAAC,OAAO,CAAC,IAAIA,gBAAK,CAAC,OAAO,EAAE,CAAC,CAAC;AAC9D;IACA;IACA,QAAQ,MAAM,gBAAgB,GAAG,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IACxF,QAAQ,MAAM,iBAAiB,GAAG,IAAI,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;IACrH,QAAQ,MAAM,gBAAgB,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,MAAM,CAAC;IAC1G,QAAQ,MAAM,QAAQ,GAAG,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;AAChF;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;AACA;IACA,QAAQ,MAAM,CAAC,IAAI,GAAG,QAAQ,GAAG,GAAG,CAAC;IACrC,QAAQ,MAAM,CAAC,GAAG,GAAG,QAAQ,GAAG,GAAG,CAAC;IACpC,QAAQ,MAAM,CAAC,sBAAsB,EAAE,CAAC;AACxC;IACA,QAAQ,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrC;IACA,QAAQ,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,QAAQ,CAAC;IACtC,QAAQ,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAC9B;IACA,QAAQ,IAAI,QAAQ,EAAE;IACtB,YAAY,QAAQ,CAAC,WAAW,GAAG,QAAQ,GAAG,EAAE,CAAC;IACjD,YAAY,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACzC,YAAY,QAAQ,CAAC,MAAM,EAAE,CAAC;IAC9B,SAAS;IACT,KAAK;AACL;IACA;;IC3PA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,MAAM,KAAK,CAAC;AACZ;IACA;AACA;IACA,IAAI,OAAO,gBAAgB,CAAC,OAAO,EAAE;IACrC,QAAQ,OAAO,OAAO,IAAI,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;IACzC,KAAK;AACL;IACA,IAAI,OAAO,gBAAgB,CAAC,OAAO,EAAE;IACrC,QAAQ,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,GAAG,IAAI,OAAO,CAAC;IACzC,KAAK;AACL;IACA;AACA;IACA;IACA,IAAI,OAAO,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG,KAAK,EAAE;IAC/C,QAAQ,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE;IAChE,KAAK;AACL;IACA,IAAI,OAAO,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG,KAAK,EAAE;IAChD,QAAQ,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;IAC1E,QAAQ,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;IAC1E,QAAQ,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;IAC1E,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,OAAO,eAAe,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG,KAAK,EAAE;IACpD,QAAQ,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;IACvE,QAAQ,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,SAAS,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;IAC1E,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;AACA;IACA;IACA,IAAI,OAAO,KAAK,CAAC,MAAM,EAAE,GAAG,EAAE,GAAG,EAAE;IACnC,QAAQ,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC;IAChC,QAAQ,IAAI,MAAM,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;IACvC,QAAQ,IAAI,MAAM,GAAG,GAAG,EAAE,MAAM,GAAG,GAAG,CAAC;IACvC,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK;AACL;IACA;IACA,IAAI,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE;IAClC,KAAK,OAAO,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC;IAC1D,KAAK;AACL;IACA;IACA,IAAI,OAAO,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACzB,KAAK,OAAO,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAChC,KAAK;AACL;IACA;IACA,IAAI,OAAO,OAAO,CAAC,MAAM,EAAE,aAAa,GAAG,CAAC,EAAE;IAC9C,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,aAAa,CAAC,CAAC;IAClD,QAAQ,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,GAAG,KAAK,CAAC;IAClD,KAAK;AACL;IACA;AACA;IACA;IACA,IAAI,OAAO,YAAY,CAAC,KAAK,EAAE;IAC/B,QAAQ,OAAO,CAAC,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,MAAM,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC;IAC1D,KAAK;AACL;IACA;AACA;IACA;IACA,IAAI,OAAO,SAAS,CAAC,MAAM,EAAE;IAC7B,QAAQ,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;IAC3E,KAAK;AACL;IACA;IACA,IAAI,OAAO,aAAa,CAAC,MAAM,EAAE;IACjC,QAAQ,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,KAAK,MAAM,CAAC,OAAO,EAAE,EAAE,OAAO,CAAC,CAAC;IACxE,QAAQ,OAAO,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,CAAC,CAAC;IAC3D,KAAK;AACL;IACA;IACA,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE;IAC5B,QAAQ,QAAQ,OAAO,MAAM,KAAK,QAAQ,IAAI,EAAE,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;IACjG,KAAK;AACL;IACA;AACA;IACA;IACA,IAAI,OAAO,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACzD;IACA,QAAQ,IAAI,KAAK,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACtE,QAAQ,IAAI,KAAK,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,EAAE,SAAS,CAAC,EAAE,OAAO,KAAK,CAAC;IAChE,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC;IAC7E,QAAQ,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC;AAC7E;IACA,QAAQ,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,EAAE;IAC9D;IACA;IACA;IACA,YAAY,OAAO,IAAI,CAAC;IACxB,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;AACL;IACA;IACA,IAAI,OAAO,iBAAiB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE;IACrE,QAAQ,MAAM,QAAQ,MAAM,KAAK,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;IACvF,QAAQ,MAAM,SAAS,KAAK,KAAK,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACzF,QAAQ,MAAM,OAAO,OAAO,KAAK,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IACvF,QAAQ,MAAM,QAAQ,MAAM,KAAK,CAAC,aAAa,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACzF,QAAQ,QAAQ,QAAQ,IAAI,SAAS,IAAI,OAAO,IAAI,QAAQ,EAAE;IAC9D,KAAK;AACL;IACA;AACA;IACA;IACA,IAAI,OAAO,WAAW,CAAC,GAAG,EAAE,GAAG,EAAE;IACjC,KAAK,OAAO,GAAG,GAAG,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC;IAC9C,KAAK;AACL;IACA;IACA,IAAI,OAAO,SAAS,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE;IACvC,QAAQ,OAAO,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IAC7D,KAAK;AACL;IACA;;ICrKA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,MAAM,MAAM,CAAC;AACb;IACA;IACA;IACA;AACA;IACA;IACA,IAAI,OAAO,kBAAkB,GAAG;IAChC,QAAQ,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE;IACnE,YAAY,OAAO,SAAS,CAAC,CAAC,CAAC,CAAC;IAChC,SAAS,MAAM;IACf,MAAM,OAAO,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACnC,SAAS;IACT,KAAK;AACL;IACA;IACA,IAAI,OAAO,UAAU,CAAC,GAAG,EAAE;IAC3B,QAAQ,IAAI,GAAG,IAAI,IAAI,EAAE,OAAO,KAAK,CAAC;IACtC,QAAQ,OAAO,OAAO,GAAG,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,UAAU,CAAC;IAC1D,KAAK;AACL;IACA;IACA,IAAI,OAAO,QAAQ,CAAC,QAAQ,EAAE;IAC9B,QAAQ,QAAQ,OAAO,QAAQ,KAAK,QAAQ,IAAI,EAAE,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,KAAK,IAAI,EAAE;IAChG,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,OAAO,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE;IAC/B,QAAQ,IAAI;IACZ,YAAY,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;IACrD,YAAY,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAC5C,YAAY,IAAI,CAAC,IAAI,GAAG,GAAG,CAAC;IAC5B,YAAY,IAAI,CAAC,QAAQ,GAAG,QAAQ,IAAI,WAAW,CAAC;IACpD,YAAY,IAAI,CAAC,KAAK,EAAE,CAAC;IACzB,YAAY,UAAU,CAAC,WAAW;IAClC,gBAAgB,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;IAChD,gBAAgB,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;IAChD,aAAa,EAAE,CAAC,CAAC,CAAC;IAClB,SAAS,CAAC,OAAO,CAAC,EAAE;IACpB,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5B,YAAY,OAAO;IACnB,SAAS;IACT,KAAK;AACL;IACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE,QAAQ,EAAE,YAAY,GAAG,EAAE,IAAI,EAAE,0BAA0B,EAAE,EAAE;IAC7F,QAAQ,IAAI,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;IACpF,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACnC,KAAK;AACL;IACA,IAAI,OAAO,SAAS,CAAC,QAAQ,EAAE,QAAQ,EAAE;IACzC,QAAQ,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IACxC,KAAK;AACL;IACA,IAAI,OAAO,UAAU,CAAC,IAAI,EAAE,QAAQ,EAAE;IACtC,QAAQ,IAAI,GAAG,GAAG,GAAG,CAAC,eAAe,CAAC,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC,CAAC,CAAC;IAClF,QAAQ,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;IACnC,KAAK;AACL;IACA;IACA;IACA;AACA;IACA;IACA,IAAI,OAAO,QAAQ,GAAG;IACtB,QAAQ,IAAI,OAAO,GAAG;IACtB,YAAY,OAAO,KAAK,EAAE,SAAS,EAAE;IACrC,YAAY,GAAG,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;IAC3D,YAAY,KAAK,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,SAAS,EAAE;IACrD,YAAY,GAAG,SAAS,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE;IAC1D,YAAY,GAAG,SAAS,EAAE,KAAK,EAAE;IACjC,UAAS;AACT;IACA,QAAQ,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC;IACnD,QAAQ,IAAI,aAAa,GAAG,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC;AAC3D;IACA,QAAQ,IAAI,QAAQ,GAAG,CAAC,aAAa,IAAI,aAAa,CAAC,QAAQ,GAAG,SAAS,CAAC;IAC5E,QAAQ,QAAQ,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;AAC1C;IACA,QAAQ,KAAK,IAAI,GAAG,IAAI,OAAO,EAAE;IACjC,YAAY,KAAK,IAAI,EAAE,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;IACzC,gBAAgB,IAAI,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,OAAO,GAAG,CAAC;IAC5D,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,YAAY,CAAC;IAC5B,KAAK;AACL;IACA;IACA,IAAI,OAAO,UAAU,CAAC,OAAO,EAAE;IAC/B,QAAQ,IAAI,YAAY;IACxB,YAAY,QAAQ,CAAC,iBAAiB;IACtC,YAAY,QAAQ,CAAC,oBAAoB;IACzC,YAAY,QAAQ,CAAC,uBAAuB;IAC5C,YAAY,QAAQ,CAAC,mBAAmB,CAAC;AACzC;IACA,QAAQ,IAAI,YAAY,EAAE;IAC1B,YAAY,IAAI,EAAE,GAAG,QAAQ,CAAC;IAC9B,YAAY,IAAI,YAAY,GAAG,EAAE,CAAC,gBAAgB,IAAI,EAAE,CAAC,cAAc,IAAI,EAAE,CAAC,sBAAsB,IAAI,EAAE,CAAC,oBAAoB,IAAI,EAAE,CAAC,mBAAmB,CAAC;IAC1J,YAAY,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IAClC,SAAS,MAAM;IACf,YAAY,IAAI,EAAE,GAAG,OAAO,IAAI,QAAQ,CAAC,IAAI,CAAC;IAC9C,YAAY,IAAI,aAAa,GAAG,EAAE,CAAC,iBAAiB,IAAI,EAAE,CAAC,uBAAuB,IAAI,EAAE,CAAC,oBAAoB,IAAI,EAAE,CAAC,mBAAmB,CAAC;IACxI,YAAY,aAAa,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;IACnC,SAAS;IACT,KAAK;AACL;IACA;IACA,IAAI,OAAO,SAAS,GAAG;IACvB,QAAQ,IAAI,MAAM,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;IACvC,QAAQ,IAAI,MAAM,KAAK,KAAK,EAAE;IAC9B,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS,MAAM;IACf,YAAY,OAAO,GAAG,CAAC;IACvB,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;AACA;IACA;IACA,IAAI,OAAO,KAAK,CAAC,EAAE,EAAE;IAMrB,KAAK;AACL;IACA;IACA,IAAI,OAAO,aAAa,CAAC,aAAa,EAAE,MAAM,EAAE,QAAQ,EAAE,gBAAgB,GAAG,IAAI,EAAE,SAAS,GAAG,KAAK,EAAE,OAAO,GAAG,IAAI,EAAE;IACtH,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACrC,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACrC,QAAQ,CAAC,SAAS,UAAU,GAAG;IAC/B,YAAY,IAAI,OAAO,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,WAAW,GAAG,OAAO,EAAE;IAC/D,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,4BAA4B,EAAE,aAAa,CAAC,CAAC,CAAC,CAAC;IAC7E,gBAAgB,WAAW,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACzC,aAAa;AACb;IACA,YAAY,IAAI,MAAM,EAAE,KAAK,SAAS,IAAI,MAAM,EAAE,KAAK,IAAI,EAAE;IAC7D,gBAAgB,QAAQ,EAAE,CAAC;IAC3B,gBAAgB,OAAO;IACvB,aAAa,MAAM;IACnB,gBAAgB,UAAU,CAAC,WAAW;IACtC,oBAAoB,IAAI,SAAS,IAAI,IAAI,CAAC,GAAG,EAAE,GAAG,WAAW,GAAG,SAAS,EAAE,OAAO;IAClF,oBAAoB,UAAU,EAAE,CAAC;IACjC,iBAAiB,EAAE,gBAAgB,CAAC,CAAC;IACrC,aAAa;IACb,SAAS,GAAG,CAAC;IACb,KAAK;AACL;IACA;;ICrMA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAwBA;IACA;AACA;IACA,MAAM,UAAU,GAAG,IAAIA,gBAAK,CAAC,IAAI,EAAE,CAAC;IACpC,MAAM,WAAW,GAAG,IAAIA,gBAAK,CAAC,OAAO,EAAE,CAAC;IACxC,MAAM,WAAW,GAAG,IAAIA,gBAAK,CAAC,OAAO,EAAE,CAAC;IACxC,MAAM,gBAAgB,GAAG,IAAIA,gBAAK,CAAC,UAAU,EAAE,CAAC;IAChD,MAAM,eAAe,GAAG,IAAIA,gBAAK,CAAC,UAAU,EAAE,CAAC;IAC/C,MAAM,eAAe,GAAG,IAAIA,gBAAK,CAAC,UAAU,EAAE,CAAC;AAC/C;IACA,MAAMC,cAAY,GAAG,IAAID,gBAAK,CAAC,OAAO,EAAE,CAAC;IACzC,MAAME,gBAAc,GAAG,IAAIF,gBAAK,CAAC,UAAU,EAAE,CAAC;IACzB,IAAIA,gBAAK,CAAC,KAAK,GAAG;IACvC,MAAMG,WAAS,GAAG,IAAIH,gBAAK,CAAC,OAAO,EAAE,CAAC;AACtC;IACA;AACA;IACA,MAAM,WAAW,CAAC;AAClB;IACA;IACA,IAAI,OAAO,cAAc,CAAC,MAAM,EAAE;IAClC,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC;IAC/B,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE;IAC7B,YAAY,IAAI,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,WAAW,GAAG,KAAK,CAAC;IAChE,YAAY,IAAI,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,WAAW,GAAG,KAAK,CAAC;IAC9D,SAAS;IACT,QAAQ,OAAO,WAAW,CAAC;IAC3B,KAAK;AACL;IACA;IACA,IAAI,OAAO,eAAe,CAAC,KAAK,EAAE;IAClC,QAAQ,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE,OAAO,IAAI,CAAC;IAC3C,QAAQ,KAAK,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;IACtD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC/C,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,eAAe,CAAC,CAAC;IACzD,YAAY,IAAI,KAAK,CAAC,eAAe,CAAC,gBAAgB,EAAE,eAAe,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;IACjG,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;IACA,IAAI,OAAO,WAAW,CAAC,MAAM,EAAE,gBAAgB,GAAG,IAAI,EAAE;IACxD,QAAQ,IAAI,EAAE,MAAM,EAAE,OAAO;IAC7B,QAAQ,OAAO,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;IAC3C,YAAY,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC9D,SAAS;IACT,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IACvD,QAAQ,IAAI,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,aAAa,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxE,QAAQ,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC3C,QAAQ,IAAI,gBAAgB,EAAE,MAAM,CAAC,gBAAgB,EAAE,CAAC;IACxD,KAAK;AACL;IACA;IACA,IAAI,OAAO,aAAa,CAAC,SAAS,EAAE;IACpC,QAAQ,IAAI,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,SAAS,GAAG,EAAE,SAAS,EAAE,CAAC;IAC7E,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;IAC5D,YAAY,IAAI,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;IACxC,YAAY,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,IAAI,IAAI;IAClD,gBAAgB,IAAI,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,OAAO;IAC7C,gBAAgB,IAAI,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,UAAU,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;IAC3F,aAAa,CAAC,CAAC;IACf,YAAY,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC/B,SAAS;IACT,KAAK;AACL;IACA;IACA,IAAI,OAAO,aAAa,CAAC,YAAY,EAAE,SAAS,EAAE,qBAAqB,GAAG,KAAK,EAAE;IACjF,QAAQ,IAAI,SAAS,KAAK,SAAS,IAAI,SAAS,CAAC,MAAM,KAAK,IAAI,EAAE,SAAS,GAAG,IAAIA,gBAAK,CAAC,IAAI,EAAE,CAAC;IAC/F,QAAQ,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,YAAY,GAAG,EAAE,YAAY,EAAE,CAAC;IAC5F,QAAQ,SAAS,CAAC,SAAS,EAAE,CAAC;AAC9B;IACA;IACA,QAAQ,IAAI,qBAAqB,IAAI,WAAW,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE;IACpF,YAAY,IAAI,UAAU,GAAG,SAAS,CAAC;IACvC,YAAY,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,EAAE,UAAU,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AACtH;IACA;IACA,YAAY,IAAI,UAAU,IAAI,UAAU,CAAC,QAAQ,EAAE;IACnD,gBAAgB,UAAU,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;IACzD,gBAAgB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;IAChE,gBAAgB,UAAU,CAAC,WAAW,CAAC,SAAS,CAACC,cAAY,EAAEC,gBAAc,EAAEC,WAAS,CAAC,CAAC;IAC1F,gBAAgBD,gBAAc,CAAC,QAAQ,EAAE,CAAC;IAC1C,gBAAgB,WAAW,CAAC,OAAO,CAACD,cAAY,EAAEC,gBAAc,EAAEC,WAAS,CAAC,CAAC;IAC7E,gBAAgB,SAAS,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC;IACpD,gBAAgB,OAAO,SAAS,CAAC;IACjC,aAAa;IACb,SAAS;AACT;IACA;IACA,QAAQ,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC;IACpE,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA;IACA,IAAI,OAAO,aAAa,CAAC,YAAY,EAAE,UAAU,EAAE;IACnD,QAAQ,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,YAAY,GAAG,EAAE,YAAY,EAAE,CAAC;AAC5F;IACA;IACA,QAAQ,WAAW,CAAC,aAAa,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;AACvD;IACA;IACA,QAAQ,IAAI,UAAU,CAAC,OAAO,EAAE,EAAE;IAClC,YAAY,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;IACxC,gBAAgB,MAAM,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC;IACrD,gBAAgB,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IACtD,aAAa;IACb,SAAS;AACT;IACA,QAAQ,UAAU,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;IACzC,QAAQ,OAAO,UAAU,CAAC;IAC1B,KAAK;AACL;IACA;IACA,IAAI,OAAO,cAAc,CAAC,cAAc,EAAE,MAAM,EAAE;IAClD,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,MAAM,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE;IACxE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC5D,gBAAgB,IAAI,cAAc,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC;IACxE,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;AACL;IACA;IACA,IAAI,OAAO,kBAAkB,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,GAAG,IAAI,EAAE;IACnE,QAAQ,MAAM,CAAC,YAAY,EAAE,CAAC;IAC9B,QAAQ,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,eAAe,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;IAChF,QAAQ,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,eAAe,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IAC7E,QAAQ,IAAI,YAAY,EAAE,MAAM,CAAC,YAAY,EAAE,CAAC;IAChD,KAAK;AACL;IACA;IACA,IAAI,OAAO,kBAAkB,CAAC,MAAM,EAAE,MAAM,EAAE,YAAY,GAAG,IAAI,EAAE;IACnE,QAAQ,MAAM,CAAC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAC7C,QAAQ,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,CAAC,QAAQ,EAAE,eAAe,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;IACrF,QAAQ,MAAM,CAAC,QAAQ,CAAC,iBAAiB,CAAC,eAAe,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC;IAC7E,QAAQ,IAAI,YAAY,EAAE,MAAM,CAAC,YAAY,EAAE,CAAC;IAChD,KAAK;AACL;IACA;IACA,IAAI,OAAO,aAAa,CAAC,YAAY,EAAE;IACvC,QAAQ,MAAM,OAAO,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,YAAY,GAAG,EAAE,YAAY,EAAE,CAAC;IAC5F,QAAQ,IAAI,aAAa,GAAG,CAAC,CAAC;IAC9B,QAAQ,OAAO,CAAC,OAAO,CAAC,CAAC,MAAM,KAAK;IACpC,YAAY,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,KAAK,EAAE,IAAI,KAAK,CAAC,QAAQ,EAAE,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC;IACjF,SAAS,CAAC,CAAC;IACX,QAAQ,OAAO,aAAa,CAAC;IAC7B,KAAK;AACL;IACA;IACA,IAAI,OAAO,YAAY,CAAC,KAAK,EAAE;IAC/B,QAAQ,IAAI,EAAE,KAAK,EAAE,OAAO;IAC5B,QAAQ,IAAI,EAAE,KAAK,CAAC,MAAM,EAAE,OAAO;IACnC,QAAQ,OAAO,KAAK,CAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACtE,QAAQ,WAAW,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IAC7C,KAAK;AACL;IACA;IACA,IAAI,OAAO,cAAc,CAAC,MAAM,EAAE;IAClC,QAAQ,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,QAAQ,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,QAAQ,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAClC,KAAK;AACL;IACA;IACA,IAAI,OAAO,iBAAiB,CAAC,MAAM,EAAE;IACrC,QAAQ,MAAM,eAAe,GAAG,EAAE,CAAC;IACnC,QAAQ,MAAM,CAAC,QAAQ,CAAC,CAAC,KAAK,KAAK;IACnC,YAAY,IAAI,KAAK,CAAC,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,QAAQ,EAAE;IAC3D,gBAAgB,eAAe,CAAC,IAAI,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAC9E,aAAa;IACb,SAAS,CAAC,CAAC;IACX,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACzD,YAAY,eAAe,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,EAAE,CAAC;IACzD,SAAS;IACT,QAAQ,OAAO,eAAe,CAAC;IAC/B,KAAK;AACL;IACA;IACA,IAAI,OAAO,iBAAiB,CAAC,eAAe,EAAE;IAC9C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACzD,YAAY,IAAI,UAAU,GAAG,eAAe,CAAC,CAAC,CAAC,CAAC;IAChD,YAAY,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;IACxD,SAAS;IACT,KAAK;AACL;IACA;;ICzNA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,MAAM,OAAO,CAAC;AACd;IACA;IACA,IAAI,OAAO,SAAS,CAAC,MAAM,EAAE;IAC7B,QAAQ,OAAO,MAAM,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;IAChE,KAAK;AACL;IACA;IACA,IAAI,OAAO,UAAU,CAAC,MAAM,EAAE;IAC9B,QAAQ,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IAChD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC/C,YAAY,KAAK,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;IACzE,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IAC/B,KAAK;AACL;IACA;IACA,IAAI,OAAO,WAAW,CAAC,MAAM,EAAE;IAC/B,QAAQ,OAAO,UAAU,CAAC,MAAM,CAAC,CAAC,QAAQ,EAAE,CAAC,MAAM,CAAC;IACpD,KAAK;AACL;IACA;IACA,IAAI,OAAO,WAAW,CAAC,GAAG,EAAE,UAAU,GAAG,IAAI,EAAE;IAC/C,QAAQ,IAAI,SAAS,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC,CAAC;IACjE,QAAQ,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,EAAE,EAAE,CAAC,CAAC;IACvD,QAAQ,IAAI,UAAU,EAAE,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;IAClE,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA;;IC/CA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AASA;IACA;IACA;IACA;AACA;IACA;IACA,IAAI,OAAO,GAAG,EAAE,CAAC;AACjB;IACA;IACA,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,UAAU,GAAG,EAAE,CAAC;AACpB;IACA;IACA,IAAI,MAAM,GAAG,EAAE,CAAC;IAChB,IAAI,QAAQ,GAAG,EAAE,CAAC;IAClB,IAAI,SAAS,GAAG,EAAE,CAAC;AACnB;IACA;IACA,IAAI,UAAU,GAAG,EAAE,CAAC;IACpB,IAAI,SAAS,GAAG,EAAE,CAAC;AACnB;IACA;IACA;IACA;AACA;IACA,MAAM,aAAa,GAAG,EAAE,CAAC;IACzB,MAAM,cAAc,GAAG,IAAIH,gBAAK,CAAC,aAAa,EAAE,CAAC;AACjD;IACA,MAAM,YAAY,CAAC;AACnB;IACA,IAAI,OAAO,UAAU,CAAC,IAAI,EAAE;IAC5B,QAAQ,QAAQ,IAAI;IACpB,YAAY,KAAK,SAAS,EAAE,OAAO,OAAO,CAAC;IAC3C,YAAY,KAAK,QAAQ,EAAE,OAAO,MAAM,CAAC;IACzC,YAAY,KAAK,YAAY,EAAE,OAAO,UAAU,CAAC;IACjD,YAAY,KAAK,QAAQ,EAAE,OAAO,MAAM,CAAC;IACzC,YAAY,KAAK,UAAU,EAAE,OAAO,QAAQ,CAAC;IAC7C,YAAY,KAAK,WAAW,EAAE,OAAO,SAAS,CAAC;IAC/C,YAAY,KAAK,YAAY,EAAE,OAAO,UAAU,CAAC;IACjD,YAAY,KAAK,WAAW,EAAE,OAAO,SAAS,CAAC;IAC/C,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;AACA;IACA,IAAI,OAAO,WAAW,CAAC,QAAQ,EAAE;IACjC,EAAE,IAAI,QAAQ,IAAI,QAAQ,CAAC,gBAAgB,EAAE;IAC7C;IACA,YAAY,IAAI,EAAE,QAAQ,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,KAAK,EAAE,EAAE;IACzD,gBAAgB,QAAQ,CAAC,IAAI,GAAG,QAAQ,CAAC,WAAW,CAAC,IAAI,CAAC;IAC1D,aAAa;AACb;IACA;IACA,YAAY,MAAM,cAAc,GAAGI,4CAAqB,CAAC,EAAE,QAAQ,EAAE,CAAC,CAAC;IACvE,YAAY,cAAc,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAChD,YAAY,cAAc,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC;IAChD,YAAY,QAAQ,CAAC,OAAO,EAAE,CAAC;IAC/B,YAAY,QAAQ,GAAG,cAAc,CAAC;AACtC;IACA;IACA,YAAY,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC;IACjD,SAAS;IACT,EAAE,OAAO,QAAQ,CAAC;IAClB,EAAE;AACF;IACA,CAAC,OAAO,WAAW,CAAC,IAAI,EAAE;IAC1B,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,gBAAgB,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC5D,EAAE,OAAO,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,EAAE;AACF;IACA,CAAC,OAAO,cAAc,CAAC,QAAQ,EAAE,OAAO,GAAG,IAAI,EAAE;IACjD,EAAE,IAAI,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;IACjC,GAAG,IAAI,OAAO,EAAE,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;IACpD,GAAG,OAAO,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACpC,GAAG;IACH,EAAE;AACF;IACA;AACA;IACA,CAAC,OAAO,WAAW,CAAC,QAAQ,EAAE;IAC9B,EAAE,IAAI,QAAQ,IAAI,QAAQ,CAAC,UAAU,EAAE;IACvC,MAAM,IAAI,aAAa,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,QAAQ,GAAG,EAAE,QAAQ,EAAE,CAAC;IAC9E,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC3D,gBAAgB,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;IAC5D,aAAa;IACb,SAAS;IACT,EAAE,OAAO,QAAQ,CAAC;IAClB,EAAE;AACF;IACA,CAAC,OAAO,WAAW,CAAC,IAAI,EAAE;IAC1B,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACtD,EAAE,OAAO,SAAS,CAAC,IAAI,CAAC,CAAC;IACzB,EAAE;AACF;IACA,CAAC,OAAO,cAAc,CAAC,QAAQ,EAAE,OAAO,GAAG,IAAI,EAAE;IACjD,EAAE,IAAI,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;IAChC,GAAG,IAAI,OAAO,EAAE,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;IACnD,GAAG,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;IACnC,GAAG;IACH,EAAE;AACF;IACA;AACA;IACA,IAAI,OAAO,WAAW,CAAC,GAAG,EAAE,MAAM,GAAG,SAAS,EAAE;IAChD,QAAQ,IAAI,EAAE,GAAG,IAAI,GAAG,KAAK,EAAE,EAAE,OAAO,IAAI,CAAC;AAC7C;IACA;IACA,QAAQ,IAAI,WAAW,GAAGJ,gBAAK,CAAC,qBAAqB,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACtE,QAAQ,IAAI,aAAa,CAAC,WAAW,CAAC,EAAE;IACxC,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC;IACtE,YAAY,OAAO,aAAa,CAAC,WAAW,CAAC,CAAC;IAC9C,SAAS;AACT;IACA;IACA,EAAE,MAAM,OAAO,GAAG,cAAc,CAAC,IAAI,CAAC,GAAG,EAAE,eAAe,EAAE,kBAAkB,CAAC,CAAC;IAChF,QAAQ,aAAa,CAAC,WAAW,CAAC,GAAG,OAAO,CAAC;AAC7C;IACA,QAAQ,SAAS,eAAe,CAAC,UAAU,EAAE;IAC7C;IACA,YAAY,UAAU,CAAC,IAAI,GAAG,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;IACA;IACA,YAAY,UAAU,CAAC,gBAAgB,GAAG,IAAI,CAAC;IAC/C,YAAY,UAAU,CAAC,KAAK,GAAGA,gBAAK,CAAC,cAAc,CAAC;IACpD,YAAY,UAAU,CAAC,KAAK,GAAGA,gBAAK,CAAC,cAAc,CAAC;AACpD;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA,YAAY,IAAI,MAAM,IAAI,OAAO,MAAM,KAAK,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;IAC3E,SAAS;AACT;IACA,QAAQ,SAAS,kBAAkB,GAAG;IACtC,YAAY,IAAI,aAAa,CAAC,WAAW,CAAC,IAAI,aAAa,CAAC,WAAW,CAAC,CAAC,SAAS,EAAE;IACpF,gBAAgB,aAAa,CAAC,WAAW,CAAC,CAAC,OAAO,EAAE,CAAC;IACrD,aAAa;IACb,YAAY,OAAO,aAAa,CAAC,WAAW,CAAC,CAAC;IAC9C,SAAS;AACT;IACA,EAAE,OAAO,OAAO,CAAC;IACjB,KAAK;AACL;IACA,CAAC,OAAO,UAAU,CAAC,OAAO,EAAE;IAC5B,QAAQ,IAAI,OAAO,IAAI,OAAO,CAAC,SAAS,EAAE;IAC1C,YAAY,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC;IAC7C,SAAS;IACT,EAAE,OAAO,OAAO,CAAC;IACjB,EAAE;AACF;IACA,CAAC,OAAO,UAAU,CAAC,IAAI,EAAE;IACzB,QAAQ,IAAI,IAAI,IAAI,IAAI,CAAC,SAAS,EAAE,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IACrD,EAAE,OAAO,QAAQ,CAAC,IAAI,CAAC,CAAC;IACxB,EAAE;AACF;IACA,CAAC,OAAO,aAAa,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI,EAAE;IAC/C,EAAE,IAAI,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;IAC9B,YAAY,KAAK,IAAI,GAAG,IAAI,aAAa,EAAE;IAC3C,gBAAgB,IAAI,aAAa,CAAC,GAAG,CAAC,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,SAAS,IAAI,aAAa,CAAC,GAAG,CAAC,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAE;IACpH,oBAAoB,OAAO,aAAa,CAAC,GAAG,CAAC,CAAC;IAC9C,iBAAiB;IACjB,aAAa;IACb,GAAG,IAAI,OAAO,EAAE,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;IACjD,GAAG,OAAO,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;IACjC,GAAG;IACH,EAAE;AACF;IACA;AACA;IACA,IAAI,OAAO,KAAK,GAAG;AACnB;IACA,QAAQ,SAAS,YAAY,CAAC,OAAO,EAAE;IACvC,YAAY,KAAK,IAAI,IAAI,IAAI,OAAO,EAAE;IACtC,gBAAgB,MAAM,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;IAC9C,gBAAgB,IAAI,OAAO,IAAI,OAAO,CAAC,OAAO,IAAI,OAAO,OAAO,CAAC,OAAO,KAAK,UAAU,EAAE,OAAO,CAAC,OAAO,EAAE,CAAC;IAC3G,gBAAgB,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC;IACrC,aAAa;IACb,SAAS;AACT;IACA,QAAQ,YAAY,CAAC,SAAS,CAAC,CAAC;IAChC,QAAQ,YAAY,CAAC,QAAQ,CAAC,CAAC;IAC/B,QAAQ,YAAY,CAAC,MAAM,CAAC,CAAC;IAC7B,QAAQ,YAAY,CAAC,UAAU,CAAC,CAAC;IACjC,QAAQ,YAAY,CAAC,MAAM,CAAC,CAAC;IAC7B,QAAQ,YAAY,CAAC,UAAU,CAAC,CAAC;AACjC;IACA,KAAK;AACL;IACA,IAAI,OAAO,QAAQ,CAAC,IAAI,EAAE;AAC1B;IACA;IACA,QAAQ,YAAY,CAAC,KAAK,GAAE;AAC5B;IACA;IACA,EAAE,MAAM,YAAY,GAAG,IAAIA,gBAAK,CAAC,YAAY,EAAE,CAAC;IAChD,EAAE,UAAU,GAAG,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC7D,EAAE,MAAM,GAAG,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjD,EAAE,UAAU,GAAG,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IACrE,EAAE,MAAM,GAAG,YAAY,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjD,EAAE,QAAQ,GAAG,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;IAC/D,EAAE,SAAS,GAAG,YAAY,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;AACpE;IACA,KAAK;AACL;IACA,IAAI,OAAO,MAAM,CAAC,IAAI,EAAE;AACxB;IACA,QAAQ,MAAM,IAAI,GAAG,EAAE,CAAC;AACxB;IACA,QAAQ,IAAI,EAAE,IAAI,EAAE,IAAI,GAAG,EAAE,CAAC;IAC9B,QAAQ,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAC5C,QAAQ,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACpD,QAAQ,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IAC5C,QAAQ,IAAI,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IAChD,QAAQ,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;IAClD,QAAQ,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;IACpD,QAAQ,IAAI,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAClD;IACA,QAAQ,MAAM,QAAQ,GAAG;IACzB,YAAY,MAAM,EAAE,EAAE;IACtB,YAAY,QAAQ,EAAE,EAAE;IACxB,YAAY,SAAS,EAAE,EAAE;IACzB,SAAS,CAAC;AACV;IACA;IACA,QAAQ,KAAK,IAAI,IAAI,IAAI,UAAU,EAAE;IACrC,YAAY,MAAM,QAAQ,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC;IAC9C,YAAY,IAAI,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACzG;IACA;IACA,YAAY,IAAI,QAAQ,CAAC,UAAU,IAAI,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE;IACnE,gBAAgB,IAAI,MAAM,GAAG,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC;IACxD,gBAAgB,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,IAAI,EAAE,MAAM,GAAG,EAAE,MAAM,EAAE,CAAC;IACxE,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC/D,oBAAoB,MAAM,KAAK,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5C,oBAAoB,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAChG,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA;IACA,QAAQ,KAAK,IAAI,IAAI,IAAI,SAAS,EAAE;IACpC,YAAY,MAAM,QAAQ,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IAC7C,YAAY,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC3G,SAAS;AACT;IACA;IACA,QAAQ,KAAK,IAAI,IAAI,IAAI,QAAQ,EAAE;IACnC,YAAY,MAAM,OAAO,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC;IAC3C,YAAY,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAClG,SAAS;AACT;IACA;IACA,QAAQ,KAAK,MAAM,OAAO,IAAI,IAAI,EAAE;IACpC,YAAY,MAAM,UAAU,GAAG,EAAE,CAAC;IAClC,YAAY,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,EAAE;IAC7C,gBAAgB,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC;IAChD,gBAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC;IACrC,gBAAgB,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtC,aAAa;IACb,YAAY,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,UAAU,CAAC;IAClE,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;;IC5SA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAOA;IACA;IACA;IACA;AACA;IACA,MAAM,WAAW,GAAG,EAAE,CAAC;AACvB;IACA,MAAM,gBAAgB,CAAC;AACvB;IACA;IACA,IAAI,OAAO,UAAU,CAAC,IAAI,GAAG,EAAE,EAAE;IACjC,QAAQ,MAAM,cAAc,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;IACjD,QAAQ,IAAI,EAAE,cAAc,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,wCAAwC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC/G,QAAQ,OAAO,cAAc,CAAC;IAC9B,KAAK;AACL;IACA;IACA,IAAI,OAAO,eAAe,GAAG;IAC7B,QAAQ,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,KAAK;AACL;IACA;IACA,IAAI,OAAO,QAAQ,CAAC,IAAI,GAAG,EAAE,EAAE,cAAc,EAAE;AAC/C;IACA;IACA,QAAQ,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAClC,QAAQ,IAAI,WAAW,CAAC,IAAI,CAAC,EAAE,OAAO,OAAO,CAAC,IAAI,CAAC,CAAC,sCAAsC,EAAE,IAAI,CAAC,oBAAoB,CAAC,CAAC,CAAC;IACxH,QAAQ,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE,cAAc,CAAC,MAAM,GAAG,EAAE,CAAC;IACjF,QAAQ,IAAI,EAAE,MAAM,CAAC,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,cAAc,CAAC,MAAM,CAAC,MAAM,GAAG,EAAE,CAAC;AAC/F;IACA;IACA,QAAQ,MAAM,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC;IACpD,QAAQ,KAAK,MAAM,GAAG,IAAI,MAAM,EAAE;IAClC,YAAY,MAAM,IAAI,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;IACpF,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACzD,gBAAgB,IAAI,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;IACvC,gBAAgB,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE;IACjD,oBAAoB,OAAO,CAAC,IAAI,CAAC,CAAC,yEAAyE,CAAC,CAAC,CAAC;IAC9G,iBAAiB,MAAM,IAAI,QAAQ,CAAC,IAAI,KAAK,SAAS,EAAE,CAIvC,MAAM,IAAI,QAAQ,CAAC,OAAO,KAAK,SAAS,EAAE;IAC3D,oBAAoB,QAAQ,QAAQ,CAAC,IAAI;IACzC,wBAAwB,KAAK,QAAQ,OAAO,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,MAAM;IACtF,wBAAwB,KAAK,QAAQ,OAAO,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,eAAe,MAAM;IACtF,wBAAwB,KAAK,KAAK,UAAU,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,eAAe,MAAM;IACtF,wBAAwB,KAAK,OAAO,QAAQ,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,eAAe,MAAM;IACtF,wBAAwB,KAAK,QAAQ,OAAO,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,eAAe,MAAM;IACtF,wBAAwB,KAAK,SAAS,MAAM,QAAQ,CAAC,OAAO,GAAG,KAAK,CAAC,WAAW,MAAM;IACtF,wBAAwB,KAAK,OAAO,QAAQ,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,QAAQ,MAAM;IACtF,wBAAwB,KAAK,OAAO,QAAQ,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,MAAM;IACtF,wBAAwB,KAAK,OAAO,QAAQ,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,MAAM;IACtF;IACA,wBAAwB,KAAK,UAAU,KAAK,QAAQ,CAAC,OAAO,GAAG,CAAC,CAAC,eAAe,MAAM;IACtF,wBAAwB,KAAK,UAAU,KAAK,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,MAAM;IACtF,wBAAwB,KAAK,OAAO,QAAQ,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC,cAAc,MAAM;IACtF,wBAAwB,KAAK,SAAS,MAAM,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,QAAQ,MAAM;IACtF,wBAAwB,KAAK,SAAS,MAAM,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,MAAM;IACtF,wBAAwB,KAAK,SAAS,MAAM,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM;IACtF,wBAAwB,KAAK,QAAQ,OAAO,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC,cAAc,MAAM;IACtF,wBAAwB,KAAK,OAAO,QAAQ,QAAQ,CAAC,OAAO,GAAG,IAAI,CAAC,YAAY,MAAM;IACtF,wBAAwB,KAAK,QAAQ,OAAO,QAAQ,CAAC,OAAO,GAAG,EAAE,CAAC,cAAc,MAAM;IACtF,wBAAwB;IACxB,4BAA4B,OAAO,CAAC,IAAI,CAAC,CAAC,qDAAqD,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;IACnH,qBAAqB;IACrB,iBAAiB,MAAM,IAAI,QAAQ,CAAC,OAAO,KAAK,SAAS,EAAE;IAC3D,oBAAoB,QAAQ,CAAC,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC;IACxD,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA;IACA,QAAQ,MAAM,SAAS,SAAS,cAAc,CAAC;IAC/C,YAAY,WAAW,GAAG;IAC1B,gBAAgB,KAAK,EAAE,CAAC;AACxB;IACA;IACA,gBAAgB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;AACxC;IACA;IACA,gBAAgB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACpC,gBAAgB,IAAI,CAAC,GAAG,GAAG,EAAE,CAAC;IAC9B,gBAAgB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACjC;IACA;IACA,gBAAgB,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;IACnC,aAAa;AACb;IACA,YAAY,IAAI,CAAC,IAAI,EAAE;IACvB,gBAAgB,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjC,aAAa;AACb;IACA,YAAY,OAAO,GAAG;IACtB,gBAAgB,KAAK,CAAC,OAAO,EAAE,CAAC;IAChC,aAAa;AACb;IACA,YAAY,OAAO,GAAG;IACtB,gBAAgB,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;IACrC,gBAAgB,KAAK,CAAC,OAAO,EAAE,CAAC;IAChC,aAAa;AACb;IACA,YAAY,MAAM,GAAG;IACrB,gBAAgB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IACpC,gBAAgB,KAAK,CAAC,MAAM,EAAE,CAAC;IAC/B,aAAa;AACb;IACA;IACA,YAAY,WAAW,qCAAqC;IAC5D,gBAAgB,IAAI,IAAI,GAAG,EAAE,CAAC;AAC9B;IACA;IACA,gBAAgB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACzG,gBAAgB,gBAAgB,CAAC,YAAY,CAAC,IAAI,EAAE,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;AAClF;IACA;IACA,gBAAgB,IAAI,CAAC,IAAI,GAAG;IAC5B,oBAAoB,OAAO,GAAG,IAAI,CAAC,OAAO;IAC1C,oBAAoB,GAAG,GAAG,IAAI,CAAC,GAAG;IAClC,oBAAoB,IAAI,GAAG,IAAI,CAAC,IAAI;IACpC,iBAAiB,CAAC;IAClB,gBAAgB,OAAO,IAAI,CAAC;IAC5B,aAAa;IACb,SAAS;AACT;IACA;IACA,QAAQ,WAAW,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC;IACtC,KAAK;AACL;IACA,IAAI,OAAO,YAAY,CAAC,IAAI,EAAE,MAAM,EAAE;AACtC;IACA;IACA,QAAQ,KAAK,IAAI,SAAS,IAAI,MAAM,EAAE;AACtC;IACA;IACA,YAAY,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IAC9C,YAAY,IAAI,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,SAAS,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;AACzF;IACA;IACA,YAAY,IAAI,aAAa,GAAG,SAAS,CAAC;IAC1C,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACvD,gBAAgB,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACxC;IACA;IACA,gBAAgB,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE,SAAS;AACtD;IACA;IACA,gBAAgB,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,EAAE;IAC3C,oBAAoB,IAAI,aAAa,GAAG,IAAI,CAAC;AAC7C;IACA,oBAAoB,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,EAAE,EAAE;IAC/C,wBAAwB,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC1F,wBAAwB,IAAI,aAAa,GAAG,KAAK,CAAC;IAClD,wBAAwB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjE,4BAA4B,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,EAAE;IAC5D,gCAAgC,aAAa,GAAG,IAAI,CAAC;IACrD,gCAAgC,MAAM;IACtC,6BAA6B;IAC7B,yBAAyB;IACzB,wBAAwB,IAAI,aAAa,KAAK,IAAI,EAAE;IACpD,4BAA4B,aAAa,GAAG,KAAK,CAAC;IAClD,4BAA4B,MAAM;IAClC,yBAAyB;IACzB,qBAAqB;AACrB;IACA,oBAAoB,IAAI,aAAa,KAAK,IAAI,EAAE;IAChD;IACA,wBAAwB,SAAS;IACjC,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,aAAa,GAAG,IAAI,CAAC;IACrC,gBAAgB,MAAM;IACtB,aAAa;AACb;IACA;IACA,YAAY,IAAI,aAAa,KAAK,SAAS,EAAE;IAC7C,gBAAgB,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,SAAS,EAAE;IACnD,oBAAoB,IAAI,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC,OAAO,CAAC;IAC5D,iBAAiB;AACjB;IACA,gBAAgB,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,EAAE;IACrD,oBAAoB,IAAI,GAAG,GAAG,aAAa,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC;IAChE,oBAAoB,IAAI,GAAG,GAAG,aAAa,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC;IAChE,oBAAoB,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;IACrE,oBAAoB,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,CAAC;IACrE,iBAAiB;AACjB;IACA;IACA,aAAa,MAAM;IACnB,gBAAgB,OAAO,IAAI,CAAC,SAAS,CAAC,CAAC;IACvC,aAAa;AACb;IACA,SAAS;AACT;IACA,KAAK;AACL;IACA;IACA,IAAI,OAAO,SAAS,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;AAC/C;IACA;IACA,QAAQ,KAAK,IAAI,SAAS,IAAI,MAAM,EAAE;IACtC,YAAY,IAAI,iBAAiB,GAAG,KAAK,CAAC;AAC1C;IACA;IACA,YAAY,IAAI,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC,CAAC;IAC9C,YAAY,IAAI,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,IAAI,EAAE,SAAS,GAAG,EAAE,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC;AACzF;IACA;IACA,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACvD,gBAAgB,IAAI,IAAI,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;AACxC;IACA;IACA,gBAAgB,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE,SAAS;AACtD;IACA;IACA,gBAAgB,IAAI,IAAI,CAAC,EAAE,KAAK,SAAS,EAAE;IAC3C,oBAAoB,IAAI,aAAa,GAAG,IAAI,CAAC;AAC7C;IACA,oBAAoB,KAAK,IAAI,KAAK,IAAI,IAAI,CAAC,EAAE,EAAE;IAC/C,wBAAwB,IAAI,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC;IAC1F,wBAAwB,IAAI,aAAa,GAAG,KAAK,CAAC;IAClD,wBAAwB,IAAI,YAAY,GAAG,KAAK,EAAE,YAAY,GAAG,KAAK,CAAC;AACvE;IACA,wBAAwB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACjE,4BAA4B,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,EAAE,YAAY,GAAG,IAAI,CAAC;IACnF,4BAA4B,IAAI,OAAO,CAAC,KAAK,CAAC,KAAK,OAAO,CAAC,CAAC,CAAC,EAAE,YAAY,GAAG,IAAI,CAAC;IACnF,4BAA4B,IAAI,YAAY,IAAI,YAAY,EAAE;IAC9D,gCAAgC,aAAa,GAAG,IAAI,CAAC;IACrD,gCAAgC,MAAM;IACtC,6BAA6B;IAC7B,yBAAyB;AACzB;IACA,wBAAwB,IAAI,aAAa,KAAK,IAAI,EAAE;IACpD,4BAA4B,aAAa,GAAG,KAAK,CAAC;IAClD,4BAA4B,MAAM;IAClC,yBAAyB;IACzB,qBAAqB;AACrB;IACA,oBAAoB,IAAI,aAAa,KAAK,IAAI,EAAE;IAChD;IACA,wBAAwB,SAAS;IACjC,qBAAqB;IACrB,iBAAiB;AACjB;IACA,gBAAgB,iBAAiB,GAAG,IAAI,CAAC;IACzC,gBAAgB,MAAM;IACtB,aAAa;AACb;IACA;IACA,YAAY,IAAI,iBAAiB,KAAK,IAAI,EAAE;IAC5C,gBAAgB,OAAO,OAAO,CAAC,SAAS,CAAC,CAAC;IAC1C,aAAa;AACb;IACA,SAAS;AACT;IACA,KAAK;AACL;IACA;;ICjRA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAUA;IACA;AACA;IACY,IAAIA,gBAAK,CAAC,OAAO,GAAG;IAChC,MAAM,YAAY,GAAG,IAAIA,gBAAK,CAAC,OAAO,EAAE,CAAC;IACzC,MAAM,cAAc,GAAG,IAAIA,gBAAK,CAAC,UAAU,EAAE,CAAC;IAC9C,MAAM,SAAS,GAAG,IAAIA,gBAAK,CAAC,OAAO,EAAE,CAAC;IACd,IAAIA,gBAAK,CAAC,UAAU,GAAG;IACzB,IAAIA,gBAAK,CAAC,OAAO,GAAG;IAC1C,MAAMC,cAAY,GAAG,IAAID,gBAAK,CAAC,OAAO,EAAE,CAAC;IACzC,MAAMG,WAAS,GAAG,IAAIH,gBAAK,CAAC,OAAO,EAAE,CAAC;IACf,IAAIA,gBAAK,CAAC,UAAU,GAAG;IAC9C,MAAM,iBAAiB,GAAG,IAAIA,gBAAK,CAAC,UAAU,EAAE,CAAC;IACjD,MAAM,oBAAoB,GAAG,IAAIA,gBAAK,CAAC,UAAU,EAAE,CAAC;IACzB,IAAIA,gBAAK,CAAC,KAAK,GAAG;IAC7C,MAAM,mBAAmB,GAAG,IAAIA,gBAAK,CAAC,UAAU,EAAE,CAAC;IACnD,MAAM,cAAc,GAAG,IAAIA,gBAAK,CAAC,OAAO,EAAE,CAAC;IAC3C,MAAM,gBAAgB,GAAG,IAAIA,gBAAK,CAAC,UAAU,EAAE,CAAC;IAChD,MAAM,WAAW,GAAG,IAAIA,gBAAK,CAAC,OAAO,EAAE,CAAC;IACxC,MAAM,cAAc,GAAG,IAAIA,gBAAK,CAAC,KAAK,EAAE,CAAC;AACzC;IACA;IACA;IACA;AACA;IACA,MAAM,QAAQ,SAASA,gBAAK,CAAC,QAAQ,CAAC;AACtC;IACA,IAAI,WAAW,GAAG;IAClB,QAAQ,KAAK,EAAE,CAAC;AAChB;IACA,QAAQ,MAAM,QAAQ,GAAG,IAAIA,gBAAK,CAAC,KAAK,EAAE,CAAC;IAC3C,QAAQ,MAAM,UAAU,GAAG,IAAIA,gBAAK,CAAC,UAAU,EAAE,CAAC;AAClD;IACA;IACA;IACA;IACA;IACA,QAAQ,SAAS,gBAAgB,GAAG,0CAA0C;IAC9E,QAAQ,SAAS,kBAAkB,GAAG,0CAA0C;IAChF;AACA;IACA,QAAQ,QAAQ,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;IAC7C,QAAQ,UAAU,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;AACjD;IACA,QAAQ,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE;IACtC,YAAY,QAAQ,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,QAAQ,EAAE;IAC/E,YAAY,UAAU,EAAE,EAAE,YAAY,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,KAAK,EAAE,UAAU,EAAE;IACnF,SAAS,CAAC,CAAC;AACX;IACA,KAAK;AACL;IACA;AACA;IACA,IAAI,IAAI,CAAC,MAAM,EAAE,SAAS,GAAG,IAAI,EAAE;IACnC;IACA,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;AACtC;IACA;IACA,QAAQ,WAAW,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,oBAAoB,CAAC;IAC/E,QAAQ,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IAChD,QAAQ,IAAI,CAAC,YAAY,EAAE,CAAC;AAC5B;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;AACA;IACA;IACA,IAAI,kBAAkB,CAAC,gBAAgB,EAAE,eAAe,GAAG,IAAI,EAAE;IACjE,QAAQ,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC;IAChD,QAAQ,IAAI,eAAe,IAAI,eAAe,EAAE;IAChD,YAAY,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;IACtC,SAAS;IACT,QAAQ,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAC5C,QAAQ,IAAI,CAAC,WAAW,CAAC,SAAS,CAACC,cAAY,EAAE,gBAAgB,EAAEE,WAAS,CAAC,CAAC;IAC9E,QAAQ,IAAI,eAAe,IAAI,eAAe,EAAE;IAChD,YAAY,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;IACrC,YAAY,IAAI,CAAC,iBAAiB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAChD,SAAS;IACT,QAAQ,OAAO,gBAAgB,CAAC;IAChC,KAAK;AACL;IACA;AACA;IACA,IAAI,UAAU,CAAC,MAAM,EAAE;IACvB,QAAQ,IAAI,EAAE,MAAM,IAAI,EAAE,MAAM,CAAC,UAAU,EAAE,OAAO;IACpD,QAAQ,MAAM,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,CAAC;IACpD,QAAQ,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IAC1C,QAAQ,MAAM,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC;IAChD,QAAQ,MAAM,CAAC,gBAAgB,EAAE,CAAC;IAClC,QAAQ,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,SAAS,EAAE,KAAK,CAAC,CAAC,CAAC;IACnG,QAAQ,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACvC,QAAQ,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC7C,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IAC5B,KAAK;AACL;IACA;AACA;IACA,IAAI,YAAY,GAAG;AACnB;IACA;IACA,QAAQ,MAAM,MAAM,GAAG,MAAM,CAAC,YAAY,CAAC;IAC3C,QAAQ,IAAI,YAAY,GAAG,IAAI,CAAC,YAAY,IAAI,MAAM,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC;IACzE,QAAQ,IAAI,YAAY,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;IACnE,YAAY,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,KAAK,EAAE,IAAI,MAAM,CAAC,YAAY,EAAE,YAAY,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC;IACnG,SAAS;AACT;IACA;IACA,QAAQ,IAAI,YAAY,EAAE;AAC1B;IACA;IACA,YAAY,MAAM,CAAC,WAAW,CAAC,SAAS,CAAC,YAAY,EAAE,cAAc,EAAE,SAAS,CAAC,CAAC;IAClF,YAAY,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,cAAc,EAAE,gBAAgB,EAAE,WAAW,CAAC,CAAC;IACtF,YAAY,mBAAmB,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AACnE;IACA;IACA;AACA;IACA;IACA,gBAAgB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACrD,gBAAgB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;AAC9D;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA,YAAY,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,UAAU,EAAE;IACvD,gBAAgB,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,iBAAiB,EAAE,KAAK,CAAC,CAAC;IACzE,gBAAgB,oBAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;IACtE,gBAAgB,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC;IAC/D,aAAa;AACb;IACA;IACA,SAAS,MAAM;IACf,YAAY,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;IAC/D,SAAS;AACT;IACA;AACA;IACA,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IACxE,QAAQ,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC;AAC3C;IACA;IACA,KAAK;AACL;IACA;;ICnLA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAmBA;IACA;IACA;IACA;AACA;IACA,MAAM,QAAQ,SAAS,QAAQ,CAAC;AAChC;IACA,IAAI,WAAW,CAAC,IAAI,GAAG,EAAE,EAAE;IAC3B,QAAQ,KAAK,EAAE,CAAC;AAChB;IACA;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;IAC7B,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC/B;IACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;IAC/B,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC5B;IACA;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC/B,QAAQ,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;IAClC,QAAQ,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;AAClC;IACA;IACA,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AAC7B;IACA;IACA,QAAQ,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACjD;IACA,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,cAAc,GAAG;IACrB,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE,OAAO,OAAO,CAAC;IACzC,QAAQ,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,KAAK,CAAC,IAAI,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,GAAG,UAAU,CAAC;IACvH,KAAK;AACL;IACA,IAAI,OAAO,CAAC,IAAI,EAAE;IAClB,QAAQ,OAAO,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5C,KAAK;AACL;IACA,IAAI,OAAO,CAAC,IAAI,EAAE,KAAK,EAAE;IACzB,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IACpC,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;IACA;IACA;AACA;IACA;IACA,IAAI,YAAY,CAAC,IAAI,EAAE,IAAI,GAAG,EAAE,EAAE,mBAAmB,GAAG,IAAI,EAAE;IAC9D,QAAQ,MAAM,cAAc,GAAG,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IACjE,QAAQ,IAAI,cAAc,KAAK,SAAS,EAAE,OAAO,SAAS,CAAC;AAC3D;IACA;IACA,QAAQ,MAAM,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC;AAC7C;IACA;IACA,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;IAChD,QAAQ,IAAI,cAAc,CAAC,MAAM,CAAC,QAAQ,IAAI,SAAS,KAAK,SAAS,EAAE;IACvE,YAAY,SAAS,GAAG,IAAI,cAAc,EAAE,CAAC;IAC7C,YAAY,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5C;IACA;IACA,SAAS,MAAM;IACf,YAAY,SAAS,CAAC,OAAO,EAAE,CAAC;IAChC,SAAS;AACT;IACA;IACA,QAAQ,IAAI,MAAM,CAAC,YAAY,IAAI,mBAAmB,EAAE;IACxD,YAAY,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;IACrD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;IACrE,gBAAgB,IAAI,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,EAAE;IACtE,oBAAoB,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,KAAK,CAAC,CAAC;IAClE,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA;IACA,QAAQ,SAAS,CAAC,MAAM,GAAG,IAAI,CAAC;IAChC,QAAQ,gBAAgB,CAAC,YAAY,CAAC,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,CAAC;IAC3D,QAAQ,IAAI,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,QAAQ,IAAI,IAAI,CAAC,OAAO,EAAE,SAAS,CAAC,MAAM,EAAE,CAAC;AAC7C;IACA;IACA,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA;IACA,IAAI,YAAY,CAAC,IAAI,EAAE,GAAG,iBAAiB;IAC3C,QAAQ,IAAI,GAAG,KAAK,SAAS,EAAE,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAChF,QAAQ,IAAI,UAAU,GAAG,IAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,CAAC,CAAC;IACpF,QAAQ,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE,OAAO,UAAU,CAAC,CAAC,CAAC,CAAC;IACxD,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA,IAAI,iBAAiB,CAAC,GAAG,EAAE;IAC3B,QAAQ,OAAO,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;IACvD,KAAK;AACL;IACA,IAAI,kBAAkB,CAAC,IAAI,EAAE;IAC7B,QAAQ,OAAO,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACzD,KAAK;AACL;IACA;IACA,IAAI,sBAAsB,CAAC,QAAQ,EAAE,KAAK,EAAE;IAC5C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAChE,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IACjD,YAAY,IAAI,SAAS,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE,OAAO,SAAS,CAAC;IAChE,SAAS;IACT,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA;IACA,IAAI,2BAA2B,qCAAqC;IACpE,QAAQ,IAAI,UAAU,GAAG,EAAE,CAAC;IAC5B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;IAClE,YAAY,MAAM,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACjD;IACA,YAAY,IAAI,aAAa,GAAG,IAAI,CAAC;IACrC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,EAAE;IACnE,gBAAgB,IAAI,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IAChE,oBAAoB,aAAa,GAAG,KAAK,CAAC;IAC1C,oBAAoB,MAAM;IAC1B,iBAAiB;IACjB,aAAa;IACb,YAAY,IAAI,aAAa,EAAE,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1D,SAAS;IACT,QAAQ,OAAO,UAAU,CAAC;IAC1B,KAAK;AACL;IACA,IAAI,eAAe,CAAC,SAAS,EAAE;IAC/B,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;IACvD,QAAQ,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;IAC1B,YAAY,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC7C,YAAY,SAAS,CAAC,OAAO,EAAE,CAAC;IAChC,YAAY,SAAS,CAAC,OAAO,EAAE,CAAC;IAChC,SAAS,MAAM;IACf,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,oCAAoC,EAAE,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;IACtH,SAAS;IACT,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,WAAW,GAAG;IAClB,QAAQ,MAAM,gBAAgB,GAAG,EAAE,CAAC;IACpC,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;IACvC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClD,YAAY,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,EAAE,gBAAgB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAC3E,SAAS;IACT,QAAQ,OAAO,gBAAgB,CAAC;IAChC,KAAK;AACL;IACA,IAAI,aAAa,CAAC,EAAE,EAAE;IACtB,QAAQ,OAAO,IAAI,CAAC,mBAAmB,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAClD,KAAK;AACL;IACA,IAAI,eAAe,CAAC,IAAI,EAAE;IAC1B,QAAQ,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACtD,KAAK;AACL;IACA,IAAI,eAAe,CAAC,IAAI,EAAE;IAC1B,QAAQ,OAAO,IAAI,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACtD,KAAK;AACL;IACA,IAAI,mBAAmB,CAAC,IAAI,EAAE,KAAK,EAAE;IACrC,QAAQ,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,IAAI,CAAC;IAC9C,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC5C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACzD,YAAY,MAAM,KAAK,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IACtC,YAAY,MAAM,MAAM,GAAG,KAAK,CAAC,mBAAmB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IAClE,YAAY,IAAI,MAAM,EAAE,OAAO,MAAM,CAAC;IACtC,SAAS;IACT,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA,IAAI,gBAAgB,CAAC,QAAQ,EAAE;IAC/B,QAAQ,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,IAAI,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC3E,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,WAAW,CAAC,SAAS,GAAG,IAAI,EAAE;IAClC,QAAQ,OAAO,IAAI,IAAI,CAAC,WAAW,EAAE,CAAC,UAAU,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAClE,KAAK;AACL;IACA,IAAI,UAAU,CAAC,MAAM,EAAE,SAAS,GAAG,IAAI,EAAE;IACzC;IACA,QAAQ,IAAI,CAAC,OAAO,EAAE,CAAC;AACvB;IACA;IACA,QAAQ,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AAClC;IACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC;AAChC;IACA;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;IACtC,QAAQ,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;IAC5C,QAAQ,IAAI,CAAC,aAAa,GAAG,MAAM,CAAC,aAAa,CAAC;IAClD,QAAQ,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;AAChD;IACA;IACA,QAAQ,KAAK,IAAI,IAAI,IAAI,YAAY,EAAE;IACvC,YAAY,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;IACjF,SAAS;AACT;IACA;IACA,QAAQ,MAAM,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC;IAC7C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpD,YAAY,MAAM,SAAS,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC;AAC5C;IACA;IACA,YAAY,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,IAAI,EAAE,SAAS,CAAC,MAAM,EAAE,EAAE,KAAK,CAAC,CAAC;AAC/F;IACA;IACA,YAAY,eAAe,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,CAAC;IAChD,YAAY,IAAI,SAAS,CAAC,OAAO,KAAK,IAAI,EAAE,eAAe,CAAC,OAAO,EAAE,CAAC;IACtE,SAAS;AACT;IACA;IACA,QAAQ,IAAI,SAAS,KAAK,IAAI,EAAE;IAChC,YAAY,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;IAClD,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACtD,gBAAgB,MAAM,MAAM,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC3C,gBAAgB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,CAAC;IACnD,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,OAAO,GAAG;IACd,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1C,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClD,YAAY,IAAI,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACrE,YAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IAClC,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;IAC3C,YAAY,IAAI,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;IAC/C,YAAY,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;IAC5C,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,QAAQ,CAAC,IAAI,EAAE;IACnB,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;AACjC;IACA;AACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC9B,QAAQ,IAAI,IAAI,CAAC,IAAI,KAAK,SAAS,EAAE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAC3D;IACA,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACpE,QAAQ,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IAC7E,QAAQ,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IACtF,QAAQ,IAAI,IAAI,CAAC,YAAY,KAAK,SAAS,EAAE,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AACnF;IACA;AACA;IACA,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChF,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAChF,QAAQ,IAAI,IAAI,CAAC,KAAK,KAAK,SAAS,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACvE;IACA,QAAQ,IAAI,IAAI,CAAC,gBAAgB,KAAK,SAAS,EAAE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAC/F,QAAQ,IAAI,IAAI,CAAC,MAAM,KAAK,SAAS,EAAE,IAAI,CAAC,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;AACtE;IACA,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,SAAS,EAAE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACpE,QAAQ,IAAI,IAAI,CAAC,aAAa,KAAK,SAAS,EAAE,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IACtF,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IAChF,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACvE;IACA;AACA;IACA,QAAQ,KAAK,IAAI,GAAG,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;IAC3C,YAAY,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IACtD,SAAS;AACT;IACA;AACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAChE,YAAY,IAAI,aAAa,GAAG,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AAC1D;IACA;IACA,YAAY,IAAI,aAAa,IAAI,aAAa,CAAC,IAAI,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE;IAChF,gBAAgB,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,EAAE,KAAK,CAAC,CAAC;AACnG;IACA;IACA,gBAAgB,IAAI,aAAa,CAAC,OAAO,KAAK,KAAK,EAAE,SAAS,CAAC,OAAO,EAAE,CAAC;IACzE,gBAAgB,SAAS,CAAC,GAAG,GAAG,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC;IACvD,aAAa;IACb,SAAS;AACT;IACA;AACA;IACA,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;IACzC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClE,gBAAgB,MAAM,MAAM,GAAG,IAAI,QAAQ,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IAChF,gBAAgB,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACjC,aAAa;IACb,SAAS;AACT;IACA,QAAQ,IAAI,CAAC,YAAY,EAAE,CAAC;AAC5B;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,MAAM,GAAG;IACb,QAAQ,MAAM,IAAI,GAAG;IACrB,YAAY,MAAM,EAAE;IACpB,gBAAgB,IAAI,EAAE,IAAI,CAAC,IAAI;IAC/B,gBAAgB,IAAI,EAAE,IAAI,CAAC,IAAI;IAC/B,gBAAgB,IAAI,EAAE,IAAI,CAAC,IAAI;AAC/B;IACA,gBAAgB,UAAU,EAAE,EAAE;IAC9B,gBAAgB,KAAK,EAAE,EAAE;IACzB,aAAa;IACb,SAAS,CAAC;AACV;IACA;IACA,QAAQ,KAAK,IAAI,GAAG,IAAI,YAAY,EAAE;IACtC,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IACvD,SAAS;AACT;IACA;AACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACzD,YAAY,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IACrE,SAAS;AACT;IACA;AACA;IACA,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IAC3C,QAAQ,IAAI,CAAC,MAAM,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IACjD,QAAQ,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;IACvD,QAAQ,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;AACrD;IACA;AACA;IACA,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IACxD,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC;IACvD,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AACjD;IACA,QAAQ,IAAI,CAAC,MAAM,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;IAC7D,QAAQ,IAAI,CAAC,MAAM,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AAC9C;IACA,QAAQ,IAAI,IAAI,CAAC,OAAO,KAAK,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,OAAO,GAAG,KAAK,CAAC;IAChE,QAAQ,IAAI,IAAI,CAAC,aAAa,KAAK,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,aAAa,GAAG,KAAK,CAAC;IAC5E,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,CAAC,EAAE,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;IAC/E,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACzF;IACA;AACA;IACA,QAAQ,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;IAC1C,QAAQ,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;IACjC,YAAY,IAAI,CAAC,MAAM,CAAC,QAAQ,GAAG,EAAE,CAAC;IACtC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACtD,gBAAgB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC;IAChE,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;;IC1ZA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAMA;IACA;IACA;IACA;AACA;IACA,MAAM,OAAO,SAAS,QAAQ,CAAC;AAC/B;IACA,IAAI,WAAW,CAAC,IAAI,GAAG,aAAa,EAAE;IACtC,QAAQ,KAAK,EAAE,CAAC;AAChB;IACA;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B;IACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;AAC9B;IACA;IACA,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC/B,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC;IAChC,QAAQ,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC;IACxB,QAAQ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;IACrC,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC/B;IACA;IACA,QAAQ,IAAI,CAAC,WAAW,GAAG,IAAIH,gBAAK,CAAC,IAAI;IACzC,YAAY,IAAIA,gBAAK,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,CAAC;IACnD,YAAY,IAAIA,gBAAK,CAAC,cAAc,CAAC,EAAE,KAAK,EAAE,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,OAAO,EAAE,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;IACtG,SAAS,CAAC;IACV,QAAQ,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,aAAa,CAAC;IAC9C,QAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,GAAG,IAAI,CAAC;IAClD,QAAQ,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;IACpD,QAAQ,IAAI,CAAC,WAAW,CAAC,UAAU,GAAG,KAAK,CAAC;IAC5C,QAAQ,IAAI,CAAC,WAAW,CAAC,aAAa,GAAG,IAAI,CAAC;IAC9C,QAAQ,IAAI,CAAC,WAAW,CAAC,OAAO,GAAG,KAAK,CAAC;IACzC,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACnC;IACA,KAAK;AACL;IACA;AACA;IACA,IAAI,QAAQ,CAAC,IAAI,EAAE;IACnB,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;AACjC;IACA;IACA,QAAQ,IAAI,IAAI,CAAC,UAAU,KAAK,SAAS,EAAE;IAC3C,YAAY,IAAI,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACnD,gBAAgB,IAAI,CAAC,UAAU,GAAG,IAAIA,gBAAK,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACnE,aAAa,MAAM;IACnB,gBAAgB,IAAI,CAAC,UAAU,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC3E,aAAa;IACb,SAAS;IACT,QAAQ,IAAI,IAAI,CAAC,WAAW,KAAK,SAAS,EAAE,IAAI,CAAC,WAAW,GAAG,YAAY,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACzG,QAAQ,IAAI,IAAI,CAAC,GAAG,KAAK,SAAS,EAAE;IACpC,YAAY,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,KAAK,EAAE;IACzC,gBAAgB,IAAI,CAAC,GAAG,GAAG,IAAIA,gBAAK,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACtF,aAAa,MAAM,IAAI,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK,SAAS,EAAE;IACpD,gBAAgB,IAAI,CAAC,GAAG,GAAG,IAAIA,gBAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IAC/E,aAAa;IACb,SAAS;AACT;IACA;IACA,QAAQ,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AAC7B;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,MAAM,GAAG;IACb,QAAQ,MAAM,IAAI,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC;AACpC;IACA,QAAQ,IAAI,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;AAC1D;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;;IC1FA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;AACA;IACA,MAAM,OAAO,CAAC;AACd;IACA,IAAI,WAAW,CAAC,IAAI,GAAG,SAAS,EAAE;AAClC;IACA;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B;IACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;IAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;AACxC;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACvB,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;IAC/B,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AACpC;IACA;IACA,QAAQ,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AAC7B;IACA,KAAK;AACL;IACA;AACA;IACA,IAAI,QAAQ,CAAC,KAAK,EAAE;IACpB,QAAQ,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,KAAK,SAAS,EAAE;IAC/C,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IAC7C,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,0BAA0B,EAAE,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/F,aAAa,MAAM;IACnB,gBAAgB,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG;IAC9C,oBAAoB,IAAI,EAAE,KAAK,CAAC,IAAI;IACpC,oBAAoB,KAAK,EAAE,IAAI,CAAC,KAAK,GAAG;IACxC,iBAAiB,CAAC;IAClB,gBAAgB,IAAI,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC,IAAI,CAAC;IACpE,gBAAgB,IAAI,EAAE,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC;IAC9E,aAAa;IACb,SAAS,MAAM;IACf,YAAY,OAAO,CAAC,KAAK,CAAC,CAAC,8CAA8C,CAAC,EAAE,KAAK,CAAC,CAAC;IACnF,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;AACA;IACA,IAAI,QAAQ,CAAC,IAAI,EAAE;IACnB,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC;AACjC;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;IAC9B,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;AAC9B;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;IAChC,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IAC1C,QAAQ,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC;AACpD;IACA,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;IAC1C,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,MAAM,GAAG;IACb,QAAQ,MAAM,IAAI,GAAG;IACrB,YAAY,MAAM,EAAE;IACpB,gBAAgB,IAAI,EAAE,IAAI,CAAC,IAAI;IAC/B,gBAAgB,IAAI,EAAE,IAAI,CAAC,IAAI;IAC/B,gBAAgB,IAAI,EAAE,IAAI,CAAC,IAAI;AAC/B;IACA,gBAAgB,KAAK,EAAE,IAAI,CAAC,KAAK;IACjC,gBAAgB,UAAU,EAAE,IAAI,CAAC,UAAU;IAC3C,gBAAgB,eAAe,EAAE,IAAI,CAAC,eAAe;AACrD;IACA,gBAAgB,UAAU,EAAE,IAAI,CAAC,UAAU;IAC3C,aAAa;IACb,SAAS,CAAC;IACV,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;;IC1FA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA,MAAM,WAAW,CAAC;AAClB;IACA;IACA,IAAI,OAAO,mBAAmB,CAAC,eAAe,EAAE,gBAAgB,EAAE;IAClE,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,gBAAgB,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC1D,YAAY,IAAI,MAAM,GAAG,gBAAgB,CAAC,CAAC,CAAC,CAAC;IAC7C,YAAY,IAAI,WAAW,CAAC,cAAc,CAAC,eAAe,EAAE,MAAM,CAAC,KAAK,KAAK,EAAE;IAC/E,gBAAgB,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7C,aAAa;IACb,SAAS;IACT,KAAK;AACL;IACA;IACA,IAAI,OAAO,YAAY,CAAC,cAAc,EAAE,cAAc,EAAE;IACxD;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxD,YAAY,IAAI,WAAW,CAAC,cAAc,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,IAAI,CAAC;IACpG,SAAS;IACT,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxD,YAAY,IAAI,WAAW,CAAC,cAAc,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE,OAAO,IAAI,CAAC;IACpG,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;AACL;IACA;IACA,IAAI,OAAO,sBAAsB,CAAC,cAAc,EAAE,cAAc,EAAE;IAClE;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxD,YAAY,IAAI,WAAW,CAAC,cAAc,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;IACtG,SAAS;IACT,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,cAAc,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACxD,YAAY,IAAI,WAAW,CAAC,cAAc,CAAC,cAAc,EAAE,cAAc,CAAC,CAAC,CAAC,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;IACtG,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;IACA,IAAI,OAAO,cAAc,CAAC,eAAe,EAAE,MAAM,EAAE;IACnD,QAAQ,IAAI,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,CAAC,OAAO,CAAC,eAAe,CAAC,EAAE;IACrE,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAe,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC7D,gBAAgB,IAAI,eAAe,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE,OAAO,IAAI,CAAC;IACzE,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;AACL;IACA;IACA,IAAI,OAAO,WAAW,CAAC,MAAM,EAAE;IAC/B,QAAQ,IAAI,SAAS,GAAG,KAAK,CAAC;IAC9B,QAAQ,SAAS,GAAG,SAAS,IAAI,MAAM,CAAC,MAAM,KAAK,IAAI,CAAC;IACxD,QAAQ,SAAS,GAAG,SAAS,IAAI,MAAM,CAAC,OAAO,CAAC;IAChD,QAAQ,SAAS,GAAG,SAAS,IAAI,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC;IAC5D,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA;IACA,IAAI,OAAO,YAAY,CAAC,MAAM,EAAE,aAAa,GAAG,KAAK,EAAE;IACvD,QAAQ,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,KAAK,MAAM,CAAC,MAAM,CAAC,OAAO,KAAK,IAAI,CAAC,EAAE;IAC5E,YAAY,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IACnC,YAAY,IAAI,aAAa,IAAI,MAAM,CAAC,QAAQ,EAAE,OAAO,MAAM,CAAC;IAChE,SAAS;IACT,QAAQ,OAAO,MAAM,CAAC;IACtB,KAAK;AACL;IACA;IACA,IAAI,OAAO,WAAW,CAAC,MAAM,EAAE;IAC/B,QAAQ,OAAO,MAAM,IAAI,MAAM,CAAC,MAAM,EAAE;IACxC,YAAY,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IACnC,YAAY,IAAI,MAAM,CAAC,OAAO,EAAE,OAAO,MAAM,CAAC;IAC9C,SAAS;IACT,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA;IACA,IAAI,OAAO,qBAAqB,CAAC,WAAW,EAAE,MAAM,EAAE;IACtD,QAAQ,IAAI,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;IACxC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,EAAE,CAAC,EAAE,EAAE;IACzC,YAAY,IAAI,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,EAAE;IACrD,gBAAgB,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACzC,gBAAgB,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;IAC5C,aAAa;IACb,SAAS;IACT,KAAK;AACL;IACA;IACA,IAAI,OAAO,SAAS,CAAC,WAAW,EAAE;IAClC,QAAQ,IAAI,SAAS,GAAG,EAAE,CAAC;IAC3B,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrD,YAAY,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;IAChD,SAAS;IACT,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA;;ICtHA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAaA;IACA;IACA;IACA;AACA;IACA,MAAM,OAAO,CAAC;AACd;IACA,IAAI,WAAW,CAAC,IAAI,GAAG,YAAY,EAAE;AACrC;IACA;IACA,QAAQ,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC9B;IACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACzB,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;IACxC,QAAQ,IAAI,CAAC,IAAI,GAAG,SAAS,CAAC;AAC9B;IACA;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;IAC1B,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACzB,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACzB;IACA,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,QAAQ,CAAC,KAAK,EAAE;IACpB,QAAQ,IAAI,KAAK,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IAC9C,YAAY,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IAC5C,YAAY,IAAI,IAAI,CAAC,eAAe,IAAI,IAAI,EAAE,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC,IAAI,CAAC;IAChF,SAAS,MAAM;IACf,YAAY,OAAO,CAAC,KAAK,CAAC,CAAC,8BAA8B,EAAE,KAAK,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,KAAK,CAAC,CAAC;IACxG,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,cAAc,CAAC,IAAI,EAAE;IACzB,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACrD,KAAK;AACL;IACA,IAAI,cAAc,CAAC,IAAI,EAAE;IACzB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,KAAK;AACL;IACA,IAAI,kBAAkB,CAAC,QAAQ,EAAE,KAAK,EAAE;IACxC,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;IACxC,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5C,YAAY,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;IACxD,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,QAAQ,CAAC,KAAK,EAAE;IACpB,QAAQ,IAAI,KAAK,IAAI,WAAW,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IAC9C,YAAY,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,EAAE;IACzC,gBAAgB,OAAO,CAAC,IAAI,CAAC,CAAC,0BAA0B,EAAE,KAAK,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE,KAAK,CAAC,CAAC;IAC/F,aAAa,MAAM;IACnB,gBAAgB,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;IAChD,aAAa;IACb,SAAS,MAAM;IACf,YAAY,OAAO,CAAC,KAAK,CAAC,CAAC,8BAA8B,EAAE,KAAK,CAAC,IAAI,CAAC,wBAAwB,CAAC,EAAE,KAAK,CAAC,CAAC;IACxG,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,aAAa,GAAG;IACpB,QAAQ,IAAI,SAAS,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjD,QAAQ,OAAO,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;IACzE,KAAK;AACL;IACA,IAAI,cAAc,CAAC,IAAI,EAAE;IACzB,QAAQ,OAAO,IAAI,CAAC,kBAAkB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IACrD,KAAK;AACL;IACA,IAAI,cAAc,CAAC,IAAI,EAAE;IACzB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACjC,KAAK;AACL;IACA,IAAI,kBAAkB,CAAC,QAAQ,EAAE,KAAK,EAAE;IACxC,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;IACxC,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5C,YAAY,IAAI,KAAK,CAAC,QAAQ,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;IACxD,SAAS;IACT,KAAK;AACL;IACA,IAAI,WAAW,CAAC,KAAK,EAAE;IACvB,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,IAAI,EAAE,OAAO;AAC3C;IACA;IACA,QAAQ,IAAI,QAAQ,GAAG,KAAK,CAAC,WAAW,EAAE,CAAC;IAC3C,QAAQ,KAAK,IAAI,CAAC,GAAG,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;IACvD,YAAY,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IACjD,YAAY,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IAClC,SAAS;AACT;IACA;IACA,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IACvC,KAAK;AACL;IACA,IAAI,cAAc,CAAC,QAAQ,EAAE;IAC7B,QAAQ,KAAK,IAAI,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;IACtC,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC1C,YAAY,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IACrC,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,SAAS,CAAC,MAAM,EAAE,MAAM,GAAG,SAAS,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE,sBAAsB,GAAG,KAAK,EAAE;IACtF,QAAQ,IAAI,EAAE,MAAM,EAAE,OAAO;IAC7B,QAAQ,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAC9D;IACA,QAAQ,IAAI,MAAM,CAAC,UAAU,EAAE;IAC/B,YAAY,IAAI,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;IAC3D,gBAAgB,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IACzD,gBAAgB,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;IACvC,aAAa,MAAM;IACnB,gBAAgB,IAAI,SAAS,GAAG,MAAM,CAAC;IACvC,gBAAgB,IAAI,EAAE,SAAS,IAAI,EAAE,SAAS,CAAC,UAAU,EAAE;IAC3D,oBAAoB,IAAI,MAAM,CAAC,MAAM,EAAE,SAAS,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;IAChF,iBAAiB;IACjB,gBAAgB,IAAI,SAAS,IAAI,SAAS,CAAC,UAAU,EAAE;IACvD,oBAAoB,IAAI,sBAAsB,EAAE;IAChD,wBAAwB,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACjD,qBAAqB,MAAM;IAC3B,wBAAwB,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IAC9C,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,eAAe,CAAC,IAAI,EAAE,eAAe,GAAG,KAAK,EAAE;IACnD,QAAQ,IAAI,SAAS,GAAG,EAAE,CAAC;IAC3B,QAAQ,IAAI,WAAW,GAAG,IAAI,CAAC;IAC/B,QAAQ,IAAI,MAAM,CAAC,MAAM,EAAE,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;AACtE;IACA,QAAQ,IAAI,eAAe,EAAE;IAC7B,YAAY,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAChD;IACA;IACA,YAAY,MAAM,SAAS,GAAG,SAAS,CAAC,OAAO,CAAC,WAAW,CAAC,CAAC;IAC7D,YAAY,MAAM,OAAO,GAAG,CAAC,CAAC;IAC9B,YAAY,IAAI,WAAW,IAAI,SAAS,KAAK,CAAC,CAAC,EAAE;IACjD,gBAAgB,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;IACzC,gBAAgB,GAAG,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAE,WAAW,CAAC,CAAC;IACpD,aAAa;IACb,SAAS,MAAM,IAAI,WAAW,EAAE;IAChC,YAAY,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACxC,SAAS;AACT;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACnD,YAAY,MAAM,MAAM,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC1E,YAAY,IAAI,MAAM,EAAE,OAAO,MAAM,CAAC;IACtC,SAAS;AACT;IACA,QAAQ,OAAO,SAAS,CAAC;IACzB,KAAK;AACL;IACA,IAAI,UAAU,CAAC,MAAM,EAAE,MAAM,GAAG,SAAS,EAAE,MAAM,GAAG,SAAS,EAAE,KAAK,GAAG,CAAC,CAAC,EAAE;IAC3E,QAAQ,IAAI,EAAE,MAAM,EAAE,OAAO;AAC7B;IACA,QAAQ,MAAM,GAAG,MAAM,CAAC;IACxB,QAAQ,IAAI,CAAC,EAAE,MAAM,IAAI,EAAE,MAAM,CAAC,UAAU,KAAK,MAAM,CAAC,MAAM,EAAE,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;IACtG,QAAQ,IAAI,EAAE,MAAM,IAAI,EAAE,MAAM,CAAC,UAAU,EAAE,OAAO;AACpD;IACA;IACA;IACA;IACA;IACA,QAAQ,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAClC;IACA;IACA,QAAQ,IAAI,MAAM,EAAE,KAAK,GAAG,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AAC5D;IACA;IACA,QAAQ,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;IAC1B,YAAY,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IACrD,YAAY,MAAM,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;IAClC,SAAS;IACT,KAAK;AACL;IACA;IACA,IAAI,YAAY,CAAC,MAAM,EAAE,WAAW,GAAG,KAAK,EAAE;IAC9C,QAAQ,IAAI,EAAE,MAAM,EAAE,OAAO;AAC7B;IACA;IACA,QAAQ,IAAI,EAAE,WAAW,IAAI,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,EAAE,OAAO;AACrE;IACA;IACA,QAAQ,IAAI,MAAM,CAAC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACxD,KAAK;AACL;IACA;AACA;IACA,IAAI,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE;IAC9B,QAAQ,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC;IAC9B,QAAQ,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;IACxD,QAAQ,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACvC,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,YAAY,CAAC,MAAM,EAAE,MAAM,EAAE;IACjC,QAAQ,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC;IAC9B,QAAQ,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,OAAO;IACxC,QAAQ,IAAI,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;IACtD,QAAQ,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;IAC7D,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,KAAK,GAAG;AACZ;IACA;IACA,QAAQ,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAClD,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAClD,YAAY,IAAI,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAC;IAChD,YAAY,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACpC,SAAS;AACT;IACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;IACjC,QAAQ,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,UAAU,EAAE,CAAC;AACxC;IACA,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,QAAQ,CAAC,IAAI,EAAE,UAAU,GAAG,IAAI,EAAE;AACtC;IACA;IACA,QAAQ,MAAM,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,IAAI,GAAG,WAAW,CAAC;IAC5E,QAAQ,IAAI,QAAQ,KAAK,SAAS,EAAE;IACpC,YAAY,OAAO,CAAC,KAAK,CAAC,CAAC,yCAAyC,EAAE,QAAQ,CAAC,sBAAsB,CAAC,CAAC,CAAC;IACxG,YAAY,OAAO;IACnB,SAAS;AACT;IACA;IACA,QAAQ,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;IAClD,QAAQ,IAAI,WAAW,KAAK,QAAQ,EAAE;IACtC,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,qCAAqC,EAAE,WAAW,CAAC,6BAA6B,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;IACzH,SAAS;AACT;IACA;IACA,QAAQ,IAAI,EAAE,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,KAAK,IAAI,CAAC,IAAI,EAAE;IAC7D,YAAY,OAAO,CAAC,KAAK,CAAC,CAAC,+DAA+D,CAAC,CAAC,CAAC;IAC7F,YAAY,OAAO;IACnB,SAAS;AACT;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,EAAE,CAAC;AACrB;IACA;IACA,QAAQ,IAAI,UAAU,EAAE,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;AACpD;IACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;IACrC,QAAQ,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC;AACrC;IACA;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACpC;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrD,YAAY,QAAQ,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI;IAC9C,gBAAgB,KAAK,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;IAC7F,aAAa;IACb,SAAS;AACT;IACA;IACA,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACrD,YAAY,QAAQ,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI;IAC9C,gBAAgB,KAAK,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,OAAO,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM;IACnG,aAAa;IACb,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,MAAM,GAAG;AACb;IACA;AACA;IACA,QAAQ,MAAM,IAAI,GAAG,EAAE,CAAC;AACxB;IACA,QAAQ,MAAM,IAAI,GAAG,YAAY,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AAC/C;IACA;AACA;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG;IACxB,YAAY,IAAI,EAAE,SAAS;IAC3B,YAAY,OAAO,EAAE,QAAQ;IAC7B,YAAY,SAAS,EAAE,wBAAwB;IAC/C,SAAS,CAAC;IACV,QAAQ,IAAI,CAAC,MAAM,GAAG;IACtB,YAAY,IAAI,EAAE,IAAI,CAAC,IAAI;IAC3B,YAAY,IAAI,EAAE,IAAI,CAAC,IAAI;IAC3B,YAAY,IAAI,EAAE,IAAI,CAAC,IAAI;IAC3B,SAAS,CAAC;IACV,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;IACpC,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;IACzB,QAAQ,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACzB;IACA;IACA,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;IACxC,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5C,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAC7C,SAAS;AACT;IACA;IACA,QAAQ,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,MAAM,EAAE;IACxC,YAAY,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC5C,YAAY,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;IAC7C,SAAS;AACT;IACA,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;;IClWA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAgBA;IACA;IACA;IACA;AACA;IACA,MAAM,GAAG,CAAC;AACV;IACA;AACA;IACA,IAAI,WAAW,GAAG;IAClB,QAAQ,MAAM,IAAI,GAAG,IAAI,CAAC;AAC1B;IACA;IACA,QAAQ,IAAI,MAAM,GAAG,IAAI,CAAC;IAC1B,QAAQ,IAAI,OAAO,GAAG,IAAI,OAAO,EAAE,CAAC;IACpC,QAAQ,IAAI,QAAQ,CAAC;IACrB,QAAQ,IAAI,MAAM,CAAC;IACnB,QAAQ,IAAI,KAAK,CAAC;IAClB,QAAQ,IAAI,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;AACvC;IACA;IACA,QAAQ,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,OAAO,EAAE;IAC7C,YAAY,GAAG,EAAE,WAAW,EAAE,OAAO,KAAK,CAAC,EAAE;IAC7C,YAAY,GAAG,EAAE,SAAS,KAAK,EAAE,EAAE,KAAK,GAAG,KAAK,CAAC,EAAE;IACnD,SAAS,CAAC,CAAC;AACX;IACA;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;IACvB,QAAQ,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AACxB;IACA,QAAQ,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AACrC;IACA;IACA,QAAQ,QAAQ,GAAG,IAAIA,gBAAK,CAAC,aAAa,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAChE,QAAQ,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;IAClC,QAAQ,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;IAC1C;IACA;IACA;AACA;IACA;IACA,QAAQ,IAAI,CAAC,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;IACjD,QAAQ,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;AAClD;IACA;IACA,QAAQ,IAAI,aAAa,GAAG,8BAA8B,CAAC;IAC3D,QAAQ,IAAI,MAAM,GAAG;IACrB,YAAY,IAAI,EAAE,EAAE;IACpB,YAAY,MAAM,EAAE,EAAE;IACtB,YAAY,OAAO,EAAE,EAAE;IACvB,YAAY,KAAK,EAAE,EAAE;IACrB,YAAY,WAAW,EAAE,EAAE;IAC3B,YAAY,SAAS,EAAE,EAAE;IACzB,YAAY,WAAW,EAAE,EAAE;IAC3B,SAAS,CAAC;AACV;IACA;AACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,SAAS,IAAI,EAAE,UAAU,GAAG,IAAI,EAAE;AACtD;IACA;IACA,YAAY,OAAO,CAAC,QAAQ,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AAC/C;IACA;IACA,YAAY,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,aAAa,EAAE,CAAC;AACjD;IACA;IACA;IACA,YAAY,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,iBAAiB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;IAC1E,YAAY,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAClC,YAAY,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;AAClC;IACA;IACA,YAAY,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IAC5D,YAAY,QAAQ,CAAC,gBAAgB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IACxD,YAAY,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;IACpE,YAAY,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IAChE,YAAY,QAAQ,CAAC,gBAAgB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;AACpE;IACA;IACA,YAAY,IAAI,eAAe,GAAG,EAAE,CAAC;IACrC,YAAY,IAAI,kBAAkB,GAAG,EAAE,CAAC;IACxC,YAAY,KAAK,IAAI,QAAQ,IAAI,MAAM,EAAE;IACzC,gBAAgB,eAAe,IAAI,QAAQ,GAAG,GAAG,CAAC;IAClD,gBAAgB,kBAAkB,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;IACxD,aAAa;IACb,YAAY,eAAe,GAAG,eAAe,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;IAChE,YAAY,IAAI,kBAAkB,GAAG,IAAI,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAC3F;IACA,YAAY,SAAS,WAAW,CAAC,MAAM,EAAE;IACzC,gBAAgB,MAAM,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IAC7D,gBAAgB,IAAI,OAAO,KAAK,SAAS,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;IACjE,oBAAoB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACpE,wBAAwB,IAAI,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;AAChD;IACA,wBAAwB,IAAI,MAAM,CAAC,MAAM,EAAE;IAC3C,4BAA4B,OAAO,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,wBAAwB,EAAE,MAAM,CAAC,IAAI,CAAC,6BAA6B,CAAC,CAAC,CAAC;AACtI;IACA,yBAAyB,MAAM;IAC/B;IACA,4BAA4B,IAAI,IAAI,GAAG,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC,CAAC,CAAC;IAC3F,4BAA4B,IAAI,SAAS,GAAG,CAAC,IAAI,QAAQ,CAAC,aAAa,EAAE,eAAe,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;AAC/I;IACA;IACA,4BAA4B,KAAK,IAAI,IAAI,IAAI,SAAS,EAAE;IACxD,gCAAgC,IAAI,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,SAAS;IAChE,gCAAgC,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,SAAS,EAAE;IAChE,oCAAoC,OAAO,CAAC,IAAI,CAAC,CAAC,mCAAmC,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACjG,oCAAoC,SAAS;IAC7C,iCAAiC;IACjC,gCAAgC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAChF,6BAA6B;IAC7B,yBAAyB;IACzB,qBAAqB;IACrB,iBAAiB;IACjB,aAAa;IACb,YAAY,KAAK,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;AACxC;IACA;IACA,YAAY,QAAQ,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;IAC7C,SAAS,CAAC;AACV;IACA;AACA;IACA,QAAQ,SAAS,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE;IACxC,YAAY,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IAC1D,gBAAgB,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;IAChC,aAAa;IACb,SAAS;AACT;IACA;AACA;IACA,QAAQ,IAAI,qBAAqB,GAAG,MAAM,CAAC,qBAAqB,IAAI,MAAM,CAAC,wBAAwB;IACnG,oCAAoC,MAAM,CAAC,2BAA2B,IAAI,MAAM,CAAC,uBAAuB,CAAC;IACzG,QAAQ,IAAI,oBAAoB,GAAG,MAAM,CAAC,oBAAoB,IAAI,MAAM,CAAC,uBAAuB,CAAC;IACjG,QAAQ,IAAI,SAAS,GAAG,IAAI,CAAC;IAC7B,QAAQ,IAAI,IAAI,EAAE,SAAS,EAAE,QAAQ,CAAC;AACtC;IACA,QAAQ,SAAS,OAAO,GAAG;IAC3B,YAAY,IAAI,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;AACrC;IACA,YAAY,IAAI;IAChB,gBAAgB,IAAI,UAAU,GAAG,IAAI,GAAG,SAAS,CAAC;IAClD,gBAAgB,IAAI,KAAK,GAAG,IAAI,GAAG,QAAQ,CAAC;AAC5C;IACA;IACA,gBAAgB,IAAI,KAAK,KAAK,UAAU,CAAC,OAAO,EAAE;IAClD,oBAAoB,QAAQ,CAAC,MAAM,CAAC,MAAM,EAAE,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC;IAChF,iBAAiB;IACjB,aAAa,CAAC,OAAO,CAAC,EAAE;IACxB,gBAAgB,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,EAAE,EAAE,CAAC;IACjE,aAAa;AACb;IACA,YAAY,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC;IACzC,YAAY,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;AAC3C;IACA;IACA,YAAY,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,EAAE;IAC/C,gBAAgB,IAAI,QAAQ,GAAG,OAAO,CAAC,IAAI,GAAG,GAAG,GAAG,IAAI,IAAI,EAAE,CAAC,cAAc,EAAE,GAAG,MAAM,CAAC;IACzF,gBAAgB,IAAI,OAAO,GAAG,WAAW,CAAC;IAC1C,gBAAgB,IAAI,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;IACrE,gBAAgB,MAAM,CAAC,SAAS,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC;IACpD,gBAAgB,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;IAC7C,aAAa;AACb;IACA,YAAY,QAAQ,GAAG,IAAI,CAAC;AAC5B;IACA,YAAY,SAAS,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;IACvD,SAAS;AACT;IACA;AACA;IACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,WAAW;IAC/B,YAAY,SAAS,GAAG,QAAQ,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;IACrD,YAAY,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;IACvC,YAAY,SAAS,GAAG,qBAAqB,CAAC,OAAO,CAAC,CAAC;IACvD,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,CAAC,KAAK,GAAG,WAAW;IAChC,YAAY,IAAI,KAAK,KAAK,UAAU,CAAC,OAAO,EAAE;IAC9C,gBAAgB,KAAK,GAAG,UAAU,CAAC,MAAM,CAAC;IAC1C,aAAa,MAAM,IAAI,KAAK,KAAK,UAAU,CAAC,MAAM,EAAE;IACpD,gBAAgB,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;IAC3C,aAAa;IACb,UAAS;AACT;IACA;IACA,QAAQ,IAAI,CAAC,IAAI,GAAG,WAAW;IAC/B,YAAY,KAAK,GAAG,UAAU,CAAC,OAAO,CAAC;AACvC;IACA,YAAY,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;IAC/D,YAAY,QAAQ,CAAC,mBAAmB,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;IAC3D,YAAY,QAAQ,CAAC,mBAAmB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;IACvE,YAAY,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;IACnE,YAAY,QAAQ,CAAC,mBAAmB,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;AACvE;IACA,YAAY,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC5C,YAAY,WAAW,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC3C;IACA,YAAY,KAAK,IAAI,GAAG,IAAI,MAAM,EAAE;IACpC,gBAAgB,MAAM,CAAC,GAAG,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;IACvC,aAAa;AACb;IACA,YAAY,IAAI,SAAS,EAAE;IAC3B,gBAAgB,oBAAoB,CAAC,SAAS,CAAC,CAAC;IAChD,gBAAgB,SAAS,GAAG,IAAI,CAAC;IACjC,aAAa;IACb,SAAS,CAAC;AACV;IACA;AACA;IACA,QAAQ,SAAS,SAAS,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,EAAE;IACtE,QAAQ,SAAS,OAAO,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC,EAAE;IAClE,QAAQ,SAAS,aAAa,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,EAAE;IAC9E,QAAQ,SAAS,WAAW,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC,EAAE;IAC1E,QAAQ,SAAS,aAAa,CAAC,KAAK,EAAE,EAAE,QAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC,EAAE;AAC9E;IACA;AACA;IACA,QAAQ,IAAI,CAAC,WAAW,GAAG,WAAW;IACtC,YAAY,OAAO,QAAQ,CAAC;IAC5B,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,CAAC,QAAQ,GAAG,WAAW;IACnC,YAAY,OAAO,KAAK,CAAC;IACzB,SAAS,CAAC;AACV;IACA;AACA;IACA,QAAQ,IAAI,CAAC,SAAS,GAAG,SAAS,KAAK,EAAE;IACzC,YAAY,MAAM,GAAG,KAAK,CAAC;IAC3B,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,CAAC,aAAa,GAAG,SAAS,UAAU,EAAE;IAClD,YAAY,QAAQ,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;IAC/C,SAAS,CAAC;AACV;IACA,QAAQ,IAAI,CAAC,OAAO,GAAG,SAAS,KAAK,EAAE,MAAM,EAAE;IAC/C,YAAY,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IAC/B,YAAY,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACjC,YAAY,IAAI,MAAM,EAAE,WAAW,CAAC,YAAY,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;IACxE,YAAY,IAAI,QAAQ,EAAE,QAAQ,CAAC,OAAO,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC1D,SAAS,CAAC;AACV;IACA;AACA;IACA,QAAQ,IAAI,CAAC,eAAe,GAAG,SAAS,SAAS,EAAE;IACnD;IACA,YAAY,MAAM,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC,qBAAqB,EAAE,CAAC;IAC1D,YAAY,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC;IACvD,YAAY,IAAI,MAAM,GAAG,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC;AACtD;IACA;IACA,YAAY,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,GAAG,IAAI,CAAC,KAAK,MAAM,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,KAAK,CAAC;IAC9E,YAAY,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAC;AAChF;IACA,YAAY,IAAI,GAAG,GAAG,IAAIA,gBAAK,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjD,YAAY,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IAClC,YAAY,OAAO,GAAG,CAAC;IACvB,UAAS;AACT;IACA,KAAK;AACL;IACA;;IChSA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AAQA;IACA;IACA;IACA;AACA;IACA,MAAM,UAAU,CAAC;AACjB;IACA,IAAI,WAAW,GAAG;IAClB,QAAQ,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IAC3B,QAAQ,IAAI,CAAC,MAAM,EAAE,CAAC;IACtB,KAAK;AACL;IACA,IAAI,WAAW,CAAC,CAAC,EAAE;IACnB,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;IAC3E,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1C,KAAK;AACL;IACA,IAAI,SAAS,GAAG;IAChB,QAAQ,GAAG,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC;IACjD,QAAQ,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;IACnC,KAAK;AACL;IACA,IAAI,OAAO,CAAC,MAAM,EAAE;IACpB,QAAQ,MAAM,CAAC,OAAO,EAAE,CAAC;IACzB,QAAQ,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACnC,KAAK;AACL;IACA,IAAI,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE;IACnB,QAAQ,IAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,EAAE;IACnC,YAAY,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,QAAQ,EAAE,CAAC,CAAC;IAC/C,SAAS;IACT,KAAK;AACL;IACA;;ICjDA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;AACA;IACA;IACA;IACA;AACA;IACA;IACA,MAAM,QAAQ,CAAC;AACf;IACA;AACA;IACA,IAAI,WAAW,KAAK,GAAG,EAAE,OAAO,cAAc,CAAC,EAAE;AACjD;IACA;AACA;IACA,IAAI,WAAW,CAAC,CAAC,GAAG,QAAQ,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,EAAE,EAAE;IAC/C,QAAQ,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAC5B,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACnB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACnB,QAAQ,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;IACnB,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAChC,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,IAAI,CAAC,WAAW,EAAE;IACtB,QAAQ,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;IACrC,KAAK;AACL;IACA,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,EAAE,EAAE;IAChC;IACA,QAAQ,IAAI,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;IACpC,YAAY,OAAO,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/B;IACA,SAAS,MAAM,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,IAAI,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE;IACrE,YAAY,IAAI,CAAC,IAAI,CAAC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,uDAAuD,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;IACpG;IACA;IACA,SAAS,MAAM,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,KAAK,SAAS,EAAE;IACvD,YAAY,IAAI,KAAK,GAAG,CAAC,CAAC;IAC1B,YAAY,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IACtF,aAAa,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IAC/F,aAAa,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IACpG,aAAa,MAAM,IAAI,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,EAAE,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAChH,aAAa,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;IACjE,gBAAgB,IAAI,MAAM,GAAG,CAAC,OAAO,CAAC,KAAK,MAAM,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACpE,gBAAgB,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,EAAE,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACxF,aAAa,MAAM,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;IAClD,gBAAgB,OAAO,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC5C,aAAa;IACb;IACA,SAAS,MAAM;IACf,YAAY,QAAQ,IAAI;IACxB,gBAAgB,KAAK,KAAK,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,gBAAgB,KAAK,KAAK,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,gBAAgB,KAAK,KAAK,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,gBAAgB,YAAY,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACzD,aAAa;IACb,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,YAAY,CAAC,KAAK,EAAE;IACxB,QAAQ,MAAM,GAAG,GAAG,cAAc,EAAE,KAAK,CAAC,WAAW,EAAE,EAAE,CAAC;IAC1D,QAAQ,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACzC,QAAQ,OAAO,CAAC,IAAI,CAAC,CAAC,wBAAwB,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC;IACzD,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,MAAM,CAAC,QAAQ,EAAE;IACrB,QAAQ,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IACxC,QAAQ,IAAI,QAAQ,GAAG,QAAQ,IAAI,QAAQ,GAAG,CAAC,EAAE;IACjD,YAAY,OAAO,CAAC,IAAI,CAAC,CAAC,oDAAoD,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC5F,YAAY,QAAQ,GAAG,KAAK,CAAC,QAAQ,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;IACpD,SAAS;IACT,QAAQ,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,QAAQ,KAAK,EAAE,CAAC;IAC5C,QAAQ,IAAI,CAAC,GAAG,CAAC,QAAQ,GAAG,QAAQ,MAAM,CAAC,CAAC;IAC5C,QAAQ,IAAI,CAAC,IAAI,QAAQ,GAAG,QAAQ,CAAC,CAAC;IACtC,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,KAAK;AACL;IACA,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACpB,QAAQ,CAAC,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;IACnC,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,QAAQ,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC3B,QAAQ,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;IAC9C,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrD,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;IAC5B,QAAQ,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;IAChC,QAAQ,qBAAqB,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IAC9D,aAAa,KAAK,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IAC9D,aAAa,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IAC9D,aAAa,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IAC9D,aAAa,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IAC9D,aAAa,IAAI,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE;IAC9D,QAAQ,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC;IAC1C,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA,IAAI,SAAS,GAAG;IAChB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;IACzE,KAAK;AACL;IACA;IACA,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACpB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;IACvD,KAAK;AACL;IACA;IACA,IAAI,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACrB,QAAQ,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAChC,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;IACA,IAAI,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACpB,QAAQ,IAAI,QAAQ,GAAG,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACtH,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;IACrC,KAAK;AACL;IACA;IACA,IAAI,SAAS,CAAC,MAAM,EAAE;IACtB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACnD,KAAK;AACL;IACA;IACA,IAAI,UAAU,CAAC,MAAM,EAAE;IACvB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;IACpD,KAAK;AACL;IACA,IAAI,QAAQ,CAAC,KAAK,EAAE;IACpB;IACA,QAAQ,IAAI,CAAC,CAAC;IACd,QAAQ,IAAI,CAAC,GAAG,8BAA8B,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IAC5D,YAAY,IAAI,KAAK,CAAC;IACtB,YAAY,MAAM,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9B,YAAY,MAAM,UAAU,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACpC,YAAY,QAAQ,IAAI;IACxB,gBAAgB,KAAK,KAAK,CAAC;IAC3B,gBAAgB,KAAK,MAAM;IAC3B,oBAAoB,IAAI,KAAK,GAAG,8DAA8D,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACjH;IACA,wBAAwB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACtE,wBAAwB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACtE,wBAAwB,IAAI,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;IACtE,wBAAwB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,qBAAqB;IACrB,oBAAoB,KAAK,KAAK,GAAG,oEAAoE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IACxH;IACA,wBAAwB,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC9E,wBAAwB,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC9E,wBAAwB,IAAI,CAAC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;IAC9E,wBAAwB,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,qBAAqB;IACrB,oBAAoB,MAAM;IAC1B,gBAAgB,KAAK,KAAK,CAAC;IAC3B,gBAAgB,KAAK,MAAM;IAC3B,oBAAoB,IAAI,KAAK,GAAG,wEAAwE,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;IAC3H;IACA,wBAAwB,MAAM,CAAC,GAAG,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACvD,wBAAwB,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;IAC/D,wBAAwB,MAAM,CAAC,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC;IAC/D,wBAAwB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpD,qBAAqB;IACrB,oBAAoB,MAAM;IAC1B,aAAa;IACb;IACA,SAAS,MAAM,IAAI,CAAC,GAAG,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;IACxD,YAAY,MAAM,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IAC7B,YAAY,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC;IACpC;IACA,YAAY,IAAI,IAAI,KAAK,CAAC,EAAE;IAC5B,gBAAgB,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACpE,gBAAgB,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACpE,gBAAgB,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACpE,gBAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C;IACA,aAAa,MAAM,IAAI,IAAI,KAAK,CAAC,EAAE;IACnC,gBAAgB,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACpE,gBAAgB,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACpE,gBAAgB,IAAI,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;IACpE,gBAAgB,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC5C,aAAa;IACb,SAAS;IACT;IACA,QAAQ,IAAI,KAAK,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;IACvC,YAAY,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;IAC5C,SAAS;IACT,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;IACA;IACA;AACA;IACA;IACA,IAAI,SAAS,CAAC,KAAK,iBAAiB;IACpC,QAAQ,QAAQ,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,GAAG,EAAE;IACtD,KAAK;AACL;IACA;IACA,IAAI,GAAG,GAAG;IACV,QAAQ,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,EAAE,EAAE;IACxE,KAAK;AACL;IACA;IACA,IAAI,SAAS,CAAC,QAAQ,gBAAgB;IACtC,QAAQ,IAAI,QAAQ,KAAK,SAAS,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE,QAAQ,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IACvF,QAAQ,OAAO,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;IAC5C,KAAK;AACL;IACA;IACA,IAAI,OAAO,SAAS,CAAC,QAAQ,GAAG,CAAC,CAAC;IAClC,QAAQ,OAAO,GAAG,GAAG,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,MAAM,CAAC,EAAE,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5E,KAAK;AACL;IACA;IACA,IAAI,OAAO,SAAS,GAAG;IACvB,QAAQ,OAAO,OAAO,CAAC,SAAS,EAAE,CAAC,GAAG,EAAE,CAAC;IACzC,KAAK;AACL;IACA;IACA,IAAI,SAAS,CAAC,KAAK,EAAE;IACrB,QAAQ,IAAI,GAAG,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,KAAK,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;IACxE,QAAQ,IAAI,IAAI,GAAG,CAAC,KAAK,IAAI,SAAS,IAAI,GAAG,GAAG,IAAI,GAAG,KAAK,GAAG,GAAG,CAAC;IACnE,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;IACA,IAAI,MAAM,GAAG;IACb,QAAQ,OAAO,IAAI,CAAC,GAAG,EAAE,CAAC;IAC1B,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,KAAK,GAAG;IACZ,QAAQ,OAAO,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;IAC5D,KAAK;AACL;IACA;IACA,IAAI,MAAM,CAAC,MAAM,EAAE;IACnB,QAAQ,IAAI,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;IACrC,YAAY,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACxC,YAAY,MAAM,CAAC,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC9C,YAAY,MAAM,CAAC,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAC7C,SAAS,MAAM;IACf,YAAY,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC;IAChG,SAAS;IACT,KAAK;AACL;IACA;IACA,IAAI,MAAM,CAAC,MAAM,EAAE;IACnB,QAAQ,IAAI,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;IACrC,YAAY,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAC9B,YAAY,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAC9B,YAAY,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAC9B,SAAS,MAAM;IACf,YAAY,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,CAAC;IACvD,SAAS;IACT,KAAK;AACL;IACA;IACA,IAAI,MAAM,CAAC,MAAM,EAAE;IACnB,QAAQ,IAAI,QAAQ,GAAG,kBAAkB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;IACxF,QAAQ,IAAI,MAAM,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE;IACrC,YAAY,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;IACtC,YAAY,MAAM,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxC,YAAY,MAAM,CAAC,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;IACvC,SAAS,MAAM;IACf,YAAY,OAAO,EAAE,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,KAAK,CAAC,QAAQ,CAAC,EAAE,CAAC;IAClF,SAAS;IACT,KAAK;AACL;IACA;IACA,IAAI,OAAO,CAAC,KAAK,GAAG,EAAE,EAAE,MAAM,GAAG,CAAC,EAAE;IACpC,QAAQ,KAAK,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IAC/B,QAAQ,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACnC,QAAQ,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;IACnC,QAAQ,OAAO,KAAK,CAAC;IACrB,KAAK;AACL;IACA;IACA;IACA;AACA;IACA,IAAI,GAAG,GAAG,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IAC7D,IAAI,KAAK,GAAG,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IAC/D,IAAI,IAAI,GAAG,EAAE,OAAO,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;AAC9D;IACA,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE;IAC7B,IAAI,MAAM,GAAG,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE;IAC/B,IAAI,KAAK,GAAG,EAAE,OAAO,IAAI,CAAC,CAAC,CAAC,EAAE;AAC9B;IACA,IAAI,GAAG,GAAG,EAAE,OAAO,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;IACrC,IAAI,UAAU,GAAG,EAAE,OAAO,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;IACnD,IAAI,SAAS,GAAG,EAAE,OAAO,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;AACjD;IACA,IAAI,IAAI,GAAG,EAAE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC,EAAE;AACvC;IACA;IACA,IAAI,MAAM,GAAG;IACb,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IACpD,YAAY,IAAI,UAAU,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC;IACzD,SAAS;IACT,KAAK;AACL;IACA;IACA;IACA;AACA;IACA;IACA,IAAI,GAAG,CAAC,KAAK,EAAE;IACf,QAAQ,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,oDAAoD,CAAC,CAAC,CAAC;IAClG,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAClF,KAAK;AACL;IACA;IACA,IAAI,SAAS,CAAC,MAAM,EAAE;IACtB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,GAAG,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,MAAM,CAAC,CAAC;IAC7F,KAAK;AACL;IACA;IACA,IAAI,UAAU,CAAC,MAAM,EAAE;IACvB,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;IAC/E,KAAK;AACL;IACA;IACA;IACA;IACA;IACA,IAAI,QAAQ,CAAC,MAAM,GAAG,GAAG,gCAAgC;IACzD,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACvC,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACtC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,MAAM,EAAC;IACpC,QAAQ,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7B,QAAQ,OAAO,IAAI,CAAC;IACpB,KAAK;AACL;IACA;IACA;IACA;IACA;IACA;IACA,IAAI,MAAM,CAAC,MAAM,GAAG,GAAG,gCAAgC;IACvD,QAAQ,IAAI,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IAChC,QAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;IACvC,QAAQ,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,GAAG,MAAM,CAAC;IAC/C,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACpC,KAAK;AACL;IACA;IACA,IAAI,SAAS,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,GAAG,YAAY,EAAE,EAAE,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE;IAC1F,IAAI,SAAS,CAAC,OAAO,GAAG,GAAG,EAAE,IAAI,GAAG,YAAY,EAAE;IAClD,QAAQ,IAAI,IAAI,GAAG,CAAC,CAAC;IACrB,QAAQ,QAAQ,IAAI;IACpB,YAAY,KAAK,YAAY;IAC7B,gBAAgB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;IAC3E,YAAY,KAAK,SAAS,CAAC;IAC3B,YAAY;IACZ,gBAAgB,IAAI,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;IACtD,SAAS;IACT,QAAQ,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvC,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,OAAO,GAAG,IAAI,CAAC,CAAC;IAC9D,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,OAAO,GAAG,IAAI,CAAC,CAAC;IAC9D,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,OAAO,GAAG,IAAI,CAAC,CAAC;IAC9D,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,KAAK;AACL;IACA,IAAI,SAAS,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACvB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,GAAG,CAAC,EAAE,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC,CAAC;IACxF,KAAK;AACL;IACA;IACA,IAAI,GAAG,CAAC,KAAK,EAAE,OAAO,GAAG,GAAG,EAAE;IAC9B,QAAQ,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,oDAAoD,CAAC,CAAC,CAAC;IAClG,QAAQ,OAAO,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACvC,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACjE,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACjE,QAAQ,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,GAAG,GAAG,OAAO,CAAC,KAAK,OAAO,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACjE,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,KAAK;AACL;IACA,IAAI,QAAQ,CAAC,KAAK,EAAE;IACpB,QAAQ,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,yDAAyD,CAAC,CAAC,CAAC;IACvG,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAClF,KAAK;AACL;IACA;IACA,IAAI,cAAc,CAAC,MAAM,EAAE;IAC3B,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC;IAC/E,KAAK;AACL;IACA,IAAI,gBAAgB,GAAG;IACvB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IACtC,KAAK;AACL;IACA;IACA,IAAI,YAAY,CAAC,OAAO,GAAG,EAAE,EAAE;IAC/B,QAAQ,IAAI,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,OAAO,CAAC,CAAC;IACvD,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IACxE,KAAK;AACL;IACA;IACA,IAAI,SAAS,GAAG;IAChB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC9G,KAAK;AACL;IACA,IAAI,gBAAgB,GAAG;IACvB,QAAQ,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;IACtC,KAAK;AACL;IACA;IACA,IAAI,YAAY,CAAC,OAAO,GAAG,EAAE,EAAE;IAC/B,QAAQ,IAAI,MAAM,GAAG,WAAW,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,OAAO,CAAC,CAAC;IAC1D,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,EAAE,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,CAAC,UAAU,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;IAC1G,KAAK;AACL;IACA;IACA,IAAI,QAAQ,CAAC,KAAK,EAAE;IACpB,QAAQ,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,yDAAyD,CAAC,CAAC,CAAC;IACvG,QAAQ,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IAClF,KAAK;AACL;IACA;IACA;IACA;AACA;IACA;IACA,IAAI,MAAM,CAAC,KAAK,EAAE;IAClB,QAAQ,IAAI,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC,uDAAuD,CAAC,CAAC,CAAC;IACrG,QAAQ,QAAQ,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE;IAC5F,KAAK;AACL;IACA;IACA,IAAI,OAAO,CAAC,KAAK,EAAE;IACnB,QAAQ,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;IAClC,KAAK;AACL;IACA;IACA,IAAI,MAAM,GAAG;IACb,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,GAAG,EAAE,CAAC;IAC7B,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC;IACnC,QAAQ,QAAQ,CAAC,CAAC,GAAG,IAAI,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,EAAE;IACpE,KAAK;AACL;IACA;IACA,IAAI,OAAO,GAAG;IACd,QAAQ,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAE,EAAE;IACjC,KAAK;AACL;IACA,CAAC;AACD;IACA;IACA;IACA;AACA;IACA,SAAS,KAAK,CAAC,MAAM,EAAE,EAAE,QAAQ,MAAM,CAAC,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,CAAC,KAAK,SAAS,EAAE,EAAE;IAC/G,SAAS,KAAK,CAAC,MAAM,EAAE,EAAE,QAAQ,MAAM,CAAC,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,CAAC,KAAK,SAAS,EAAE,EAAE;IAC/G,SAAS,KAAK,CAAC,MAAM,EAAE,EAAE,QAAQ,MAAM,CAAC,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,CAAC,KAAK,SAAS,IAAI,MAAM,CAAC,CAAC,KAAK,SAAS,EAAE,EAAE;AAC/G;IACA,SAAS,KAAK,CAAC,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,OAAO,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE;AAC/E;IACA,SAAS,GAAG,CAAC,QAAQ,EAAE,EAAE,OAAO,KAAK,CAAC,CAAC,QAAQ,GAAG,QAAQ,KAAK,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IAC7E,SAAS,KAAK,CAAC,QAAQ,EAAE,EAAE,OAAO,KAAK,CAAC,CAAC,QAAQ,GAAG,QAAQ,KAAK,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IAC9E,SAAS,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,KAAK,EAAE,QAAQ,GAAG,QAAQ,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;IACxE,SAAS,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE;IACzD,SAAS,MAAM,CAAC,QAAQ,EAAE,EAAE,OAAO,KAAK,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE;IAC7D,SAAS,KAAK,CAAC,QAAQ,EAAE,EAAE,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,KAAK,CAAC,EAAE;AAC3D;IACA,SAAS,GAAG,CAAC,QAAQ,EAAE,EAAE,OAAO,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE;IACrD,SAAS,IAAI,CAAC,QAAQ,EAAE,EAAE,OAAO,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,EAAE;IACvD,SAAS,UAAU,CAAC,QAAQ,EAAE,EAAE,OAAO,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE;IAC5D,SAAS,SAAS,CAAC,QAAQ,EAAE,EAAE,OAAO,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,EAAE;AAC3D;IACA,SAAS,KAAK,CAAC,CAAC,EAAE,CAAC,EAAE,SAAS,GAAG,MAAM,EAAE,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,EAAE;AACrG;IACA,SAAS,WAAW,CAAC,KAAK,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,EAAE;IAChD,IAAI,OAAO,KAAK,IAAI,GAAG,EAAE,KAAK,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;IAC9C,IAAI,OAAO,KAAK,IAAI,GAAG,EAAE,KAAK,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;IAC9C,IAAI,OAAO,KAAK,CAAC;IACjB,CAAC;AACD;IACA;IACA;IACA;AACA;IACA,IAAI,OAAO,CAAC;IACZ,IAAI,KAAK,CAAC;IACV,IAAI,KAAK,CAAC;IACV,IAAI,KAAK,CAAC;AACV;IACA,SAAS,GAAG,CAAC,QAAQ,EAAE,OAAO,GAAG,GAAG,EAAE;IACtC,IAAI,IAAI,QAAQ,KAAK,OAAO,EAAE;IAC9B,QAAQ,IAAI,QAAQ,KAAK,SAAS,IAAI,QAAQ,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC;AAClE;IACA,QAAQ,MAAM,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;IAC5E,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/D,QAAQ,MAAM,KAAK,GAAG,GAAG,GAAG,GAAG,CAAC;IAChC,QAAQ,KAAK,GAAG,CAAC,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC;AAChC;IACA,QAAQ,IAAI,KAAK,KAAK,CAAC,EAAE;IACzB,YAAY,KAAK,GAAG,KAAK,GAAG,CAAC,CAAC;IAC9B,SAAS,MAAM;IACf,YAAY,KAAK,GAAG,CAAC,KAAK,IAAI,GAAG,KAAK,KAAK,IAAI,GAAG,GAAG,GAAG,CAAC,KAAK,KAAK,IAAI,CAAC,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;IACvF,YAAY,QAAQ,GAAG;IACvB,gBAAgB,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM;IACzE,gBAAgB,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM;IAC3D,gBAAgB,KAAK,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,CAAC,CAAC,MAAM;IAC3D,aAAa;IACb,YAAY,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;IAC3C,YAAY,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,IAAI,GAAG,CAAC;IACxC,SAAS;AACT;IACA,QAAQ,OAAO,GAAG,QAAQ,CAAC;IAC3B,KAAK;AACL;IACA,IAAI,QAAQ,OAAO;IACnB,QAAQ,KAAK,GAAG,EAAE,OAAO,KAAK,CAAC;IAC/B,QAAQ,KAAK,GAAG,EAAE,OAAO,KAAK,CAAC;IAC/B,QAAQ,KAAK,GAAG,EAAE,OAAO,KAAK,CAAC;IAC/B,QAAQ,SAAS,OAAO,CAAC,IAAI,CAAC,CAAC,2BAA2B,EAAE,OAAO,CAAC,oBAAoB,CAAC,CAAC,CAAC;IAC3F,KAAK;AACL;IACA,IAAI,OAAO,CAAC,CAAC;IACb,CAAC;AACD;IACA;IACA;IACA;AACA;IACA,MAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;IAC7B,MAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;IAC7B,MAAM,OAAO,GAAG,IAAI,QAAQ,EAAE,CAAC;AAC/B;IACA,SAAS,aAAa,CAAC,QAAQ,EAAE,QAAQ,GAAG,QAAQ,CAAC,GAAG,EAAE;IAC1D,IAAI,IAAI,YAAY,GAAG,GAAG,GAAG,QAAQ,CAAC,MAAM,CAAC;IAC7C,IAAI,IAAI,WAAW,GAAG,YAAY,CAAC;IACnC,IAAI,IAAI,SAAS,GAAG,CAAC,CAAC;AACtB;IACA,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,QAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;IAC9C,QAAQ,IAAI,QAAQ,GAAG,WAAW,EAAE;IACpC,YAAY,IAAI,OAAO,GAAG,CAAC,WAAW,GAAG,QAAQ,IAAI,YAAY,CAAC;IAClE,YAAY,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;IAC/C,YAAY,OAAO,KAAK,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,GAAG,EAAE,CAAC;IAC5E,SAAS,MAAM;IACf,YAAY,WAAW,GAAG,WAAW,GAAG,YAAY,CAAC;IACrD,YAAY,SAAS,GAAG,SAAS,GAAG,EAAC;IACrC,SAAS;IACT,KAAK;IACL,CAAC;AACD;IACA;IACA;IACA;AACA;IACA,MAAM,YAAY,GAAG,IAAI,QAAQ,EAAE,CAAC;AACpC;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA,SAAS,kBAAkB,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,GAAG,GAAG,EAAE,KAAK,GAAG,IAAI,CAAC,UAAU,EAAE;IAC9E,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACjC,IAAI,EAAE,GAAG,KAAK,CAAC,EAAE,GAAG,KAAK,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;AACjC;IACA;IACA;IACA,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;IACnE,IAAI,IAAI,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACnE;IACA,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;IACtB,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;IACtB,IAAI,IAAI,EAAE,GAAG,GAAG,GAAG,EAAE,CAAC;AACtB;IACA,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC1B,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC1B,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC1B,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC1B,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC1B,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC1B,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;IAC1B,IAAI,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;AAC1B;IACA,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnG,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnG,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnG;I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AAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACrG,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACrG,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;IACrG,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACrG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACtG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACtG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACtG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACtG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACtG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACtG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;IACtG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,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"}